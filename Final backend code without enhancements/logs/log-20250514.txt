2025-05-14 11:58:23.317 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 11:58:23.722 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 11:58:23.751 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 11:58:23.758 +05:30 [INF] Hosting environment: Development
2025-05-14 11:58:23.760 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 11:59:13.362 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-14 11:59:13.483 +05:30 [INF] CORS policy execution successful.
2025-05-14 11:59:13.510 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 156.9298ms
2025-05-14 11:59:13.528 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-14 11:59:13.536 +05:30 [INF] CORS policy execution successful.
2025-05-14 11:59:13.546 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 11:59:13.610 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-14 11:59:13.953 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 11:59:13.988 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 364.5569ms
2025-05-14 11:59:13.992 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 11:59:13.995 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 467.0064ms
2025-05-14 12:01:58.474 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:01:58.483 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:01:58.487 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.5427ms
2025-05-14 12:01:58.492 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:01:58.587 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:01:58.595 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:01:58.614 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:01:58.646 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:01:58.684 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 65.0954ms
2025-05-14 12:01:58.689 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:01:58.691 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 198.8772ms
2025-05-14 12:02:00.784 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:02:00.790 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:02:00.792 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:02:00.796 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:02:00.802 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:02:00.806 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 5.8366ms
2025-05-14 12:02:00.809 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:02:00.810 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 26.1533ms
2025-05-14 12:02:01.533 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:02:01.540 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:02:01.548 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:02:01.550 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:02:01.556 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:02:01.558 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 4.2775ms
2025-05-14 12:02:01.560 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:02:01.563 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 30.852ms
2025-05-14 12:20:51.239 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:20:51.246 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:20:51.247 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.2004ms
2025-05-14 12:20:51.253 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:20:51.258 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:20:51.262 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:51.266 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:20:51.270 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:20:51.271 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1.9094ms
2025-05-14 12:20:51.273 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:51.273 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 20.2289ms
2025-05-14 12:20:53.289 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:20:53.296 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:20:53.297 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:53.299 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:20:53.302 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:20:53.305 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.7435ms
2025-05-14 12:20:53.306 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:53.307 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 18.3567ms
2025-05-14 12:20:54.240 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:20:54.246 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:20:54.247 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:54.249 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:20:54.253 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:20:54.254 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1.7268ms
2025-05-14 12:20:54.255 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:20:54.256 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 16.5335ms
2025-05-14 12:22:35.111 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:22:35.128 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:35.128 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.992ms
2025-05-14 12:22:35.131 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:22:35.134 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:35.135 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:35.136 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:22:35.139 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:22:35.143 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 5.5933ms
2025-05-14 12:22:35.147 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:35.148 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 16.7159ms
2025-05-14 12:22:36.826 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:22:36.831 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:36.832 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:36.833 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:22:36.835 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:22:36.837 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1.6884ms
2025-05-14 12:22:36.838 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:36.840 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 14.0124ms
2025-05-14 12:22:41.897 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:22:41.904 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:41.905 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.1901ms
2025-05-14 12:22:41.914 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:22:41.917 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:41.918 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:41.919 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:22:41.921 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:22:41.922 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 1.7946ms
2025-05-14 12:22:41.926 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:41.928 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 13.7254ms
2025-05-14 12:22:43.055 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:22:43.065 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:22:43.066 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:43.067 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:22:43.069 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:22:43.071 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.1295ms
2025-05-14 12:22:43.073 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:22:43.074 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 18.4435ms
2025-05-14 12:28:32.000 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:28:32.012 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:28:32.014 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.4243ms
2025-05-14 12:28:32.019 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:28:32.023 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:28:32.024 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:28:32.025 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:28:32.028 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:28:32.031 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 3.9961ms
2025-05-14 12:28:32.033 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:28:32.035 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 16.1842ms
2025-05-14 12:28:33.926 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:28:33.932 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:28:33.933 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:28:33.934 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:28:33.939 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:28:33.940 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.3861ms
2025-05-14 12:28:33.942 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:28:33.943 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 16.8562ms
2025-05-14 12:29:45.528 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:29:45.533 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:29:45.535 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.0334ms
2025-05-14 12:29:45.546 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:29:45.551 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:29:45.554 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:45.557 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:29:45.563 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:29:45.565 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.7138ms
2025-05-14 12:29:45.567 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:45.568 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 21.3416ms
2025-05-14 12:29:46.327 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:29:46.332 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:29:46.333 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:46.335 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:29:46.338 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:29:46.341 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 3.3157ms
2025-05-14 12:29:46.342 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:46.344 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 17.457ms
2025-05-14 12:29:47.629 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:29:47.639 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:29:47.640 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:47.642 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:29:47.646 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:29:47.648 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.4105ms
2025-05-14 12:29:47.649 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:29:47.651 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 22.4821ms
2025-05-14 12:38:32.372 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:38:32.379 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:38:32.380 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.018ms
2025-05-14 12:38:32.384 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 12:38:32.389 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:38:32.391 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:38:32.393 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:38:32.397 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:38:32.400 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 4.2858ms
2025-05-14 12:38:32.403 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:38:32.404 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 20.1701ms
2025-05-14 12:44:11.436 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:44:11.444 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:44:11.446 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.6493ms
2025-05-14 12:44:11.452 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 12:44:11.455 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:44:11.456 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:44:11.458 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:44:11.465 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:44:11.469 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 4.6346ms
2025-05-14 12:44:11.471 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:44:11.473 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 21.5117ms
2025-05-14 12:50:30.874 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:50:30.896 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:50:30.898 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 24.1288ms
2025-05-14 12:50:30.903 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 12:50:30.907 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:50:30.909 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:50:30.911 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:50:30.915 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:50:30.917 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 2.8716ms
2025-05-14 12:50:30.922 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:50:30.924 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 20.6025ms
2025-05-14 12:51:21.704 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 12:51:21.711 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:51:21.712 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.9253ms
2025-05-14 12:51:21.718 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 12:51:21.723 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:51:21.724 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:51:21.726 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:51:21.733 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:51:21.736 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 3.9229ms
2025-05-14 12:51:21.739 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:51:21.741 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 22.6085ms
2025-05-14 12:51:22.415 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 12:51:22.423 +05:30 [INF] CORS policy execution successful.
2025-05-14 12:51:22.425 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:51:22.427 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 12:51:22.433 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-14 12:51:22.437 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 5.1576ms
2025-05-14 12:51:22.439 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 12:51:22.441 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 400 null application/problem+json; charset=utf-8 26.8147ms
2025-05-14 12:51:54.244 +05:30 [INF] Application is shutting down...
2025-05-14 13:04:34.342 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 13:04:34.476 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 13:04:34.481 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 13:04:34.484 +05:30 [INF] Hosting environment: Development
2025-05-14 13:04:34.485 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 13:05:00.668 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:05:02.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:05:03.548 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:05:05.225 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:05:18.991 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:05:22.320 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.886 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 234560.3246ms
2025-05-14 13:09:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 251657.0055ms
2025-05-14 13:09:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 254470.6023ms
2025-05-14 13:09:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 256216.395ms
2025-05-14 13:09:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 253334.2208ms
2025-05-14 13:09:16.887 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 237892.0805ms
2025-05-14 13:09:16.894 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.902 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.907 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.914 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.936 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.945 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.956 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.956 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.960 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.963 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.967 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.969 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:16.970 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 76.114ms
2025-05-14 13:09:16.971 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 68.6926ms
2025-05-14 13:09:16.975 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 67.7062ms
2025-05-14 13:09:16.976 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 62.3059ms
2025-05-14 13:09:16.980 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 44.5415ms
2025-05-14 13:09:16.982 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 37.2778ms
2025-05-14 13:09:16.987 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.992 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:09:16.997 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.000 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.003 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.009 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.012 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.016 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.039 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 51.735ms
2025-05-14 13:09:17.040 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 47.9771ms
2025-05-14 13:09:17.048 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.056 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.109 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.178 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.203 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.234 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.264 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.296 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.325 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.329 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.331 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.336 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.342 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.344 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.345 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.353 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.359 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.359 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.359 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.359 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.360 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.372 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.372 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.372 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.374 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.376 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.377 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.379 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 323.1502ms
2025-05-14 13:09:17.384 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 374.362ms
2025-05-14 13:09:17.386 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 383.4082ms
2025-05-14 13:09:17.388 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 339.5764ms
2025-05-14 13:09:17.390 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 393.1121ms
2025-05-14 13:09:17.393 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 392.9934ms
2025-05-14 13:09:17.399 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.414 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.420 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.424 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:09:17.440 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.443 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.449 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.455 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:09:17.470 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.489 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.512 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.548 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:39:17 AM'.
2025-05-14 13:09:17.559 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.568 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.579 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.587 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:09:17.588 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.589 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.590 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.594 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:09:17.598 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.601 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.603 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.604 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:09:17.605 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 206.0229ms
2025-05-14 13:09:17.607 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 193.1448ms
2025-05-14 13:09:17.613 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 193.1821ms
2025-05-14 13:09:17.615 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 190.8349ms
2025-05-14 13:09:20.589 +05:30 [INF] Application is shutting down...
2025-05-14 13:10:05.974 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 13:10:06.094 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 13:10:06.099 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 13:10:06.102 +05:30 [INF] Hosting environment: Development
2025-05-14 13:10:06.103 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 13:10:10.868 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 13:10:10.930 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:10:10.940 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 72.6863ms
2025-05-14 13:10:10.951 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:10:11.030 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:11 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:10:11.056 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:11 AM'.
2025-05-14 13:10:11.063 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:10:11.069 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:10:11.080 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:10:11.084 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 133.7124ms
2025-05-14 13:10:12.442 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:10:12.477 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:12 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:10:12.555 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:12 AM'.
2025-05-14 13:10:12.571 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:10:12.589 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:10:12.606 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:10:12.629 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 185.9629ms
2025-05-14 13:10:13.056 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:10:13.081 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:13 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:10:13.132 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:13 AM'.
2025-05-14 13:10:13.147 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:10:13.152 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:10:13.159 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:10:13.166 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 110.8234ms
2025-05-14 13:10:14.142 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 13:10:14.163 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:14 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 13:10:14.214 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 7:29:13 AM', Current time (UTC): '5/14/2025 7:40:14 AM'.
2025-05-14 13:10:14.222 +05:30 [INF] CORS policy execution successful.
2025-05-14 13:10:14.241 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 13:10:14.260 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 13:10:14.278 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 135.9006ms
2025-05-14 14:14:41.267 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-14 14:14:41.277 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:14:41.279 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 11.2286ms
2025-05-14 14:14:41.286 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-14 14:14:41.293 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:14:41.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 14:14:41.331 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-14 14:14:41.531 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:14:41.558 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 217.7833ms
2025-05-14 14:14:41.560 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 14:14:41.564 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 278.3309ms
2025-05-14 14:15:00.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:15:00.413 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:15:00.418 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:15:00.434 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:15:00.436 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 23.5962ms
2025-05-14 14:15:00.440 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 27.5441ms
2025-05-14 14:15:00.458 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:15:00.462 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:15:00.490 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:15:00.490 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:15:00.491 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:00.492 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:00.502 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:15:00.502 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:15:00.540 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:15:00.540 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:15:00.622 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:15:00.622 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:15:00.631 +05:30 [ERR] Error during allocation calculation.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
2025-05-14 14:15:00.631 +05:30 [ERR] Error during allocation calculation.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
2025-05-14 14:15:00.662 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 155.0285ms
2025-05-14 14:15:00.662 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 151.7021ms
2025-05-14 14:15:00.680 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:00.680 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:00.703 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\AllocationController.cs:line 34
   at lambda_method12(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-14 14:15:00.703 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\AllocationController.cs:line 34
   at lambda_method11(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-14 14:15:00.758 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 300.7126ms
2025-05-14 14:15:00.771 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 309.3075ms
2025-05-14 14:15:03.802 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:15:03.807 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:15:03.809 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:03.813 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:15:03.819 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:15:03.822 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:15:03.824 +05:30 [ERR] Error during allocation calculation.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
2025-05-14 14:15:03.828 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 9.7041ms
2025-05-14 14:15:03.836 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:15:03.838 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\AllocationController.cs:line 34
   at lambda_method11(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-14 14:15:03.870 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 68.7183ms
2025-05-14 14:19:27.795 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:19:27.804 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:27.806 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.2727ms
2025-05-14 14:19:27.810 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:19:27.820 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:27.821 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:19:27.825 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:19:27.835 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:19:27.839 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:19:27.841 +05:30 [ERR] Error during allocation calculation.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
2025-05-14 14:19:27.852 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 17.781ms
2025-05-14 14:19:27.855 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:19:27.858 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: The given key 'short' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 97
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\AllocationController.cs:line 34
   at lambda_method11(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-14 14:19:27.993 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 183.198ms
2025-05-14 14:19:43.912 +05:30 [INF] Application is shutting down...
2025-05-14 14:19:48.934 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 14:19:49.065 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 14:19:49.070 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 14:19:49.073 +05:30 [INF] Hosting environment: Development
2025-05-14 14:19:49.074 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 14:19:52.707 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:19:52.771 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:52.781 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 76.5019ms
2025-05-14 14:19:52.792 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:19:52.879 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:52.887 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:19:52.916 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:19:53.014 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:19:53.041 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:19:53.044 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:19:53.061 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:19:53.069 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:19:53.071 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:19:53.073 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:19:53.078 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:19:53.092 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:19:53.096 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:19:53.097 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:19:53.098 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:19:53.100 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:19:53.101 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:19:53.102 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:19:53.103 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:19:53.104 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:19:53.105 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:19:53.138 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:19:53.157 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:19:53.159 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:19:53.167 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:19:53.184 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 261.9622ms
2025-05-14 14:19:53.187 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:19:53.190 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 399.5361ms
2025-05-14 14:19:53.474 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:19:53.477 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:19:53.482 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:53.482 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:53.484 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.7093ms
2025-05-14 14:19:53.486 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.8673ms
2025-05-14 14:19:53.492 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:19:53.494 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:19:53.504 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:53.505 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:19:53.509 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:19:53.508 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:19:53.516 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:19:53.516 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:19:53.524 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:19:53.527 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:19:53.532 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:19:53.533 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:19:53.537 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:19:53.543 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 21.88ms
2025-05-14 14:19:53.545 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:19:53.547 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 53.1288ms
2025-05-14 14:19:53.551 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:19:53.567 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 42.2147ms
2025-05-14 14:19:53.570 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:19:53.572 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 80.4968ms
2025-05-14 14:21:39.322 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:21:39.322 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:21:39.328 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:39.332 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:39.334 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.4771ms
2025-05-14 14:21:39.335 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 12.8219ms
2025-05-14 14:21:39.355 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:21:39.355 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:21:39.360 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:39.364 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:39.366 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:21:39.369 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:21:39.367 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:21:39.373 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:21:39.374 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:21:39.376 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:21:39.378 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:21:39.380 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:21:39.383 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:21:39.386 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.1416ms
2025-05-14 14:21:39.389 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:21:39.399 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:21:39.404 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 28.0709ms
2025-05-14 14:21:39.404 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 49.3294ms
2025-05-14 14:21:39.409 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:21:39.415 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 59.7258ms
2025-05-14 14:21:58.942 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:21:58.954 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:58.956 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.2107ms
2025-05-14 14:21:58.961 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 14:21:58.966 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:58.967 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:21:58.969 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:21:58.973 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:21:58.977 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:21:58.981 +05:30 [INF] Looking up base allocation for key: Low+Short
2025-05-14 14:21:58.984 +05:30 [INF] Base allocation found: {"equity":10,"fixedIncome":40,"commodities":5,"cash":40,"realEstate":5}
2025-05-14 14:21:58.988 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:21:58.991 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:21:58.995 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:21:59.001 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:21:59.010 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:21:59.016 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:21:59.021 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:21:59.026 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:21:59.031 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:21:59.040 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:21:59.044 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:21:59.049 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:21:59.059 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:21:59.061 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:21:59.065 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:21:59.076 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:21:59.079 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:21:59.086 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:21:59.089 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 116.9411ms
2025-05-14 14:21:59.093 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:21:59.095 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 134.6865ms
2025-05-14 14:21:59.110 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:21:59.112 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:21:59.115 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:59.119 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:59.121 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.2921ms
2025-05-14 14:21:59.123 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.9661ms
2025-05-14 14:21:59.128 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:21:59.135 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:21:59.138 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:59.142 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:21:59.143 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:21:59.144 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:21:59.146 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:21:59.147 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:21:59.153 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:21:59.159 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:21:59.161 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:21:59.162 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:21:59.163 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:21:59.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:21:59.168 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.4583ms
2025-05-14 14:21:59.171 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 14.7236ms
2025-05-14 14:21:59.173 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:21:59.175 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:21:59.176 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 48.6825ms
2025-05-14 14:21:59.180 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 44.8388ms
2025-05-14 14:22:47.472 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:22:47.484 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.486 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.7476ms
2025-05-14 14:22:47.492 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 14:22:47.495 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.497 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:22:47.499 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:22:47.506 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:22:47.509 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:22:47.510 +05:30 [INF] Looking up base allocation for key: Low+Short
2025-05-14 14:22:47.512 +05:30 [INF] Base allocation found: {"equity":10,"fixedIncome":40,"commodities":5,"cash":40,"realEstate":5}
2025-05-14 14:22:47.514 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:22:47.517 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:22:47.521 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:22:47.524 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:22:47.531 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:22:47.534 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:22:47.540 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:22:47.542 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:22:47.546 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:22:47.549 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:22:47.554 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:22:47.558 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:22:47.561 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:22:47.564 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:22:47.568 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:22:47.578 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:22:47.582 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:22:47.588 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:22:47.592 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 87.1392ms
2025-05-14 14:22:47.596 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:22:47.599 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 107.0319ms
2025-05-14 14:22:47.616 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:22:47.619 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:22:47.622 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.627 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.629 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 12.6059ms
2025-05-14 14:22:47.630 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.0585ms
2025-05-14 14:22:47.635 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:22:47.641 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:22:47.645 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.652 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:22:47.654 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:22:47.657 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:22:47.660 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:22:47.663 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:22:47.671 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:22:47.679 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:22:47.683 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:22:47.688 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:22:47.691 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:22:47.693 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:22:47.702 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 31.1555ms
2025-05-14 14:22:47.705 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 26.4647ms
2025-05-14 14:22:47.710 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:22:47.715 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:22:47.721 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 85.3913ms
2025-05-14 14:22:47.723 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 82.2394ms
2025-05-14 14:23:00.977 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:23:00.977 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:23:00.990 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:01.003 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:01.006 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 29.8572ms
2025-05-14 14:23:01.009 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 31.9558ms
2025-05-14 14:23:01.020 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:23:01.032 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:23:01.038 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:01.045 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:01.048 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:23:01.049 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:23:01.052 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:23:01.055 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:23:01.061 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:23:01.066 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:23:01.069 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:23:01.072 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:23:01.073 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:23:01.075 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:23:01.078 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 17.1969ms
2025-05-14 14:23:01.082 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.9189ms
2025-05-14 14:23:01.084 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:23:01.087 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:23:01.090 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 69.7543ms
2025-05-14 14:23:01.093 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 60.9723ms
2025-05-14 14:23:45.733 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:23:45.747 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.750 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.9107ms
2025-05-14 14:23:45.755 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:23:45.761 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.763 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:23:45.765 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:23:45.769 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:23:45.771 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:23:45.772 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:23:45.775 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:23:45.776 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:23:45.778 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:23:45.780 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:23:45.782 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:23:45.786 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:23:45.787 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:23:45.790 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:23:45.792 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:23:45.794 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:23:45.797 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:23:45.799 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:23:45.800 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:23:45.803 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:23:45.806 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:23:45.807 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:23:45.811 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:23:45.813 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:23:45.815 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:23:45.816 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.206ms
2025-05-14 14:23:45.818 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:23:45.821 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 65.1381ms
2025-05-14 14:23:45.837 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:23:45.840 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:23:45.841 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.845 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.846 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.2587ms
2025-05-14 14:23:45.848 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.0418ms
2025-05-14 14:23:45.853 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:23:45.858 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:23:45.863 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.868 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:23:45.870 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:23:45.871 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:23:45.872 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:23:45.874 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:23:45.879 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:23:45.882 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:23:45.884 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:23:45.887 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:23:45.888 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:23:45.891 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:23:45.894 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.0742ms
2025-05-14 14:23:45.897 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.0849ms
2025-05-14 14:23:45.899 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:23:45.903 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:23:45.905 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 51.9332ms
2025-05-14 14:23:45.908 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 50.2561ms
2025-05-14 14:24:10.298 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:24:10.309 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.313 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.3924ms
2025-05-14 14:24:10.319 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:24:10.323 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.324 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:24:10.326 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:24:10.329 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:24:10.333 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:24:10.336 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:24:10.338 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:24:10.340 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:24:10.342 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:24:10.343 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:24:10.345 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:24:10.352 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:24:10.355 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:24:10.358 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:24:10.360 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:24:10.364 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:24:10.368 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:24:10.372 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:24:10.376 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:24:10.379 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:24:10.384 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:24:10.390 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:24:10.395 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:24:10.399 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:24:10.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:24:10.405 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 75.741ms
2025-05-14 14:24:10.406 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:24:10.407 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 88.5864ms
2025-05-14 14:24:10.423 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:24:10.426 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:24:10.428 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.431 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.433 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.7948ms
2025-05-14 14:24:10.434 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.3393ms
2025-05-14 14:24:10.440 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:24:10.445 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:24:10.449 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.454 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:24:10.455 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:24:10.457 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:24:10.458 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:24:10.459 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:24:10.463 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:24:10.467 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:24:10.470 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:24:10.473 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:24:10.475 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:24:10.477 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:24:10.484 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 20.3401ms
2025-05-14 14:24:10.490 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 23.2592ms
2025-05-14 14:24:10.497 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:24:10.502 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:24:10.512 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 66.1614ms
2025-05-14 14:24:10.505 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 64.9643ms
2025-05-14 14:25:09.593 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:25:09.603 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.605 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 11.6023ms
2025-05-14 14:25:09.614 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:25:09.619 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.620 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:25:09.624 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:25:09.629 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:25:09.632 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:25:09.634 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:25:09.638 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:25:09.639 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:25:09.640 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:25:09.642 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:25:09.644 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:25:09.648 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:25:09.649 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:25:09.651 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:25:09.653 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:25:09.655 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:25:09.657 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:25:09.658 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:25:09.660 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:25:09.663 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:25:09.664 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:25:09.666 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:25:09.669 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:25:09.670 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:25:09.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:25:09.674 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 45.2344ms
2025-05-14 14:25:09.675 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:25:09.678 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 63.5554ms
2025-05-14 14:25:09.691 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:25:09.693 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:25:09.697 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.701 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.703 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.8992ms
2025-05-14 14:25:09.704 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.7719ms
2025-05-14 14:25:09.711 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:25:09.715 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:25:09.719 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.723 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:25:09.724 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:25:09.725 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:25:09.728 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:25:09.729 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:25:09.732 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:25:09.734 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:25:09.736 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:25:09.738 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:25:09.738 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:25:09.741 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:25:09.744 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.4897ms
2025-05-14 14:25:09.748 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 14.3618ms
2025-05-14 14:25:09.755 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:25:09.760 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:25:09.762 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 51.1625ms
2025-05-14 14:25:09.764 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 48.115ms
2025-05-14 14:35:07.012 +05:30 [INF] Application is shutting down...
2025-05-14 14:35:11.944 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 14:35:12.088 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 14:35:12.095 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 14:35:12.096 +05:30 [INF] Hosting environment: Development
2025-05-14 14:35:12.097 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 14:35:27.325 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:35:27.495 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:27.517 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 194.8307ms
2025-05-14 14:35:27.548 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:35:27.692 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:27.704 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:35:27.748 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:35:27.976 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:35:28.064 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:35:28.068 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:35:28.089 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:35:28.094 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:35:28.099 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:35:28.106 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:35:28.118 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:35:28.164 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:35:28.169 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:35:28.173 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:35:28.180 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:35:28.183 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:35:28.187 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:35:28.197 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:35:28.206 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:35:28.211 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:35:28.221 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:35:28.310 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:35:28.340 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:35:28.343 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:35:28.360 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:35:28.382 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 625.3605ms
2025-05-14 14:35:28.386 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:35:28.394 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 847.1677ms
2025-05-14 14:35:28.416 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:35:28.424 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:35:28.429 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:28.433 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:28.444 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 28.3896ms
2025-05-14 14:35:28.447 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 21.8896ms
2025-05-14 14:35:28.465 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:35:28.483 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:35:28.498 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:28.504 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:35:28.509 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:35:28.511 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:35:28.519 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:35:28.522 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:35:28.535 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:35:28.545 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:35:28.546 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:35:28.550 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:35:28.562 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:35:28.571 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 40.5382ms
2025-05-14 14:35:28.572 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:35:28.577 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:35:28.594 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 128.7667ms
2025-05-14 14:35:28.597 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 55.2725ms
2025-05-14 14:35:28.612 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:35:28.621 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 138.2329ms
2025-05-14 14:36:03.514 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:36:03.525 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.527 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.0493ms
2025-05-14 14:36:03.535 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:36:03.546 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.552 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:36:03.558 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:36:03.574 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:36:03.583 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:36:03.586 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:36:03.593 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:36:03.596 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:36:03.602 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:36:03.614 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:36:03.627 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:36:03.650 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:36:03.657 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:36:03.661 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:36:03.671 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:36:03.675 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:36:03.680 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:36:03.683 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:36:03.689 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:36:03.691 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:36:03.696 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:36:03.701 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:36:03.711 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:36:03.714 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:36:03.720 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:36:03.725 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 157.6901ms
2025-05-14 14:36:03.728 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:36:03.731 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 195.3823ms
2025-05-14 14:36:03.753 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:36:03.757 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:36:03.763 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.778 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.787 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 34.7524ms
2025-05-14 14:36:03.798 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 41.8147ms
2025-05-14 14:36:03.811 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:36:03.822 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:36:03.828 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.836 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:36:03.840 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:36:03.844 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:36:03.848 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:36:03.850 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:36:03.860 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:36:03.866 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:36:03.872 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:36:03.872 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:36:03.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:36:03.877 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:36:03.892 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 32.4229ms
2025-05-14 14:36:03.895 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 29.0914ms
2025-05-14 14:36:03.905 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:36:03.915 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:36:03.924 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 112.4534ms
2025-05-14 14:36:03.926 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 104.6521ms
2025-05-14 14:43:47.844 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:43:47.856 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:47.861 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.3259ms
2025-05-14 14:43:47.868 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:43:47.875 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:47.876 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:43:47.884 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:43:47.892 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:43:47.897 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:43:47.899 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:43:47.901 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:43:47.902 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:43:47.907 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:43:47.909 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:43:47.921 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:43:47.933 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:43:47.939 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:43:47.944 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:43:47.947 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:43:47.956 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:43:47.959 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:43:47.966 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:43:47.969 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:43:47.973 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:43:47.979 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:43:47.985 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:43:48.002 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:43:48.006 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:43:48.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:43:48.035 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 143.1726ms
2025-05-14 14:43:48.040 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:43:48.052 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 183.6324ms
2025-05-14 14:43:48.090 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:43:48.100 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:43:48.105 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:48.124 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:48.126 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 36.3285ms
2025-05-14 14:43:48.138 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 38.2246ms
2025-05-14 14:43:48.153 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:43:48.162 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:43:48.174 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:48.191 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:43:48.193 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:43:48.200 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:43:48.205 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:43:48.212 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:43:48.233 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:43:48.254 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:43:48.267 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:43:48.271 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:43:48.276 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:43:48.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:43:48.296 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 66.8106ms
2025-05-14 14:43:48.306 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 51.9842ms
2025-05-14 14:43:48.322 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:43:48.328 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:43:48.336 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 183.2898ms
2025-05-14 14:43:48.340 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 178.0284ms
2025-05-14 14:53:04.910 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-14 14:53:05.067 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 156.8742ms
2025-05-14 14:53:05.574 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-14 14:53:05.712 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 137.9336ms
2025-05-14 14:53:49.462 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-14 14:53:49.469 +05:30 [INF] CORS policy execution failed.
2025-05-14 14:53:49.471 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 14:53:49.474 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 14:53:49.481 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 14:53:49.483 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 20.3001ms
2025-05-14 14:55:21.639 +05:30 [INF] Application is shutting down...
2025-05-14 14:55:39.653 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 14:55:39.868 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 14:55:39.874 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 14:55:39.877 +05:30 [INF] Hosting environment: Development
2025-05-14 14:55:39.881 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 14:55:46.315 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-14 14:55:46.447 +05:30 [INF] CORS policy execution failed.
2025-05-14 14:55:46.451 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 14:55:46.458 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:55:46.500 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:55:46.677 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:55:46.717 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:55:46.720 +05:30 [ERR] Error during allocation calculation.
System.Collections.Generic.KeyNotFoundException: The given key 'low' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 92
2025-05-14 14:55:46.763 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 252.7012ms
2025-05-14 14:55:46.770 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:55:46.777 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.Collections.Generic.KeyNotFoundException: The given key 'low' was not present in the dictionary.
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at WisVestAPI.Services.AllocationService.CalculateFinalAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\AllocationService.cs:line 92
   at WisVestAPI.Controllers.AllocationController.GetAllocation(UserInputDTO input) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\AllocationController.cs:line 34
   at lambda_method6(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-05-14 14:55:46.903 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 500 null text/plain; charset=utf-8 593.445ms
2025-05-14 14:56:17.484 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-14 14:56:17.530 +05:30 [INF] CORS policy execution failed.
2025-05-14 14:56:17.535 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 14:56:17.540 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:56:17.546 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:56:17.561 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:56:17.567 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:56:17.578 +05:30 [INF] Looking up base allocation for key: Low+Short
2025-05-14 14:56:17.598 +05:30 [INF] Base allocation found: {"equity":10,"fixedIncome":40,"commodities":5,"cash":40,"realEstate":5}
2025-05-14 14:56:17.601 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:56:17.605 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:56:17.612 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:56:17.619 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:56:17.656 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:56:17.660 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:56:17.662 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:56:17.664 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:56:17.670 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:56:17.673 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 14:56:17.675 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 14:56:17.677 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 14:56:17.683 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 14:56:17.688 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 14:56:17.729 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:56:17.747 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:56:17.749 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 14:56:17.771 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:56:17.788 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 228.4232ms
2025-05-14 14:56:17.791 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:56:17.794 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 312.4176ms
2025-05-14 14:58:25.690 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 14:58:25.705 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:25.712 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 22.6645ms
2025-05-14 14:58:25.720 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 14:58:25.877 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:25.882 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:58:25.886 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:58:25.912 +05:30 [INF] Starting allocation calculation...
2025-05-14 14:58:25.920 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 14:58:25.924 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 14:58:25.931 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 14:58:25.934 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 14:58:25.942 +05:30 [INF] Age adjustments found: {}
2025-05-14 14:58:25.946 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 14:58:25.954 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 14:58:25.987 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:58:25.996 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:58:26.005 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:58:26.018 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:58:26.023 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:58:26.034 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 14:58:26.043 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 14:58:26.048 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 14:58:26.059 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 14:58:26.064 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 14:58:26.073 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:58:26.092 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 14:58:26.098 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 14:58:26.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 14:58:26.125 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 216.012ms
2025-05-14 14:58:26.134 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 14:58:26.140 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 419.7213ms
2025-05-14 14:58:26.181 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:58:26.184 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:58:26.200 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:26.216 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:26.227 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 45.1704ms
2025-05-14 14:58:26.229 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 45.1075ms
2025-05-14 14:58:26.249 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 14:58:26.264 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 14:58:26.298 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:26.298 +05:30 [INF] CORS policy execution successful.
2025-05-14 14:58:26.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:58:26.303 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:58:26.323 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 14:58:26.326 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 14:58:26.343 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 14:58:26.358 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 14:58:26.359 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 14:58:26.368 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 14:58:26.375 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:58:26.397 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 59.0829ms
2025-05-14 14:58:26.405 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 14:58:26.407 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 14:58:26.431 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 167.0328ms
2025-05-14 14:58:26.434 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 82.2617ms
2025-05-14 14:58:26.459 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 14:58:26.469 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 219.858ms
2025-05-14 15:07:41.184 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:07:41.200 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.201 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.8621ms
2025-05-14 15:07:41.207 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 15:07:41.216 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.218 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:07:41.225 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:07:41.237 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:07:41.253 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:07:41.255 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 15:07:41.258 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 15:07:41.263 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 15:07:41.265 +05:30 [INF] Age adjustments found: {}
2025-05-14 15:07:41.269 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 15:07:41.273 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 15:07:41.289 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 15:07:41.291 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:07:41.296 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 15:07:41.298 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 15:07:41.304 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 15:07:41.307 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 15:07:41.312 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:07:41.316 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 15:07:41.318 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 15:07:41.322 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 15:07:41.328 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 15:07:41.335 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:07:41.339 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 15:07:41.348 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:07:41.351 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 115.6239ms
2025-05-14 15:07:41.354 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:07:41.356 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 149.5633ms
2025-05-14 15:07:41.377 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:07:41.381 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:07:41.385 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.399 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.408 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 31.5736ms
2025-05-14 15:07:41.414 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 32.044ms
2025-05-14 15:07:41.436 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:07:41.453 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:07:41.474 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.485 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:07:41.487 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:07:41.490 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:07:41.495 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:07:41.497 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:07:41.508 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:07:41.522 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:07:41.526 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:07:41.530 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:07:41.533 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:07:41.536 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:07:41.545 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 37.8749ms
2025-05-14 15:07:41.550 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 28.2008ms
2025-05-14 15:07:41.554 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:07:41.561 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:07:41.563 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 126.8631ms
2025-05-14 15:07:41.567 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 114.4986ms
2025-05-14 15:08:56.124 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:08:56.131 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.141 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.5645ms
2025-05-14 15:08:56.155 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 15:08:56.163 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.164 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:08:56.174 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:08:56.182 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:08:56.189 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:08:56.191 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 15:08:56.193 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 15:08:56.198 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 15:08:56.205 +05:30 [INF] Age adjustments found: {}
2025-05-14 15:08:56.211 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 15:08:56.214 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 15:08:56.231 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 15:08:56.238 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:08:56.242 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 15:08:56.249 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 15:08:56.258 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 15:08:56.262 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 15:08:56.267 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:08:56.272 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 15:08:56.275 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 15:08:56.281 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 15:08:56.284 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 15:08:56.295 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:08:56.298 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 15:08:56.303 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:08:56.308 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 127.3964ms
2025-05-14 15:08:56.310 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:08:56.316 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 160.915ms
2025-05-14 15:08:56.339 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:08:56.343 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:08:56.352 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.363 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.372 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 33.0237ms
2025-05-14 15:08:56.375 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 31.19ms
2025-05-14 15:08:56.393 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:08:56.406 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:08:56.414 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.423 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:08:56.424 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:08:56.429 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:08:56.437 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:08:56.433 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:08:56.444 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:08:56.452 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:08:56.455 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:08:56.458 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:08:56.461 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:08:56.463 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:08:56.469 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 24.9945ms
2025-05-14 15:08:56.473 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 23.2906ms
2025-05-14 15:08:56.479 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:08:56.485 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:08:56.487 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 81.025ms
2025-05-14 15:08:56.491 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 98.4347ms
2025-05-14 15:09:43.933 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:09:43.945 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:43.949 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.8365ms
2025-05-14 15:09:43.954 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 15:09:43.962 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:43.964 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:09:43.970 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:09:43.983 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:09:43.992 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:09:43.994 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 15:09:43.996 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 15:09:44.003 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 15:09:44.009 +05:30 [INF] Age adjustments found: {}
2025-05-14 15:09:44.014 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 15:09:44.015 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 15:09:44.044 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 15:09:44.051 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:09:44.056 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6,"Energy":4.5,"Agriculture":4.5}
2025-05-14 15:09:44.065 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":4.5,"Savings Acc":4.5,"T. Bill":6}
2025-05-14 15:09:44.069 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 15:09:44.078 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 15:09:44.082 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:09:44.090 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6,"Energy":4.5,"Agriculture":4.5}
2025-05-14 15:09:44.095 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":4.5,"Savings Acc":4.5,"T. Bill":6}
2025-05-14 15:09:44.102 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 15:09:44.106 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":15,"subAssets":{"Precious Metals":6,"Energy":4.5,"Agriculture":4.5}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":4.5,"Savings Acc":4.5,"T. Bill":6}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 15:09:44.125 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:09:44.127 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":15,"subAssets":{"Precious Metals":6,"Energy":4.5,"Agriculture":4.5}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":4.5,"Savings Acc":4.5,"T. Bill":6}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 15:09:44.136 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:09:44.141 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 159.0918ms
2025-05-14 15:09:44.147 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:09:44.151 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 196.7542ms
2025-05-14 15:09:44.176 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:09:44.187 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:44.176 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:09:44.192 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.1766ms
2025-05-14 15:09:44.198 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:44.221 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:09:44.226 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 49.4572ms
2025-05-14 15:09:44.235 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:44.248 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:09:44.254 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:09:44.267 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:09:44.271 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:09:44.274 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:09:44.294 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:09:44.298 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:09:44.308 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:09:44.318 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:09:44.322 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:09:44.326 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:09:44.343 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 49.0888ms
2025-05-14 15:09:44.347 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:09:44.354 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:09:44.361 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 42.7329ms
2025-05-14 15:09:44.366 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 144.8731ms
2025-05-14 15:09:44.370 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:09:44.391 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 142.6502ms
2025-05-14 15:10:44.424 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:10:44.431 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.438 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.3474ms
2025-05-14 15:10:44.444 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-14 15:10:44.452 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.454 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:10:44.458 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:10:44.472 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:10:44.480 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:10:44.489 +05:30 [INF] Looking up base allocation for key: Low+Mod
2025-05-14 15:10:44.491 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":50,"commodities":10,"cash":15,"realEstate":5}
2025-05-14 15:10:44.494 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:10:44.499 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:10:44.501 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 15:10:44.506 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 15:10:44.514 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 15:10:44.516 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}
2025-05-14 15:10:44.521 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}
2025-05-14 15:10:44.524 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}
2025-05-14 15:10:44.527 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}
2025-05-14 15:10:44.532 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 15:10:44.537 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}
2025-05-14 15:10:44.539 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}
2025-05-14 15:10:44.543 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}
2025-05-14 15:10:44.546 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}
2025-05-14 15:10:44.565 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":42.5,"subAssets":{"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}}}
2025-05-14 15:10:44.582 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:10:44.586 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":42.5,"subAssets":{"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}}}
2025-05-14 15:10:44.591 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:10:44.596 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 124.0554ms
2025-05-14 15:10:44.602 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:10:44.608 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 164.8713ms
2025-05-14 15:10:44.625 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:10:44.628 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:10:44.631 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.640 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.648 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 22.556ms
2025-05-14 15:10:44.654 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 26.3387ms
2025-05-14 15:10:44.673 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:10:44.686 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:10:44.701 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.709 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:10:44.711 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:10:44.717 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:10:44.720 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:10:44.727 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:10:44.734 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:10:44.743 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:10:44.746 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:10:44.753 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:10:44.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:10:44.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:10:44.774 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 40.5171ms
2025-05-14 15:10:44.778 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 34.8403ms
2025-05-14 15:10:44.781 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:10:44.787 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:10:44.793 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 120.0591ms
2025-05-14 15:10:44.802 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 115.6325ms
2025-05-14 15:14:43.289 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 15:14:43.442 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 15:14:43.448 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 15:14:43.449 +05:30 [INF] Hosting environment: Development
2025-05-14 15:14:43.451 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 15:15:00.408 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:15:00.539 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:00.564 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 157.4644ms
2025-05-14 15:15:00.602 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-14 15:15:00.917 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:00.940 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:15:01.024 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:15:01.283 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:15:01.369 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:15:01.374 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 15:15:01.411 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 15:15:01.418 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:15:01.422 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:15:01.431 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 15:15:01.455 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 15:15:01.501 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 15:15:01.508 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:15:01.513 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:15:01.522 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:15:01.532 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:15:01.544 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 15:15:01.558 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:15:01.569 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:15:01.580 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:15:01.594 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:15:01.692 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:15:01.733 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:15:01.739 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:15:01.776 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:15:01.824 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 782.3286ms
2025-05-14 15:15:01.832 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:15:01.850 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 1249.864ms
2025-05-14 15:15:01.892 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:15:01.906 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:15:01.917 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:01.927 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:01.931 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 39.6167ms
2025-05-14 15:15:01.948 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 42.1883ms
2025-05-14 15:15:01.962 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:15:01.973 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:15:01.993 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:01.994 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:15:01.995 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:15:02.001 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:15:02.012 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:15:02.013 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:15:02.024 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:15:02.034 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:15:02.037 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:15:02.041 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:15:02.048 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:15:02.055 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 22.4623ms
2025-05-14 15:15:02.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:15:02.059 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:15:02.080 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 59.4343ms
2025-05-14 15:15:02.081 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 108.3557ms
2025-05-14 15:15:02.091 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:15:02.106 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 144.158ms
2025-05-14 15:19:31.521 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:19:31.557 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.569 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 47.6354ms
2025-05-14 15:19:31.588 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-14 15:19:31.592 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.595 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:19:31.601 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:19:31.611 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:19:31.615 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:19:31.618 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 15:19:31.622 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 15:19:31.624 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 15:19:31.628 +05:30 [INF] Age adjustments found: {}
2025-05-14 15:19:31.632 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 15:19:31.634 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 15:19:31.647 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-14 15:19:31.651 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-14 15:19:31.653 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 15:19:31.656 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-14 15:19:31.658 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 15:19:31.662 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-14 15:19:31.664 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-14 15:19:31.668 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 15:19:31.669 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-14 15:19:31.674 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 15:19:31.676 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 15:19:31.694 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:19:31.701 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 15:19:31.715 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:19:31.727 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 119.901ms
2025-05-14 15:19:31.738 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:19:31.748 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 160.1726ms
2025-05-14 15:19:31.785 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:19:31.791 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:19:31.826 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.850 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.853 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 68.0634ms
2025-05-14 15:19:31.858 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 66.5833ms
2025-05-14 15:19:31.868 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:19:31.879 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:19:31.890 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.899 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:19:31.901 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:19:31.906 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:19:31.909 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:19:31.912 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:19:31.922 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:19:31.930 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:19:31.933 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:19:31.937 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:19:31.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:19:31.942 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:19:31.951 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 29.7915ms
2025-05-14 15:19:31.954 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 23.9133ms
2025-05-14 15:19:31.961 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:19:31.965 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:19:31.969 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 101.0845ms
2025-05-14 15:19:31.971 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 91.783ms
2025-05-14 15:20:09.375 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-14 15:20:09.382 +05:30 [INF] CORS policy execution failed.
2025-05-14 15:20:09.383 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 15:20:09.385 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-05-14 15:20:09.393 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-14 15:20:09.402 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 401 0 null 26.7914ms
2025-05-14 15:21:32.737 +05:30 [INF] Application is shutting down...
2025-05-14 15:21:38.891 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 15:21:39.071 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 15:21:39.077 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 15:21:39.079 +05:30 [INF] Hosting environment: Development
2025-05-14 15:21:39.081 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 15:21:39.165 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 118
2025-05-14 15:21:39.251 +05:30 [INF] CORS policy execution failed.
2025-05-14 15:21:39.254 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 15:21:39.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:21:39.291 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:21:39.405 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:21:39.434 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:21:39.437 +05:30 [INF] Looking up base allocation for key: Low+Short
2025-05-14 15:21:39.451 +05:30 [INF] Base allocation found: {"equity":10,"fixedIncome":40,"commodities":5,"cash":40,"realEstate":5}
2025-05-14 15:21:39.454 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 15:21:39.457 +05:30 [INF] Age adjustments found: {}
2025-05-14 15:21:39.461 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 15:21:39.469 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 15:21:39.491 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 15:21:39.495 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 15:21:39.498 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 15:21:39.500 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 15:21:39.503 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 15:21:39.505 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}
2025-05-14 15:21:39.509 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 15:21:39.514 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}
2025-05-14 15:21:39.516 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}
2025-05-14 15:21:39.519 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}
2025-05-14 15:21:39.551 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 15:21:39.562 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:21:39.564 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":16.67,"subAssets":{"Large Cap":10.42,"Mid Cap":4.17,"Small Cap":2.08}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":7.29,"Energy":2.92,"Agriculture":1.46}},"cash":{"percentage":30,"subAssets":{"Liquid Mutual Funds":6.92,"Savings Acc":11.54,"T. Bill":11.54}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.67,"Residential Prop":4.67,"Commercial Prop":2.33}}}
2025-05-14 15:21:39.577 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:21:39.595 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 294.0799ms
2025-05-14 15:21:39.599 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:21:39.604 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 441.2074ms
2025-05-14 15:22:36.065 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 839
2025-05-14 15:22:36.076 +05:30 [INF] CORS policy execution failed.
2025-05-14 15:22:36.080 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 15:22:36.084 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:22:36.106 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:22:36.200 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:22:36.205 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:22:36.211 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:22:36.366 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:22:36.401 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:22:36.410 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.43, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-14 15:22:36.417 +05:30 [INF] Calculated investment amount: 448.76.
2025-05-14 15:22:36.426 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:22:36.438 +05:30 [INF] Calculated investment amount: 418.46.
2025-05-14 15:22:36.444 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:22:36.453 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.22, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-14 15:22:36.467 +05:30 [INF] Calculated investment amount: 175.41.
2025-05-14 15:22:36.476 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.95, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-14 15:22:36.500 +05:30 [INF] Calculated investment amount: 158.27.
2025-05-14 15:22:36.506 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:22:36.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-14 15:22:36.547 +05:30 [INF] Calculated investment amount: 82.33.
2025-05-14 15:22:36.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-14 15:22:36.586 +05:30 [INF] Calculated investment amount: 78.82.
2025-05-14 15:22:36.598 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:22:36.604 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:22:36.621 +05:30 [INF] Calculated investment amount: 693.88.
2025-05-14 15:22:36.626 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.35, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-14 15:22:36.641 +05:30 [INF] Calculated investment amount: 669.21.
2025-05-14 15:22:36.651 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:22:36.660 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-14 15:22:36.676 +05:30 [INF] Calculated investment amount: 257.75.
2025-05-14 15:22:36.688 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-14 15:22:36.699 +05:30 [INF] Calculated investment amount: 266.77.
2025-05-14 15:22:36.710 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:22:36.724 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-14 15:22:36.738 +05:30 [INF] Calculated investment amount: 397.12.
2025-05-14 15:22:36.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-14 15:22:36.766 +05:30 [INF] Calculated investment amount: 409.94.
2025-05-14 15:22:36.775 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:22:36.786 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.03, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-14 15:22:36.800 +05:30 [INF] Calculated investment amount: 346.79.
2025-05-14 15:22:36.807 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-14 15:22:36.818 +05:30 [INF] Calculated investment amount: 288.5.
2025-05-14 15:22:36.825 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:22:36.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.38, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:22:36.843 +05:30 [INF] Calculated investment amount: 115.73.
2025-05-14 15:22:36.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-14 15:22:36.866 +05:30 [INF] Calculated investment amount: 126.58.
2025-05-14 15:22:36.874 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:22:36.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-14 15:22:36.891 +05:30 [INF] Calculated investment amount: 67.96.
2025-05-14 15:22:36.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.66, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-14 15:22:36.918 +05:30 [INF] Calculated investment amount: 57.65.
2025-05-14 15:22:36.928 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:22:36.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.53, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-14 15:22:36.952 +05:30 [INF] Calculated investment amount: 318.97.
2025-05-14 15:22:36.963 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.39, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:22:36.977 +05:30 [INF] Calculated investment amount: 307.48.
2025-05-14 15:22:36.989 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:22:36.995 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.39, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-14 15:22:37.008 +05:30 [INF] Calculated investment amount: 503.16.
2025-05-14 15:22:37.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.15, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-14 15:22:37.034 +05:30 [INF] Calculated investment amount: 568.6.
2025-05-14 15:22:37.041 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:22:37.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.61, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-14 15:22:37.059 +05:30 [INF] Calculated investment amount: 507.88.
2025-05-14 15:22:37.071 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.93, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-14 15:22:37.086 +05:30 [INF] Calculated investment amount: 533.79.
2025-05-14 15:22:37.100 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:22:37.109 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 2.
2025-05-14 15:22:37.122 +05:30 [INF] Calculated investment amount: 190.57.
2025-05-14 15:22:37.133 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.41, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 2.
2025-05-14 15:22:37.146 +05:30 [INF] Calculated investment amount: 201.
2025-05-14 15:22:37.152 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:22:37.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 2.
2025-05-14 15:22:37.174 +05:30 [INF] Calculated investment amount: 195.87.
2025-05-14 15:22:37.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.44, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 2.
2025-05-14 15:22:37.197 +05:30 [INF] Calculated investment amount: 211.93.
2025-05-14 15:22:37.202 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:22:37.210 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 2.
2025-05-14 15:22:37.224 +05:30 [INF] Calculated investment amount: 97.99.
2025-05-14 15:22:37.234 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.14, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 2.
2025-05-14 15:22:37.246 +05:30 [INF] Calculated investment amount: 94.56.
2025-05-14 15:22:37.280 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:22:37.287 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":5.43,"InvestmentAmount":448.76},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":4.99,"InvestmentAmount":418.46}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":2.22,"InvestmentAmount":175.41},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":1.95,"InvestmentAmount":158.27}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":1.07,"InvestmentAmount":82.33},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":1.01,"InvestmentAmount":78.82}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":7.65,"InvestmentAmount":693.88},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":7.35,"InvestmentAmount":669.21}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":2.94,"InvestmentAmount":257.75},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":3.06,"InvestmentAmount":266.77}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":397.12},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":409.94}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":4.03,"InvestmentAmount":346.79},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":3.26,"InvestmentAmount":288.5}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.38,"InvestmentAmount":115.73},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.54,"InvestmentAmount":126.58}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.8,"InvestmentAmount":67.96},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.66,"InvestmentAmount":57.65}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.53,"InvestmentAmount":318.97},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":3.39,"InvestmentAmount":307.48}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":5.39,"InvestmentAmount":503.16},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":6.15,"InvestmentAmount":568.6}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":5.61,"InvestmentAmount":507.88},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":5.93,"InvestmentAmount":533.79}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":2.26,"InvestmentAmount":190.57},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.41,"InvestmentAmount":201}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":2.23,"InvestmentAmount":195.87},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.44,"InvestmentAmount":211.93}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":97.99},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.14,"InvestmentAmount":94.56}}}}
2025-05-14 15:22:37.424 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:22:37.443 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 1319.2928ms
2025-05-14 15:22:37.452 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:22:37.469 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 200 null application/json; charset=utf-8 1404.1224ms
2025-05-14 15:23:19.112 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 839
2025-05-14 15:23:19.124 +05:30 [INF] CORS policy execution failed.
2025-05-14 15:23:19.129 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 15:23:19.134 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:23:19.141 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:23:19.171 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:23:19.176 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:23:19.183 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:23:19.349 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:23:19.351 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:23:19.363 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.43, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 15:23:19.374 +05:30 [INF] Calculated investment amount: 407.96.
2025-05-14 15:23:19.384 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:23:19.392 +05:30 [INF] Calculated investment amount: 383.21.
2025-05-14 15:23:19.394 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:23:19.403 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.22, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 15:23:19.408 +05:30 [INF] Calculated investment amount: 155.92.
2025-05-14 15:23:19.412 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.95, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 15:23:19.420 +05:30 [INF] Calculated investment amount: 142.58.
2025-05-14 15:23:19.427 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:23:19.429 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 15:23:19.439 +05:30 [INF] Calculated investment amount: 72.22.
2025-05-14 15:23:19.446 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 15:23:19.453 +05:30 [INF] Calculated investment amount: 69.63.
2025-05-14 15:23:19.458 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:23:19.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:23:19.470 +05:30 [INF] Calculated investment amount: 660.84.
2025-05-14 15:23:19.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.35, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 15:23:19.482 +05:30 [INF] Calculated investment amount: 638.56.
2025-05-14 15:23:19.488 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:23:19.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 15:23:19.504 +05:30 [INF] Calculated investment amount: 241.34.
2025-05-14 15:23:19.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 15:23:19.515 +05:30 [INF] Calculated investment amount: 249.09.
2025-05-14 15:23:19.518 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:23:19.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 15:23:19.533 +05:30 [INF] Calculated investment amount: 376.41.
2025-05-14 15:23:19.539 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 15:23:19.545 +05:30 [INF] Calculated investment amount: 387.83.
2025-05-14 15:23:19.554 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:23:19.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.03, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 15:23:19.572 +05:30 [INF] Calculated investment amount: 321.7.
2025-05-14 15:23:19.582 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 15:23:19.590 +05:30 [INF] Calculated investment amount: 271.4.
2025-05-14 15:23:19.594 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:23:19.602 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.38, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:23:19.609 +05:30 [INF] Calculated investment amount: 105.98.
2025-05-14 15:23:19.616 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 15:23:19.625 +05:30 [INF] Calculated investment amount: 114.76.
2025-05-14 15:23:19.628 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:23:19.637 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 15:23:19.642 +05:30 [INF] Calculated investment amount: 62.63.
2025-05-14 15:23:19.647 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.66, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 15:23:19.654 +05:30 [INF] Calculated investment amount: 53.88.
2025-05-14 15:23:19.659 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:23:19.662 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.53, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 15:23:19.672 +05:30 [INF] Calculated investment amount: 303.2.
2025-05-14 15:23:19.681 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.39, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:23:19.687 +05:30 [INF] Calculated investment amount: 292.84.
2025-05-14 15:23:19.691 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:23:19.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.39, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 15:23:19.701 +05:30 [INF] Calculated investment amount: 486.15.
2025-05-14 15:23:19.705 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.15, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 15:23:19.717 +05:30 [INF] Calculated investment amount: 546.73.
2025-05-14 15:23:19.720 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:23:19.726 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.61, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 15:23:19.737 +05:30 [INF] Calculated investment amount: 483.23.
2025-05-14 15:23:19.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.93, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 15:23:19.750 +05:30 [INF] Calculated investment amount: 506.45.
2025-05-14 15:23:19.755 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:23:19.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 15:23:19.771 +05:30 [INF] Calculated investment amount: 174.99.
2025-05-14 15:23:19.777 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.41, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 15:23:19.783 +05:30 [INF] Calculated investment amount: 183.56.
2025-05-14 15:23:19.790 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:23:19.797 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 15:23:19.810 +05:30 [INF] Calculated investment amount: 183.57.
2025-05-14 15:23:19.820 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.44, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 15:23:19.826 +05:30 [INF] Calculated investment amount: 197.51.
2025-05-14 15:23:19.833 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:23:19.837 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 15:23:19.850 +05:30 [INF] Calculated investment amount: 88.92.
2025-05-14 15:23:19.859 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.14, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 15:23:19.872 +05:30 [INF] Calculated investment amount: 86.12.
2025-05-14 15:23:19.885 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:23:19.889 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":5.43,"InvestmentAmount":407.96},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":4.99,"InvestmentAmount":383.21}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":2.22,"InvestmentAmount":155.92},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":1.95,"InvestmentAmount":142.58}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":1.07,"InvestmentAmount":72.22},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":1.01,"InvestmentAmount":69.63}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":7.65,"InvestmentAmount":660.84},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":7.35,"InvestmentAmount":638.56}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":2.94,"InvestmentAmount":241.34},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":3.06,"InvestmentAmount":249.09}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":376.41},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":387.83}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":4.03,"InvestmentAmount":321.7},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":3.26,"InvestmentAmount":271.4}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.38,"InvestmentAmount":105.98},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.54,"InvestmentAmount":114.76}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.8,"InvestmentAmount":62.63},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.66,"InvestmentAmount":53.88}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.53,"InvestmentAmount":303.2},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":3.39,"InvestmentAmount":292.84}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":5.39,"InvestmentAmount":486.15},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":6.15,"InvestmentAmount":546.73}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":5.61,"InvestmentAmount":483.23},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":5.93,"InvestmentAmount":506.45}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":2.26,"InvestmentAmount":174.99},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.41,"InvestmentAmount":183.56}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":2.23,"InvestmentAmount":183.57},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.44,"InvestmentAmount":197.51}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":88.92},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.14,"InvestmentAmount":86.12}}}}
2025-05-14 15:23:19.961 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:23:19.976 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 816.9647ms
2025-05-14 15:23:19.986 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:23:20.000 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 887.173ms
2025-05-14 15:23:46.647 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 839
2025-05-14 15:23:46.655 +05:30 [INF] CORS policy execution failed.
2025-05-14 15:23:46.657 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 15:23:46.662 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:23:46.672 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:23:46.689 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:23:46.694 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:23:46.699 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:23:46.789 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:23:46.790 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:23:46.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.43, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-14 15:23:46.799 +05:30 [INF] Calculated investment amount: 448.76.
2025-05-14 15:23:46.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:23:46.805 +05:30 [INF] Calculated investment amount: 418.46.
2025-05-14 15:23:46.809 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:23:46.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.22, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-14 15:23:46.818 +05:30 [INF] Calculated investment amount: 175.41.
2025-05-14 15:23:46.820 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.95, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-14 15:23:46.825 +05:30 [INF] Calculated investment amount: 158.27.
2025-05-14 15:23:46.829 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:23:46.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.07, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-14 15:23:46.840 +05:30 [INF] Calculated investment amount: 82.33.
2025-05-14 15:23:46.843 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.01, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-14 15:23:46.848 +05:30 [INF] Calculated investment amount: 78.82.
2025-05-14 15:23:46.852 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:23:46.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:23:46.859 +05:30 [INF] Calculated investment amount: 693.88.
2025-05-14 15:23:46.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.35, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-14 15:23:46.870 +05:30 [INF] Calculated investment amount: 669.21.
2025-05-14 15:23:46.875 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:23:46.878 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-14 15:23:46.885 +05:30 [INF] Calculated investment amount: 257.75.
2025-05-14 15:23:46.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-14 15:23:46.896 +05:30 [INF] Calculated investment amount: 266.77.
2025-05-14 15:23:46.904 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:23:46.906 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-14 15:23:46.915 +05:30 [INF] Calculated investment amount: 397.12.
2025-05-14 15:23:46.919 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-14 15:23:46.934 +05:30 [INF] Calculated investment amount: 409.94.
2025-05-14 15:23:46.943 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:23:46.949 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.03, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-14 15:23:46.958 +05:30 [INF] Calculated investment amount: 346.79.
2025-05-14 15:23:46.968 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-14 15:23:46.973 +05:30 [INF] Calculated investment amount: 288.5.
2025-05-14 15:23:46.979 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:23:46.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.38, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:23:46.994 +05:30 [INF] Calculated investment amount: 115.73.
2025-05-14 15:23:47.003 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-14 15:23:47.015 +05:30 [INF] Calculated investment amount: 126.58.
2025-05-14 15:23:47.019 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:23:47.026 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-14 15:23:47.038 +05:30 [INF] Calculated investment amount: 67.96.
2025-05-14 15:23:47.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.66, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-14 15:23:47.054 +05:30 [INF] Calculated investment amount: 57.65.
2025-05-14 15:23:47.066 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:23:47.075 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.53, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-14 15:23:47.091 +05:30 [INF] Calculated investment amount: 318.97.
2025-05-14 15:23:47.098 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.39, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:23:47.121 +05:30 [INF] Calculated investment amount: 307.48.
2025-05-14 15:23:47.126 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:23:47.136 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.39, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-14 15:23:47.153 +05:30 [INF] Calculated investment amount: 503.16.
2025-05-14 15:23:47.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.15, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-14 15:23:47.183 +05:30 [INF] Calculated investment amount: 568.6.
2025-05-14 15:23:47.198 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:23:47.211 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.61, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-14 15:23:47.228 +05:30 [INF] Calculated investment amount: 507.88.
2025-05-14 15:23:47.240 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.93, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-14 15:23:47.258 +05:30 [INF] Calculated investment amount: 533.79.
2025-05-14 15:23:47.268 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:23:47.273 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 2.
2025-05-14 15:23:47.289 +05:30 [INF] Calculated investment amount: 190.57.
2025-05-14 15:23:47.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.41, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 2.
2025-05-14 15:23:47.309 +05:30 [INF] Calculated investment amount: 201.
2025-05-14 15:23:47.312 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:23:47.322 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 2.
2025-05-14 15:23:47.327 +05:30 [INF] Calculated investment amount: 195.87.
2025-05-14 15:23:47.334 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.44, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 2.
2025-05-14 15:23:47.345 +05:30 [INF] Calculated investment amount: 211.93.
2025-05-14 15:23:47.352 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:23:47.358 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 2.
2025-05-14 15:23:47.364 +05:30 [INF] Calculated investment amount: 97.99.
2025-05-14 15:23:47.371 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.14, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 2.
2025-05-14 15:23:47.380 +05:30 [INF] Calculated investment amount: 94.56.
2025-05-14 15:23:47.393 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:23:47.396 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":5.43,"InvestmentAmount":448.76},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":4.99,"InvestmentAmount":418.46}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":2.22,"InvestmentAmount":175.41},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":1.95,"InvestmentAmount":158.27}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":1.07,"InvestmentAmount":82.33},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":1.01,"InvestmentAmount":78.82}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":7.65,"InvestmentAmount":693.88},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":7.35,"InvestmentAmount":669.21}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":2.94,"InvestmentAmount":257.75},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":3.06,"InvestmentAmount":266.77}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":397.12},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":409.94}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":4.03,"InvestmentAmount":346.79},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":3.26,"InvestmentAmount":288.5}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.38,"InvestmentAmount":115.73},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.54,"InvestmentAmount":126.58}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.8,"InvestmentAmount":67.96},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.66,"InvestmentAmount":57.65}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.53,"InvestmentAmount":318.97},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":3.39,"InvestmentAmount":307.48}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":5.39,"InvestmentAmount":503.16},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":6.15,"InvestmentAmount":568.6}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":5.61,"InvestmentAmount":507.88},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":5.93,"InvestmentAmount":533.79}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":2.26,"InvestmentAmount":190.57},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.41,"InvestmentAmount":201}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":2.23,"InvestmentAmount":195.87},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.44,"InvestmentAmount":211.93}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":97.99},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.14,"InvestmentAmount":94.56}}}}
2025-05-14 15:23:47.504 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:23:47.523 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 839.291ms
2025-05-14 15:23:47.535 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:23:47.547 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 200 null application/json; charset=utf-8 899.3758ms
2025-05-14 15:30:57.258 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:30:57.279 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:30:57.315 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:30:57.325 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:30:57.327 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 69.6193ms
2025-05-14 15:30:57.329 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 49.5058ms
2025-05-14 15:30:57.377 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:30:57.394 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:30:57.494 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:00:57 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:30:57.494 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:00:57 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:30:57.547 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:00:57 AM'.
2025-05-14 15:30:57.561 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:00:57 AM'.
2025-05-14 15:30:57.569 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:30:57.569 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:30:57.572 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:30:57.574 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:30:57.585 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:30:57.585 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:30:57.599 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:30:57.608 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:30:57.609 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:30:57.617 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:30:57.617 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:30:57.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:30:57.634 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 38.2822ms
2025-05-14 15:30:57.654 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 48.1712ms
2025-05-14 15:30:57.660 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:30:57.666 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:30:57.670 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 293.9169ms
2025-05-14 15:30:57.674 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 279.984ms
2025-05-14 15:31:43.946 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:31:43.953 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:43.955 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.4708ms
2025-05-14 15:31:43.964 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-14 15:31:43.971 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:31:43.992 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:43 AM'.
2025-05-14 15:31:43.998 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.002 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:31:44.004 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:31:44.016 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:31:44.020 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:31:44.021 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 15:31:44.023 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 15:31:44.025 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:31:44.030 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:31:44.032 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-14 15:31:44.035 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-14 15:31:44.038 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10,"Mid Cap":7.5,"Small Cap":7.5}
2025-05-14 15:31:44.042 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:31:44.047 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":2,"Energy":1.5,"Agriculture":1.5}
2025-05-14 15:31:44.051 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-14 15:31:44.053 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-14 15:31:44.056 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10,"Mid Cap":7.5,"Small Cap":7.5}
2025-05-14 15:31:44.058 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:31:44.064 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":2,"Energy":1.5,"Agriculture":1.5}
2025-05-14 15:31:44.065 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-14 15:31:44.069 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-14 15:31:44.070 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":25,"subAssets":{"Large Cap":10,"Mid Cap":7.5,"Small Cap":7.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":5,"subAssets":{"Precious Metals":2,"Energy":1.5,"Agriculture":1.5}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-14 15:31:44.081 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:31:44.085 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":25,"subAssets":{"Large Cap":10,"Mid Cap":7.5,"Small Cap":7.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":5,"subAssets":{"Precious Metals":2,"Energy":1.5,"Agriculture":1.5}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-14 15:31:44.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:31:44.096 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 82.0774ms
2025-05-14 15:31:44.099 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:31:44.101 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 136.8624ms
2025-05-14 15:31:44.109 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - null null
2025-05-14 15:31:44.120 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.123 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 204 null null 14.2428ms
2025-05-14 15:31:44.132 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:31:44.179 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.151 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:31:44.135 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 473
2025-05-14 15:31:44.181 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 49.0407ms
2025-05-14 15:31:44.192 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.207 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:31:44.218 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:31:44.221 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 69.4166ms
2025-05-14 15:31:44.266 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
2025-05-14 15:31:44.280 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:31:44.287 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:31:44.291 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.315 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
2025-05-14 15:31:44.337 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:31:44.337 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:31:44.346 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.349 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:31:44.369 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:01:44 AM'.
2025-05-14 15:31:44.371 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:31:44.383 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:31:44.389 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:31:44.394 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:31:44.395 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:31:44.401 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:31:44.413 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:31:44.417 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:31:44.419 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:31:44.426 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:31:44.540 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:31:44.549 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:31:44.552 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:31:44.552 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:31:44.555 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:31:44.564 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 150.3765ms
2025-05-14 15:31:44.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.21, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-14 15:31:44.568 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:31:44.573 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:31:44.579 +05:30 [INF] Calculated investment amount: 430.58.
2025-05-14 15:31:44.585 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 36.0011ms
2025-05-14 15:31:44.589 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 371.2561ms
2025-05-14 15:31:44.591 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:31:44.597 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:31:44.611 +05:30 [INF] Calculated investment amount: 401.69.
2025-05-14 15:31:44.613 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 326.1566ms
2025-05-14 15:31:44.618 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:31:44.628 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-14 15:31:44.633 +05:30 [INF] Calculated investment amount: 315.26.
2025-05-14 15:31:44.635 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.51, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-14 15:31:44.641 +05:30 [INF] Calculated investment amount: 284.88.
2025-05-14 15:31:44.647 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:31:44.652 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.86, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-14 15:31:44.657 +05:30 [INF] Calculated investment amount: 297.01.
2025-05-14 15:31:44.663 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.64, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-14 15:31:44.679 +05:30 [INF] Calculated investment amount: 284.06.
2025-05-14 15:31:44.682 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:31:44.684 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:31:44.692 +05:30 [INF] Calculated investment amount: 416.33.
2025-05-14 15:31:44.701 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-14 15:31:44.706 +05:30 [INF] Calculated investment amount: 401.53.
2025-05-14 15:31:44.708 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:31:44.714 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-14 15:31:44.719 +05:30 [INF] Calculated investment amount: 514.63.
2025-05-14 15:31:44.720 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-14 15:31:44.730 +05:30 [INF] Calculated investment amount: 534.42.
2025-05-14 15:31:44.736 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:31:44.739 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-14 15:31:44.744 +05:30 [INF] Calculated investment amount: 397.12.
2025-05-14 15:31:44.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-14 15:31:44.754 +05:30 [INF] Calculated investment amount: 409.94.
2025-05-14 15:31:44.759 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:31:44.764 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.11, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-14 15:31:44.771 +05:30 [INF] Calculated investment amount: 95.52.
2025-05-14 15:31:44.775 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.89, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-14 15:31:44.782 +05:30 [INF] Calculated investment amount: 78.76.
2025-05-14 15:31:44.787 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:31:44.789 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.71, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 15:31:44.798 +05:30 [INF] Calculated investment amount: 59.54.
2025-05-14 15:31:44.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.79, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-14 15:31:44.806 +05:30 [INF] Calculated investment amount: 64.93.
2025-05-14 15:31:44.811 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:31:44.816 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-14 15:31:44.821 +05:30 [INF] Calculated investment amount: 69.66.
2025-05-14 15:31:44.823 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.68, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-14 15:31:44.831 +05:30 [INF] Calculated investment amount: 59.39.
2025-05-14 15:31:44.833 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:31:44.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-14 15:31:44.840 +05:30 [INF] Calculated investment amount: 552.99.
2025-05-14 15:31:44.845 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 15:31:44.851 +05:30 [INF] Calculated investment amount: 533.33.
2025-05-14 15:31:44.856 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:31:44.861 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-14 15:31:44.866 +05:30 [INF] Calculated investment amount: 522.77.
2025-05-14 15:31:44.870 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-14 15:31:44.874 +05:30 [INF] Calculated investment amount: 591.72.
2025-05-14 15:31:44.876 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:31:44.882 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-14 15:31:44.887 +05:30 [INF] Calculated investment amount: 703.42.
2025-05-14 15:31:44.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-14 15:31:44.898 +05:30 [INF] Calculated investment amount: 740.83.
2025-05-14 15:31:44.900 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:31:44.902 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
2025-05-14 15:31:44.924 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 66
2025-05-14 15:31:44.955 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 66
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 288
2025-05-14 15:31:44.980 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 15:31:44.983 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 603.7508ms
2025-05-14 15:31:44.986 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:31:44.991 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 500 null text/plain; charset=utf-8 855.8682ms
2025-05-14 15:33:28.881 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:33:28.881 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:33:28.889 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:28.896 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:28.897 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.2411ms
2025-05-14 15:33:28.918 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 36.3368ms
2025-05-14 15:33:28.932 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:33:28.944 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:33:28.953 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:28 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:28.960 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:28 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:28.989 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:28 AM'.
2025-05-14 15:33:29.006 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:28 AM'.
2025-05-14 15:33:29.008 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:29.013 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:29.025 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:33:29.017 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:33:29.039 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:33:29.044 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:33:29.061 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:33:29.071 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:33:29.076 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:33:29.079 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:33:29.086 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:33:29.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:33:29.099 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 38.1227ms
2025-05-14 15:33:29.109 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 37.2843ms
2025-05-14 15:33:29.122 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:33:29.129 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:33:29.135 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 191.1111ms
2025-05-14 15:33:29.141 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 208.5898ms
2025-05-14 15:33:43.599 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:33:43.623 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:43.634 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 35.0596ms
2025-05-14 15:33:43.656 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-14 15:33:43.671 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:43.719 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:43 AM'.
2025-05-14 15:33:43.726 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:43.731 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:33:43.735 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:33:43.752 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:33:43.764 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:33:43.768 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 15:33:43.775 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 15:33:43.779 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:33:43.784 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:33:43.786 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-14 15:33:43.795 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-14 15:33:43.799 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 15:33:43.801 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-14 15:33:43.802 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:33:43.808 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}
2025-05-14 15:33:43.813 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:33:43.818 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 15:33:43.820 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-14 15:33:43.827 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:33:43.829 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}
2025-05-14 15:33:43.837 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:33:43.839 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":20,"subAssets":{"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:33:43.845 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:33:43.849 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":20,"subAssets":{"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:33:43.853 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:33:43.859 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 107.1636ms
2025-05-14 15:33:43.863 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:33:43.865 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 208.3747ms
2025-05-14 15:33:43.875 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 15:33:43.885 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:43.894 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 18.9123ms
2025-05-14 15:33:43.906 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 478
2025-05-14 15:33:43.913 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:33:43.913 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:33:43.924 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:43.947 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:43.959 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:44.002 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:43 AM'.
2025-05-14 15:33:44.004 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 91.0552ms
2025-05-14 15:33:44.009 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 95.6418ms
2025-05-14 15:33:44.014 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:44.026 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:33:44.039 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:33:44.045 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:33:44.052 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:44 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:44.095 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:44 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:33:44.104 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:33:44.124 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:44 AM'.
2025-05-14 15:33:44.139 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:03:44 AM'.
2025-05-14 15:33:44.150 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:33:44.155 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:44.161 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:33:44.163 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:33:44.173 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:33:44.175 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:33:44.180 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:33:44.183 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:33:44.185 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:33:44.270 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:33:44.280 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:33:44.284 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:33:44.288 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:33:44.292 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:33:44.298 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:33:44.301 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 15:33:44.304 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:33:44.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:33:44.317 +05:30 [INF] Calculated investment amount: 469.57.
2025-05-14 15:33:44.323 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 43.1069ms
2025-05-14 15:33:44.326 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 42.5563ms
2025-05-14 15:33:44.331 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:33:44.335 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:33:44.344 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:33:44.351 +05:30 [INF] Calculated investment amount: 441.57.
2025-05-14 15:33:44.357 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 331.0829ms
2025-05-14 15:33:44.363 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 323.6717ms
2025-05-14 15:33:44.365 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:33:44.402 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 15:33:44.407 +05:30 [INF] Calculated investment amount: 336.42.
2025-05-14 15:33:44.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 15:33:44.423 +05:30 [INF] Calculated investment amount: 307.83.
2025-05-14 15:33:44.426 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:33:44.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 15:33:44.449 +05:30 [INF] Calculated investment amount: 312.51.
2025-05-14 15:33:44.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 15:33:44.470 +05:30 [INF] Calculated investment amount: 301.26.
2025-05-14 15:33:44.479 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:33:44.482 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:33:44.489 +05:30 [INF] Calculated investment amount: 463.02.
2025-05-14 15:33:44.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 15:33:44.520 +05:30 [INF] Calculated investment amount: 446.56.
2025-05-14 15:33:44.533 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:33:44.537 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 15:33:44.546 +05:30 [INF] Calculated investment amount: 562.31.
2025-05-14 15:33:44.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 15:33:44.556 +05:30 [INF] Calculated investment amount: 582.02.
2025-05-14 15:33:44.563 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:33:44.566 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 15:33:44.580 +05:30 [INF] Calculated investment amount: 439.43.
2025-05-14 15:33:44.586 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 15:33:44.593 +05:30 [INF] Calculated investment amount: 452.19.
2025-05-14 15:33:44.599 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:33:44.601 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 15:33:44.612 +05:30 [INF] Calculated investment amount: 176.42.
2025-05-14 15:33:44.619 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 15:33:44.625 +05:30 [INF] Calculated investment amount: 149.02.
2025-05-14 15:33:44.632 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:33:44.643 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:33:44.652 +05:30 [INF] Calculated investment amount: 109.05.
2025-05-14 15:33:44.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 15:33:44.664 +05:30 [INF] Calculated investment amount: 117.74.
2025-05-14 15:33:44.666 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:33:44.670 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 15:33:44.679 +05:30 [INF] Calculated investment amount: 129.18.
2025-05-14 15:33:44.682 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 15:33:44.688 +05:30 [INF] Calculated investment amount: 110.2.
2025-05-14 15:33:44.695 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:33:44.699 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 15:33:44.712 +05:30 [INF] Calculated investment amount: 262.83.
2025-05-14 15:33:44.717 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:33:44.721 +05:30 [INF] Calculated investment amount: 253.97.
2025-05-14 15:33:44.723 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:33:44.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 15:33:44.735 +05:30 [INF] Calculated investment amount: 252.54.
2025-05-14 15:33:44.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 15:33:44.751 +05:30 [INF] Calculated investment amount: 284.48.
2025-05-14 15:33:44.765 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:33:44.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.89, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 15:33:44.779 +05:30 [INF] Calculated investment amount: 335.07.
2025-05-14 15:33:44.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.11, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 15:33:44.790 +05:30 [INF] Calculated investment amount: 351.01.
2025-05-14 15:33:44.793 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:33:44.798 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 15:33:44.803 +05:30 [INF] Calculated investment amount: 70.46.
2025-05-14 15:33:44.808 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 15:33:44.818 +05:30 [INF] Calculated investment amount: 73.88.
2025-05-14 15:33:44.824 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:33:44.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 15:33:44.841 +05:30 [INF] Calculated investment amount: 49.39.
2025-05-14 15:33:44.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 15:33:44.854 +05:30 [INF] Calculated investment amount: 52.62.
2025-05-14 15:33:44.863 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:33:44.865 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 15:33:44.872 +05:30 [INF] Calculated investment amount: 71.73.
2025-05-14 15:33:44.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 15:33:44.885 +05:30 [INF] Calculated investment amount: 69.5.
2025-05-14 15:33:44.894 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:33:44.896 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":6.25,"InvestmentAmount":469.57},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":5.75,"InvestmentAmount":441.57}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":4.79,"InvestmentAmount":336.42},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.21,"InvestmentAmount":307.83}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":4.63,"InvestmentAmount":312.51},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":4.37,"InvestmentAmount":301.26}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":5.36,"InvestmentAmount":463.02},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.14,"InvestmentAmount":446.56}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":6.85,"InvestmentAmount":562.31},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":7.15,"InvestmentAmount":582.02}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.16,"InvestmentAmount":439.43},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":5.34,"InvestmentAmount":452.19}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":176.42},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":149.02}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":109.05},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":117.74}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":129.18},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":110.2}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.06,"InvestmentAmount":262.83},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":2.94,"InvestmentAmount":253.97}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":252.54},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":3.2,"InvestmentAmount":284.48}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":3.89,"InvestmentAmount":335.07},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":4.11,"InvestmentAmount":351.01}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.91,"InvestmentAmount":70.46},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.97,"InvestmentAmount":73.88}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.6,"InvestmentAmount":49.39},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.65,"InvestmentAmount":52.62}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.96,"InvestmentAmount":71.73},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.92,"InvestmentAmount":69.5}}}}
2025-05-14 15:33:44.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:33:44.973 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 828.1735ms
2025-05-14 15:33:44.985 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:33:44.994 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 1088.2158ms
2025-05-14 15:50:37.409 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:50:37.419 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.421 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 11.579ms
2025-05-14 15:50:37.430 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-14 15:50:37.434 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:50:37.455 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
2025-05-14 15:50:37.463 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.468 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:50:37.471 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:50:37.482 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:50:37.491 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:50:37.493 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 15:50:37.495 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 15:50:37.498 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:50:37.502 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:50:37.505 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 15:50:37.510 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 15:50:37.520 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 15:50:37.527 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:50:37.530 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:50:37.535 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:50:37.537 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:50:37.542 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 15:50:37.547 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 15:50:37.549 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:50:37.554 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:50:37.560 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 15:50:37.561 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:50:37.575 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:50:37.579 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 15:50:37.582 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:50:37.585 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 103.3962ms
2025-05-14 15:50:37.590 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:50:37.595 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 165.2238ms
2025-05-14 15:50:37.604 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=5 - null null
2025-05-14 15:50:37.615 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.619 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=5 - 204 null null 15.1078ms
2025-05-14 15:50:37.621 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=5 - application/json 477
2025-05-14 15:50:37.625 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:50:37.632 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:50:37.646 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:50:37.660 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.667 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.691 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
2025-05-14 15:50:37.693 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 68.4213ms
2025-05-14 15:50:37.697 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 65.0725ms
2025-05-14 15:50:37.701 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.710 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:50:37.715 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:50:37.716 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:50:37.722 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:50:37.732 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:50:37.743 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:50:37.759 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
2025-05-14 15:50:37.778 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:20:37 AM'.
2025-05-14 15:50:37.790 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:50:37.793 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.798 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:50:37.802 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:50:37.807 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:50:37.812 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:50:37.815 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:50:37.817 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:50:37.819 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:50:37.899 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:50:37.909 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:50:37.913 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:50:37.915 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:50:37.920 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:50:37.922 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:50:37.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-14 15:50:37.930 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:50:37.932 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:50:37.940 +05:30 [INF] Calculated investment amount: 6470.
2025-05-14 15:50:37.944 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 35.3198ms
2025-05-14 15:50:37.952 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 39.2175ms
2025-05-14 15:50:37.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 15:50:37.959 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:50:37.963 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:50:37.969 +05:30 [INF] Calculated investment amount: 6169.53.
2025-05-14 15:50:37.973 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 263.9414ms
2025-05-14 15:50:37.977 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 262.3703ms
2025-05-14 15:50:37.979 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:50:38.014 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-14 15:50:38.019 +05:30 [INF] Calculated investment amount: 4428.33.
2025-05-14 15:50:38.023 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-14 15:50:38.031 +05:30 [INF] Calculated investment amount: 4166.03.
2025-05-14 15:50:38.032 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:50:38.036 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-14 15:50:38.045 +05:30 [INF] Calculated investment amount: 4009.53.
2025-05-14 15:50:38.048 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-14 15:50:38.063 +05:30 [INF] Calculated investment amount: 3916.51.
2025-05-14 15:50:38.070 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:50:38.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 15:50:38.082 +05:30 [INF] Calculated investment amount: 3596.39.
2025-05-14 15:50:38.092 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-14 15:50:38.097 +05:30 [INF] Calculated investment amount: 3488.45.
2025-05-14 15:50:38.098 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:50:38.100 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-14 15:50:38.110 +05:30 [INF] Calculated investment amount: 4224.56.
2025-05-14 15:50:38.115 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-14 15:50:38.119 +05:30 [INF] Calculated investment amount: 4350.24.
2025-05-14 15:50:38.121 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:50:38.127 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-14 15:50:38.132 +05:30 [INF] Calculated investment amount: 3381.89.
2025-05-14 15:50:38.135 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-14 15:50:38.145 +05:30 [INF] Calculated investment amount: 3471.29.
2025-05-14 15:50:38.148 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:50:38.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-14 15:50:38.160 +05:30 [INF] Calculated investment amount: 1518.09.
2025-05-14 15:50:38.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-14 15:50:38.170 +05:30 [INF] Calculated investment amount: 1318.82.
2025-05-14 15:50:38.178 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:50:38.181 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 15:50:38.187 +05:30 [INF] Calculated investment amount: 914.48.
2025-05-14 15:50:38.197 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-14 15:50:38.202 +05:30 [INF] Calculated investment amount: 967.79.
2025-05-14 15:50:38.204 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:50:38.211 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-14 15:50:38.214 +05:30 [INF] Calculated investment amount: 1097.32.
2025-05-14 15:50:38.215 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-14 15:50:38.220 +05:30 [INF] Calculated investment amount: 962.53.
2025-05-14 15:50:38.225 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:50:38.230 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-14 15:50:38.235 +05:30 [INF] Calculated investment amount: 589.84.
2025-05-14 15:50:38.237 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 15:50:38.245 +05:30 [INF] Calculated investment amount: 579.81.
2025-05-14 15:50:38.250 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:50:38.253 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-14 15:50:38.262 +05:30 [INF] Calculated investment amount: 589.38.
2025-05-14 15:50:38.264 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-14 15:50:38.268 +05:30 [INF] Calculated investment amount: 657.54.
2025-05-14 15:50:38.269 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:50:38.274 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-14 15:50:38.287 +05:30 [INF] Calculated investment amount: 756.41.
2025-05-14 15:50:38.296 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-14 15:50:38.300 +05:30 [INF] Calculated investment amount: 791.83.
2025-05-14 15:50:38.305 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:50:38.308 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-14 15:50:38.315 +05:30 [INF] Calculated investment amount: 594.16.
2025-05-14 15:50:38.317 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-14 15:50:38.322 +05:30 [INF] Calculated investment amount: 616.17.
2025-05-14 15:50:38.327 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:50:38.329 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-14 15:50:38.336 +05:30 [INF] Calculated investment amount: 433.84.
2025-05-14 15:50:38.338 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-14 15:50:38.349 +05:30 [INF] Calculated investment amount: 457.
2025-05-14 15:50:38.354 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:50:38.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-14 15:50:38.364 +05:30 [INF] Calculated investment amount: 590.69.
2025-05-14 15:50:38.365 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-14 15:50:38.369 +05:30 [INF] Calculated investment amount: 576.47.
2025-05-14 15:50:38.383 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:50:38.385 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":10.42,"InvestmentAmount":6470},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":9.58,"InvestmentAmount":6169.53}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":7.98,"InvestmentAmount":4428.33},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":7.02,"InvestmentAmount":4166.03}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":7.72,"InvestmentAmount":4009.53},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":7.28,"InvestmentAmount":3916.51}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":3596.39},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":3488.45}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":4224.56},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":4350.24}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":3381.89},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":3471.29}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":1518.09},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":1318.82}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":914.48},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":967.79}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":1097.32},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":962.53}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":589.84},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":579.81}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":589.38},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":657.54}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":756.41},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":791.83}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.91,"InvestmentAmount":594.16},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.97,"InvestmentAmount":616.17}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.6,"InvestmentAmount":433.84},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.65,"InvestmentAmount":457}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.96,"InvestmentAmount":590.69},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.92,"InvestmentAmount":576.47}}}}
2025-05-14 15:50:38.442 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:50:38.447 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 662.4021ms
2025-05-14 15:50:38.452 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:50:38.458 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=5 - 200 null application/json; charset=utf-8 836.6869ms
2025-05-14 15:56:43.058 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:56:43.068 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.071 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 12.4228ms
2025-05-14 15:56:43.083 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-14 15:56:43.088 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:56:43.097 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
2025-05-14 15:56:43.101 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.102 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:56:43.103 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:56:43.106 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:56:43.109 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:56:43.112 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-14 15:56:43.113 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-14 15:56:43.115 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-14 15:56:43.116 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-14 15:56:43.117 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 15:56:43.118 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 15:56:43.127 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 15:56:43.132 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-14 15:56:43.133 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:56:43.135 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:56:43.137 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 15:56:43.139 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 15:56:43.141 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-14 15:56:43.144 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 15:56:43.147 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 15:56:43.148 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 15:56:43.150 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 15:56:43.153 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:56:43.154 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 15:56:43.157 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:56:43.161 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.253ms
2025-05-14 15:56:43.162 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:56:43.164 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.8192ms
2025-05-14 15:56:43.173 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-14 15:56:43.178 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.180 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 6.3904ms
2025-05-14 15:56:43.185 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 483
2025-05-14 15:56:43.187 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:56:43.192 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:56:43.197 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:56:43.203 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.210 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.219 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
2025-05-14 15:56:43.221 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 33.9814ms
2025-05-14 15:56:43.223 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 31.6691ms
2025-05-14 15:56:43.229 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.236 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:56:43.240 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:56:43.241 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:56:43.246 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:56:43.249 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:56:43.253 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:56:43.258 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
2025-05-14 15:56:43.264 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:26:43 AM'.
2025-05-14 15:56:43.268 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:56:43.270 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.271 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:56:43.273 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:56:43.274 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:56:43.276 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:56:43.278 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:56:43.278 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:56:43.279 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:56:43.312 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:56:43.315 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:56:43.317 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:56:43.319 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:56:43.325 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:56:43.327 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:56:43.329 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-14 15:56:43.331 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:56:43.332 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:56:43.334 +05:30 [INF] Calculated investment amount: 93.03.
2025-05-14 15:56:43.337 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 22.1297ms
2025-05-14 15:56:43.339 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 22.2067ms
2025-05-14 15:56:43.340 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-14 15:56:43.342 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:56:43.344 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:56:43.347 +05:30 [INF] Calculated investment amount: 101.32.
2025-05-14 15:56:43.349 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 112.8933ms
2025-05-14 15:56:43.351 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 110.7072ms
2025-05-14 15:56:43.352 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:56:43.364 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-14 15:56:43.369 +05:30 [INF] Calculated investment amount: 42.49.
2025-05-14 15:56:43.372 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-14 15:56:43.378 +05:30 [INF] Calculated investment amount: 50.97.
2025-05-14 15:56:43.380 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:56:43.382 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-14 15:56:43.386 +05:30 [INF] Calculated investment amount: 30.35.
2025-05-14 15:56:43.388 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-14 15:56:43.391 +05:30 [INF] Calculated investment amount: 33.61.
2025-05-14 15:56:43.396 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:56:43.398 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-14 15:56:43.400 +05:30 [INF] Calculated investment amount: 174.51.
2025-05-14 15:56:43.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-14 15:56:43.403 +05:30 [INF] Calculated investment amount: 174.85.
2025-05-14 15:56:43.405 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:56:43.407 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-14 15:56:43.411 +05:30 [INF] Calculated investment amount: 150.85.
2025-05-14 15:56:43.414 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-14 15:56:43.416 +05:30 [INF] Calculated investment amount: 147.62.
2025-05-14 15:56:43.418 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:56:43.419 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-14 15:56:43.422 +05:30 [INF] Calculated investment amount: 150.61.
2025-05-14 15:56:43.425 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-14 15:56:43.428 +05:30 [INF] Calculated investment amount: 149.22.
2025-05-14 15:56:43.431 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:56:43.433 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-14 15:56:43.435 +05:30 [INF] Calculated investment amount: 39.28.
2025-05-14 15:56:43.436 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-14 15:56:43.439 +05:30 [INF] Calculated investment amount: 43.91.
2025-05-14 15:56:43.440 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:56:43.445 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-14 15:56:43.446 +05:30 [INF] Calculated investment amount: 18.76.
2025-05-14 15:56:43.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-14 15:56:43.450 +05:30 [INF] Calculated investment amount: 16.57.
2025-05-14 15:56:43.452 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:56:43.454 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-14 15:56:43.458 +05:30 [INF] Calculated investment amount: 25.27.
2025-05-14 15:56:43.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-14 15:56:43.463 +05:30 [INF] Calculated investment amount: 28.48.
2025-05-14 15:56:43.465 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:56:43.466 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 23.
2025-05-14 15:56:43.469 +05:30 [INF] Calculated investment amount: 23.68.
2025-05-14 15:56:43.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-14 15:56:43.473 +05:30 [INF] Calculated investment amount: 24.09.
2025-05-14 15:56:43.475 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:56:43.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 23.
2025-05-14 15:56:43.480 +05:30 [INF] Calculated investment amount: 31.73.
2025-05-14 15:56:43.481 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 23.
2025-05-14 15:56:43.483 +05:30 [INF] Calculated investment amount: 32.46.
2025-05-14 15:56:43.485 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:56:43.486 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 23.
2025-05-14 15:56:43.489 +05:30 [INF] Calculated investment amount: 30.9.
2025-05-14 15:56:43.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 23.
2025-05-14 15:56:43.494 +05:30 [INF] Calculated investment amount: 30.73.
2025-05-14 15:56:43.495 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:56:43.497 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 23.
2025-05-14 15:56:43.500 +05:30 [INF] Calculated investment amount: 25.47.
2025-05-14 15:56:43.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 23.
2025-05-14 15:56:43.503 +05:30 [INF] Calculated investment amount: 24.06.
2025-05-14 15:56:43.504 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:56:43.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 23.
2025-05-14 15:56:43.510 +05:30 [INF] Calculated investment amount: 27.
2025-05-14 15:56:43.512 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 23.
2025-05-14 15:56:43.516 +05:30 [INF] Calculated investment amount: 25.71.
2025-05-14 15:56:43.518 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:56:43.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 23.
2025-05-14 15:56:43.522 +05:30 [INF] Calculated investment amount: 20.46.
2025-05-14 15:56:43.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 23.
2025-05-14 15:56:43.528 +05:30 [INF] Calculated investment amount: 21.43.
2025-05-14 15:56:43.532 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:56:43.535 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":8.33,"InvestmentAmount":93.03},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":7.67,"InvestmentAmount":101.32}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":6.38,"InvestmentAmount":42.49},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":5.62,"InvestmentAmount":50.97}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":6.18,"InvestmentAmount":30.35},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.82,"InvestmentAmount":33.61}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":5.36,"InvestmentAmount":174.51},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.14,"InvestmentAmount":174.85}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":6.85,"InvestmentAmount":150.85},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":7.15,"InvestmentAmount":147.62}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.16,"InvestmentAmount":150.61},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":5.34,"InvestmentAmount":149.22}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":39.28},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":43.91}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":18.76},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":16.57}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":25.27},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":28.48}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":23.68},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":24.09}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":31.73},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":32.46}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":30.9},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":30.73}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":25.47},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":24.06}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":27},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":25.71}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":20.46},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":21.43}}}}
2025-05-14 15:56:43.547 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:56:43.551 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 284.245ms
2025-05-14 15:56:43.554 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:56:43.557 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 200 null application/json; charset=utf-8 371.3285ms
2025-05-14 15:57:26.720 +05:30 [INF] Application is shutting down...
2025-05-14 15:57:36.863 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 15:57:37.050 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 15:57:37.058 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 15:57:37.063 +05:30 [INF] Hosting environment: Development
2025-05-14 15:57:37.070 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 15:58:19.022 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 15:58:19.107 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.118 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 96.3867ms
2025-05-14 15:58:19.128 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-14 15:58:19.211 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:58:19.246 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
2025-05-14 15:58:19.253 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:58:19.290 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:58:19.388 +05:30 [INF] Starting allocation calculation...
2025-05-14 15:58:19.421 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 15:58:19.424 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 15:58:19.434 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 15:58:19.436 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 15:58:19.438 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 15:58:19.444 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 15:58:19.452 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 15:58:19.471 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 15:58:19.474 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 15:58:19.476 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 15:58:19.478 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 15:58:19.479 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 15:58:19.484 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 15:58:19.485 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 15:58:19.494 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 15:58:19.498 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 15:58:19.500 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 15:58:19.530 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 15:58:19.543 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 15:58:19.546 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 15:58:19.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 15:58:19.581 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 278.6431ms
2025-05-14 15:58:19.588 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 15:58:19.593 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 465.8135ms
2025-05-14 15:58:19.602 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 15:58:19.615 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.616 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:58:19.620 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:58:19.620 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 18.8173ms
2025-05-14 15:58:19.632 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.641 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.652 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 499
2025-05-14 15:58:19.657 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 40.975ms
2025-05-14 15:58:19.662 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 42.8636ms
2025-05-14 15:58:19.675 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:58:19.679 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 15:58:19.687 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 15:58:19.709 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
2025-05-14 15:58:19.720 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:58:19.729 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 15:58:19.734 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.747 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
2025-05-14 15:58:19.779 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:28:19 AM'.
2025-05-14 15:58:19.780 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:58:19.792 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.792 +05:30 [INF] CORS policy execution successful.
2025-05-14 15:58:19.803 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:58:19.807 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:58:19.808 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:58:19.815 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 15:58:19.833 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 15:58:19.838 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 15:58:19.854 +05:30 [INF] Starting product allocation calculation.
2025-05-14 15:58:19.858 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 15:58:19.859 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 15:58:19.863 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 15:58:19.865 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 15:58:19.870 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 15:58:19.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:58:19.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:58:19.940 +05:30 [INF] Product data loaded successfully.
2025-05-14 15:58:19.945 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 88.2688ms
2025-05-14 15:58:19.956 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 15:58:19.958 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 122.2139ms
2025-05-14 15:58:19.961 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 15:58:19.969 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 15:58:19.972 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 15:58:19.978 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 290.5298ms
2025-05-14 15:58:19.984 +05:30 [INF] Calculated investment amount: 625.85.
2025-05-14 15:58:19.986 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 306.386ms
2025-05-14 15:58:19.998 +05:30 [INF] Total Investment Amount: 625.85
2025-05-14 15:58:20.016 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:58:20.025 +05:30 [INF] Calculated investment amount: 589.02.
2025-05-14 15:58:20.027 +05:30 [INF] Total Investment Amount: 1214.87
2025-05-14 15:58:20.030 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 15:58:20.037 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 15:58:20.041 +05:30 [INF] Calculated investment amount: 448.09.
2025-05-14 15:58:20.043 +05:30 [INF] Total Investment Amount: 1662.9599999999998
2025-05-14 15:58:20.044 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 15:58:20.053 +05:30 [INF] Calculated investment amount: 410.93.
2025-05-14 15:58:20.058 +05:30 [INF] Total Investment Amount: 2073.89
2025-05-14 15:58:20.061 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 15:58:20.064 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 15:58:20.072 +05:30 [INF] Calculated investment amount: 417.13.
2025-05-14 15:58:20.076 +05:30 [INF] Total Investment Amount: 2491.02
2025-05-14 15:58:20.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 15:58:20.084 +05:30 [INF] Calculated investment amount: 401.22.
2025-05-14 15:58:20.086 +05:30 [INF] Total Investment Amount: 2892.24
2025-05-14 15:58:20.091 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 15:58:20.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:58:20.102 +05:30 [INF] Calculated investment amount: 429.33.
2025-05-14 15:58:20.107 +05:30 [INF] Total Investment Amount: 3321.5699999999997
2025-05-14 15:58:20.108 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.78, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 15:58:20.113 +05:30 [INF] Calculated investment amount: 415.28.
2025-05-14 15:58:20.123 +05:30 [INF] Total Investment Amount: 3736.8499999999995
2025-05-14 15:58:20.125 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 15:58:20.129 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.36, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 15:58:20.138 +05:30 [INF] Calculated investment amount: 522.09.
2025-05-14 15:58:20.144 +05:30 [INF] Total Investment Amount: 4258.94
2025-05-14 15:58:20.145 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.64, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 15:58:20.155 +05:30 [INF] Calculated investment amount: 540.5.
2025-05-14 15:58:20.157 +05:30 [INF] Total Investment Amount: 4799.44
2025-05-14 15:58:20.160 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 15:58:20.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 15:58:20.170 +05:30 [INF] Calculated investment amount: 407.92.
2025-05-14 15:58:20.177 +05:30 [INF] Total Investment Amount: 5207.36
2025-05-14 15:58:20.178 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.96, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 15:58:20.190 +05:30 [INF] Calculated investment amount: 420.01.
2025-05-14 15:58:20.194 +05:30 [INF] Total Investment Amount: 5627.37
2025-05-14 15:58:20.199 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 15:58:20.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 15:58:20.211 +05:30 [INF] Calculated investment amount: 132.51.
2025-05-14 15:58:20.217 +05:30 [INF] Total Investment Amount: 5759.88
2025-05-14 15:58:20.221 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.34, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 15:58:20.226 +05:30 [INF] Calculated investment amount: 111.56.
2025-05-14 15:58:20.228 +05:30 [INF] Total Investment Amount: 5871.4400000000005
2025-05-14 15:58:20.232 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 15:58:20.243 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 15:58:20.248 +05:30 [INF] Calculated investment amount: 81.4.
2025-05-14 15:58:20.254 +05:30 [INF] Total Investment Amount: 5952.84
2025-05-14 15:58:20.256 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 15:58:20.263 +05:30 [INF] Calculated investment amount: 88.68.
2025-05-14 15:58:20.274 +05:30 [INF] Total Investment Amount: 6041.52
2025-05-14 15:58:20.275 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 15:58:20.281 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 15:58:20.288 +05:30 [INF] Calculated investment amount: 96.3.
2025-05-14 15:58:20.298 +05:30 [INF] Total Investment Amount: 6137.820000000001
2025-05-14 15:58:20.313 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 15:58:20.324 +05:30 [INF] Calculated investment amount: 83.26.
2025-05-14 15:58:20.333 +05:30 [INF] Total Investment Amount: 6221.080000000001
2025-05-14 15:58:20.336 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 15:58:20.344 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.68, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 15:58:20.349 +05:30 [INF] Calculated investment amount: 230.19.
2025-05-14 15:58:20.355 +05:30 [INF] Total Investment Amount: 6451.27
2025-05-14 15:58:20.356 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 15:58:20.362 +05:30 [INF] Calculated investment amount: 222.01.
2025-05-14 15:58:20.367 +05:30 [INF] Total Investment Amount: 6673.280000000001
2025-05-14 15:58:20.370 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 15:58:20.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 15:58:20.382 +05:30 [INF] Calculated investment amount: 220.98.
2025-05-14 15:58:20.388 +05:30 [INF] Total Investment Amount: 6894.26
2025-05-14 15:58:20.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 15:58:20.398 +05:30 [INF] Calculated investment amount: 248.92.
2025-05-14 15:58:20.410 +05:30 [INF] Total Investment Amount: 7143.18
2025-05-14 15:58:20.412 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 15:58:20.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 15:58:20.426 +05:30 [INF] Calculated investment amount: 292.87.
2025-05-14 15:58:20.428 +05:30 [INF] Total Investment Amount: 7436.05
2025-05-14 15:58:20.434 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.6, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 15:58:20.442 +05:30 [INF] Calculated investment amount: 307.45.
2025-05-14 15:58:20.444 +05:30 [INF] Total Investment Amount: 7743.5
2025-05-14 15:58:20.447 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 15:58:20.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 15:58:20.458 +05:30 [INF] Calculated investment amount: 34.84.
2025-05-14 15:58:20.460 +05:30 [INF] Total Investment Amount: 7778.34
2025-05-14 15:58:20.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 15:58:20.471 +05:30 [INF] Calculated investment amount: 37.32.
2025-05-14 15:58:20.473 +05:30 [INF] Total Investment Amount: 7815.66
2025-05-14 15:58:20.477 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 15:58:20.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.3, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 15:58:20.488 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-14 15:58:20.491 +05:30 [INF] Total Investment Amount: 7840.36
2025-05-14 15:58:20.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.32, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 15:58:20.509 +05:30 [INF] Calculated investment amount: 25.9.
2025-05-14 15:58:20.513 +05:30 [INF] Total Investment Amount: 7866.259999999999
2025-05-14 15:58:20.516 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 15:58:20.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.48, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 15:58:20.532 +05:30 [INF] Calculated investment amount: 35.87.
2025-05-14 15:58:20.540 +05:30 [INF] Total Investment Amount: 7902.129999999999
2025-05-14 15:58:20.545 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.46, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 15:58:20.557 +05:30 [INF] Calculated investment amount: 34.75.
2025-05-14 15:58:20.560 +05:30 [INF] Total Investment Amount: 7936.879999999999
2025-05-14 15:58:20.575 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 15:58:20.579 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":8.33,"InvestmentAmount":625.85},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":7.67,"InvestmentAmount":589.02}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":6.38,"InvestmentAmount":448.09},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":5.62,"InvestmentAmount":410.93}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":6.18,"InvestmentAmount":417.13},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.82,"InvestmentAmount":401.22}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.97,"InvestmentAmount":429.33},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.78,"InvestmentAmount":415.28}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":6.36,"InvestmentAmount":522.09},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.64,"InvestmentAmount":540.5}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.79,"InvestmentAmount":407.92},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.96,"InvestmentAmount":420.01}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":1.66,"InvestmentAmount":132.51},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.34,"InvestmentAmount":111.56}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.06,"InvestmentAmount":81.4},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":88.68}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.23,"InvestmentAmount":96.3},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.02,"InvestmentAmount":83.26}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":2.68,"InvestmentAmount":230.19},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":2.57,"InvestmentAmount":222.01}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.45,"InvestmentAmount":220.98},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":248.92}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":3.4,"InvestmentAmount":292.87},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":3.6,"InvestmentAmount":307.45}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.45,"InvestmentAmount":34.84},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.49,"InvestmentAmount":37.32}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.3,"InvestmentAmount":24.7},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.32,"InvestmentAmount":25.9}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.48,"InvestmentAmount":35.87},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.46,"InvestmentAmount":34.75}}}}
2025-05-14 15:58:20.651 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 15:58:20.673 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 850.1312ms
2025-05-14 15:58:20.687 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 15:58:20.695 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 1042.3344ms
2025-05-14 16:01:50.731 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:01:50.742 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:50.747 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.7689ms
2025-05-14 16:01:50.755 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-14 16:01:50.764 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:50 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:01:50.786 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:50 AM'.
2025-05-14 16:01:50.793 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:50.795 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:01:50.798 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:01:50.814 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:01:50.817 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:01:50.818 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 16:01:50.822 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:01:50.826 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:01:50.828 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:01:50.831 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 16:01:50.833 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 16:01:50.843 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 16:01:50.847 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-14 16:01:50.849 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 16:01:50.852 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-14 16:01:50.858 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 16:01:50.861 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 16:01:50.873 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-14 16:01:50.882 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 16:01:50.884 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-14 16:01:50.888 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 16:01:50.893 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 16:01:50.900 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:01:50.904 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 16:01:50.911 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:01:50.916 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 104.0805ms
2025-05-14 16:01:50.919 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:01:50.921 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 165.9963ms
2025-05-14 16:01:50.930 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=28 - null null
2025-05-14 16:01:50.945 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:01:50.948 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:01:50.949 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:50.961 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:50.971 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:50.983 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=28 - 204 null null 52.8041ms
2025-05-14 16:01:50.985 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 39.5508ms
2025-05-14 16:01:50.990 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 41.21ms
2025-05-14 16:01:51.000 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=28 - application/json 486
2025-05-14 16:01:51.011 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:01:51.019 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:01:51.028 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:01:51.034 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:01:51.041 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:01:51.055 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
2025-05-14 16:01:51.074 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
2025-05-14 16:01:51.088 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:31:51 AM'.
2025-05-14 16:01:51.093 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:51.102 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:51.107 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:01:51.109 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:01:51.114 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:01:51.116 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:01:51.121 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:01:51.126 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:01:51.129 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:01:51.153 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:01:51.161 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:01:51.170 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:01:51.171 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:01:51.176 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:01:51.178 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:01:51.183 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:01:51.184 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:01:51.187 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:01:51.291 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:01:51.303 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 142.0728ms
2025-05-14 16:01:51.306 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 136.8427ms
2025-05-14 16:01:51.312 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:01:51.315 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:01:51.321 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:01:51.326 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 28.
2025-05-14 16:01:51.329 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 317.8938ms
2025-05-14 16:01:51.334 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 314.8742ms
2025-05-14 16:01:51.339 +05:30 [INF] Calculated investment amount: 90.29.
2025-05-14 16:01:51.373 +05:30 [INF] Total Investment Amount: 90.29
2025-05-14 16:01:51.376 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 28.
2025-05-14 16:01:51.383 +05:30 [INF] Calculated investment amount: 101.91.
2025-05-14 16:01:51.387 +05:30 [INF] Total Investment Amount: 192.2
2025-05-14 16:01:51.390 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:01:51.396 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 28.
2025-05-14 16:01:51.411 +05:30 [INF] Calculated investment amount: 19.66.
2025-05-14 16:01:51.414 +05:30 [INF] Total Investment Amount: 211.85999999999999
2025-05-14 16:01:51.418 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 28.
2025-05-14 16:01:51.425 +05:30 [INF] Calculated investment amount: 25.19.
2025-05-14 16:01:51.427 +05:30 [INF] Total Investment Amount: 237.04999999999998
2025-05-14 16:01:51.433 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:01:51.435 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 28.
2025-05-14 16:01:51.440 +05:30 [INF] Calculated investment amount: 6.56.
2025-05-14 16:01:51.445 +05:30 [INF] Total Investment Amount: 243.60999999999999
2025-05-14 16:01:51.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 28.
2025-05-14 16:01:51.452 +05:30 [INF] Calculated investment amount: 7.55.
2025-05-14 16:01:51.457 +05:30 [INF] Total Investment Amount: 251.16
2025-05-14 16:01:51.460 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:01:51.466 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 28.
2025-05-14 16:01:51.470 +05:30 [INF] Calculated investment amount: 227.8.
2025-05-14 16:01:51.472 +05:30 [INF] Total Investment Amount: 478.96000000000004
2025-05-14 16:01:51.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 28.
2025-05-14 16:01:51.481 +05:30 [INF] Calculated investment amount: 230.6.
2025-05-14 16:01:51.483 +05:30 [INF] Total Investment Amount: 709.5600000000001
2025-05-14 16:01:51.484 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:01:51.489 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 28.
2025-05-14 16:01:51.499 +05:30 [INF] Calculated investment amount: 54.2.
2025-05-14 16:01:51.503 +05:30 [INF] Total Investment Amount: 763.7600000000001
2025-05-14 16:01:51.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 28.
2025-05-14 16:01:51.513 +05:30 [INF] Calculated investment amount: 52.45.
2025-05-14 16:01:51.515 +05:30 [INF] Total Investment Amount: 816.2100000000002
2025-05-14 16:01:51.517 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:01:51.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 28.
2025-05-14 16:01:51.529 +05:30 [INF] Calculated investment amount: 115.23.
2025-05-14 16:01:51.532 +05:30 [INF] Total Investment Amount: 931.4400000000002
2025-05-14 16:01:51.534 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 28.
2025-05-14 16:01:51.539 +05:30 [INF] Calculated investment amount: 113.09.
2025-05-14 16:01:51.544 +05:30 [INF] Total Investment Amount: 1044.5300000000002
2025-05-14 16:01:51.546 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:01:51.550 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 28.
2025-05-14 16:01:51.559 +05:30 [INF] Calculated investment amount: 42.24.
2025-05-14 16:01:51.564 +05:30 [INF] Total Investment Amount: 1086.7700000000002
2025-05-14 16:01:51.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 28.
2025-05-14 16:01:51.579 +05:30 [INF] Calculated investment amount: 50.43.
2025-05-14 16:01:51.585 +05:30 [INF] Total Investment Amount: 1137.2000000000003
2025-05-14 16:01:51.588 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:01:51.597 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 28.
2025-05-14 16:01:51.601 +05:30 [INF] Calculated investment amount: 10.04.
2025-05-14 16:01:51.604 +05:30 [INF] Total Investment Amount: 1147.2400000000002
2025-05-14 16:01:51.610 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 28.
2025-05-14 16:01:51.615 +05:30 [INF] Calculated investment amount: 8.48.
2025-05-14 16:01:51.620 +05:30 [INF] Total Investment Amount: 1155.7200000000003
2025-05-14 16:01:51.622 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:01:51.631 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 28.
2025-05-14 16:01:51.636 +05:30 [INF] Calculated investment amount: 7.03.
2025-05-14 16:01:51.639 +05:30 [INF] Total Investment Amount: 1162.7500000000002
2025-05-14 16:01:51.645 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 28.
2025-05-14 16:01:51.650 +05:30 [INF] Calculated investment amount: 8.42.
2025-05-14 16:01:51.656 +05:30 [INF] Total Investment Amount: 1171.1700000000003
2025-05-14 16:01:51.660 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:01:51.663 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 28.
2025-05-14 16:01:51.670 +05:30 [INF] Calculated investment amount: 14.27.
2025-05-14 16:01:51.673 +05:30 [INF] Total Investment Amount: 1185.4400000000003
2025-05-14 16:01:51.678 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 28.
2025-05-14 16:01:51.683 +05:30 [INF] Calculated investment amount: 14.29.
2025-05-14 16:01:51.685 +05:30 [INF] Total Investment Amount: 1199.7300000000002
2025-05-14 16:01:51.694 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:01:51.699 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 28.
2025-05-14 16:01:51.705 +05:30 [INF] Calculated investment amount: 34.35.
2025-05-14 16:01:51.711 +05:30 [INF] Total Investment Amount: 1234.0800000000002
2025-05-14 16:01:51.712 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 28.
2025-05-14 16:01:51.717 +05:30 [INF] Calculated investment amount: 34.01.
2025-05-14 16:01:51.722 +05:30 [INF] Total Investment Amount: 1268.0900000000001
2025-05-14 16:01:51.726 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:01:51.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 28.
2025-05-14 16:01:51.738 +05:30 [INF] Calculated investment amount: 23.1.
2025-05-14 16:01:51.745 +05:30 [INF] Total Investment Amount: 1291.19
2025-05-14 16:01:51.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 28.
2025-05-14 16:01:51.752 +05:30 [INF] Calculated investment amount: 22.7.
2025-05-14 16:01:51.758 +05:30 [INF] Total Investment Amount: 1313.89
2025-05-14 16:01:51.761 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:01:51.763 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 28.
2025-05-14 16:01:51.775 +05:30 [INF] Calculated investment amount: 17.73.
2025-05-14 16:01:51.780 +05:30 [INF] Total Investment Amount: 1331.6200000000001
2025-05-14 16:01:51.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 28.
2025-05-14 16:01:51.791 +05:30 [INF] Calculated investment amount: 16.31.
2025-05-14 16:01:51.793 +05:30 [INF] Total Investment Amount: 1347.93
2025-05-14 16:01:51.799 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:01:51.803 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 28.
2025-05-14 16:01:51.813 +05:30 [INF] Calculated investment amount: 31.08.
2025-05-14 16:01:51.816 +05:30 [INF] Total Investment Amount: 1379.01
2025-05-14 16:01:51.820 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 28.
2025-05-14 16:01:51.828 +05:30 [INF] Calculated investment amount: 29.06.
2025-05-14 16:01:51.833 +05:30 [INF] Total Investment Amount: 1408.07
2025-05-14 16:01:51.837 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:01:51.844 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 28.
2025-05-14 16:01:51.852 +05:30 [INF] Calculated investment amount: 6.72.
2025-05-14 16:01:51.859 +05:30 [INF] Total Investment Amount: 1414.79
2025-05-14 16:01:51.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 28.
2025-05-14 16:01:51.870 +05:30 [INF] Calculated investment amount: 7.15.
2025-05-14 16:01:51.872 +05:30 [INF] Total Investment Amount: 1421.94
2025-05-14 16:01:51.882 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:01:51.884 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":13.02,"InvestmentAmount":90.29},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":11.98,"InvestmentAmount":101.91}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.32,"InvestmentAmount":19.66},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.68,"InvestmentAmount":25.19}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":2.57,"InvestmentAmount":6.56},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":2.43,"InvestmentAmount":7.55}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":8.93,"InvestmentAmount":227.8},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":8.57,"InvestmentAmount":230.6}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":3.42,"InvestmentAmount":54.2},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":3.58,"InvestmentAmount":52.45}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.16,"InvestmentAmount":115.23},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":5.34,"InvestmentAmount":113.09}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":3.46,"InvestmentAmount":42.24},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":2.79,"InvestmentAmount":50.43}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.18,"InvestmentAmount":10.04},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.32,"InvestmentAmount":8.48}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.69,"InvestmentAmount":7.03},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.56,"InvestmentAmount":8.42}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.59,"InvestmentAmount":14.27},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.56,"InvestmentAmount":14.29}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.9,"InvestmentAmount":34.35},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":1.02,"InvestmentAmount":34.01}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.93,"InvestmentAmount":23.1},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":0.99,"InvestmentAmount":22.7}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.93,"InvestmentAmount":17.73},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.07,"InvestmentAmount":16.31}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.91,"InvestmentAmount":31.08},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.09,"InvestmentAmount":29.06}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.02,"InvestmentAmount":6.72},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.98,"InvestmentAmount":7.15}}}}
2025-05-14 16:01:51.902 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:01:51.911 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 767.2435ms
2025-05-14 16:01:51.914 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:01:51.921 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=28 - 200 null application/json; charset=utf-8 921.0729ms
2025-05-14 16:03:14.569 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:03:14.576 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.578 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.2327ms
2025-05-14 16:03:14.587 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-14 16:03:14.590 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:03:14.599 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
2025-05-14 16:03:14.605 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.608 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:03:14.610 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:03:14.618 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:03:14.621 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:03:14.623 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 16:03:14.629 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:03:14.633 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:03:14.636 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:03:14.640 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 16:03:14.642 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 16:03:14.646 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:03:14.653 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:03:14.654 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:03:14.655 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:03:14.656 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:03:14.658 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:03:14.666 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:03:14.669 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:03:14.670 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:03:14.675 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:03:14.678 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:03:14.682 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:03:14.687 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:03:14.691 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:03:14.694 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 75.7733ms
2025-05-14 16:03:14.700 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:03:14.703 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 116.4793ms
2025-05-14 16:03:14.711 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - null null
2025-05-14 16:03:14.716 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.717 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - 204 null null 5.6893ms
2025-05-14 16:03:14.724 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:03:14.727 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - application/json 483
2025-05-14 16:03:14.728 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:03:14.734 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.740 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:03:14.747 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.748 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 23.5278ms
2025-05-14 16:03:14.750 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
2025-05-14 16:03:14.754 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 26.5477ms
2025-05-14 16:03:14.762 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:03:14.766 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.771 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:03:14.778 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:03:14.780 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:03:14.784 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:03:14.791 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
2025-05-14 16:03:14.793 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:03:14.800 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:33:14 AM'.
2025-05-14 16:03:14.803 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.806 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:03:14.807 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:03:14.808 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:03:14.814 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:03:14.815 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:03:14.817 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:03:14.819 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:03:14.819 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:03:14.828 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:03:14.847 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:03:14.855 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:03:14.857 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:03:14.857 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:03:14.859 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:03:14.860 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 6.
2025-05-14 16:03:14.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:03:14.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:03:14.865 +05:30 [INF] Calculated investment amount: 4115.01.
2025-05-14 16:03:14.868 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 39.7852ms
2025-05-14 16:03:14.870 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.0545ms
2025-05-14 16:03:14.871 +05:30 [INF] Total Investment Amount: 4115.01
2025-05-14 16:03:14.873 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:03:14.879 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:03:14.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:03:14.883 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 120.5095ms
2025-05-14 16:03:14.884 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 113.3526ms
2025-05-14 16:03:14.888 +05:30 [INF] Calculated investment amount: 3957.19.
2025-05-14 16:03:14.904 +05:30 [INF] Total Investment Amount: 8072.200000000001
2025-05-14 16:03:14.905 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:03:14.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 6.
2025-05-14 16:03:14.916 +05:30 [INF] Calculated investment amount: 2757.38.
2025-05-14 16:03:14.917 +05:30 [INF] Total Investment Amount: 10829.580000000002
2025-05-14 16:03:14.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 6.
2025-05-14 16:03:14.923 +05:30 [INF] Calculated investment amount: 2625.09.
2025-05-14 16:03:14.925 +05:30 [INF] Total Investment Amount: 13454.670000000002
2025-05-14 16:03:14.926 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:03:14.934 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 6.
2025-05-14 16:03:14.938 +05:30 [INF] Calculated investment amount: 2460.17.
2025-05-14 16:03:14.939 +05:30 [INF] Total Investment Amount: 15914.840000000002
2025-05-14 16:03:14.940 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 6.
2025-05-14 16:03:14.948 +05:30 [INF] Calculated investment amount: 2423.77.
2025-05-14 16:03:14.949 +05:30 [INF] Total Investment Amount: 18338.61
2025-05-14 16:03:14.950 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:03:14.952 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:03:14.953 +05:30 [INF] Calculated investment amount: 4566.84.
2025-05-14 16:03:14.954 +05:30 [INF] Total Investment Amount: 22905.45
2025-05-14 16:03:14.959 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 6.
2025-05-14 16:03:14.963 +05:30 [INF] Calculated investment amount: 4438.23.
2025-05-14 16:03:14.964 +05:30 [INF] Total Investment Amount: 27343.68
2025-05-14 16:03:14.965 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:03:14.969 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 6.
2025-05-14 16:03:14.970 +05:30 [INF] Calculated investment amount: 5276.36.
2025-05-14 16:03:14.972 +05:30 [INF] Total Investment Amount: 32620.04
2025-05-14 16:03:14.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 6.
2025-05-14 16:03:14.976 +05:30 [INF] Calculated investment amount: 5413.59.
2025-05-14 16:03:14.981 +05:30 [INF] Total Investment Amount: 38033.630000000005
2025-05-14 16:03:14.982 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:03:14.983 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 6.
2025-05-14 16:03:14.985 +05:30 [INF] Calculated investment amount: 4271.7.
2025-05-14 16:03:14.986 +05:30 [INF] Total Investment Amount: 42305.33
2025-05-14 16:03:14.987 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 6.
2025-05-14 16:03:14.992 +05:30 [INF] Calculated investment amount: 4381.18.
2025-05-14 16:03:14.995 +05:30 [INF] Total Investment Amount: 46686.51
2025-05-14 16:03:14.996 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:03:14.998 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 6.
2025-05-14 16:03:15.000 +05:30 [INF] Calculated investment amount: 1408.25.
2025-05-14 16:03:15.006 +05:30 [INF] Total Investment Amount: 48094.76
2025-05-14 16:03:15.008 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 6.
2025-05-14 16:03:15.011 +05:30 [INF] Calculated investment amount: 1240.66.
2025-05-14 16:03:15.012 +05:30 [INF] Total Investment Amount: 49335.420000000006
2025-05-14 16:03:15.016 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:03:15.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:03:15.020 +05:30 [INF] Calculated investment amount: 837.44.
2025-05-14 16:03:15.021 +05:30 [INF] Total Investment Amount: 50172.86000000001
2025-05-14 16:03:15.023 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 6.
2025-05-14 16:03:15.030 +05:30 [INF] Calculated investment amount: 877.41.
2025-05-14 16:03:15.032 +05:30 [INF] Total Investment Amount: 51050.27000000001
2025-05-14 16:03:15.033 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:03:15.034 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 6.
2025-05-14 16:03:15.038 +05:30 [INF] Calculated investment amount: 1011.36.
2025-05-14 16:03:15.041 +05:30 [INF] Total Investment Amount: 52061.63000000001
2025-05-14 16:03:15.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 6.
2025-05-14 16:03:15.047 +05:30 [INF] Calculated investment amount: 899.56.
2025-05-14 16:03:15.051 +05:30 [INF] Total Investment Amount: 52961.19000000001
2025-05-14 16:03:15.052 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:03:15.054 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 6.
2025-05-14 16:03:15.056 +05:30 [INF] Calculated investment amount: 560.69.
2025-05-14 16:03:15.062 +05:30 [INF] Total Investment Amount: 53521.88000000001
2025-05-14 16:03:15.065 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:03:15.068 +05:30 [INF] Calculated investment amount: 552.2.
2025-05-14 16:03:15.069 +05:30 [INF] Total Investment Amount: 54074.08000000001
2025-05-14 16:03:15.073 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:03:15.075 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 6.
2025-05-14 16:03:15.078 +05:30 [INF] Calculated investment amount: 569.45.
2025-05-14 16:03:15.080 +05:30 [INF] Total Investment Amount: 54643.530000000006
2025-05-14 16:03:15.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 6.
2025-05-14 16:03:15.087 +05:30 [INF] Calculated investment amount: 632.25.
2025-05-14 16:03:15.089 +05:30 [INF] Total Investment Amount: 55275.780000000006
2025-05-14 16:03:15.090 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:03:15.096 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 6.
2025-05-14 16:03:15.099 +05:30 [INF] Calculated investment amount: 719.71.
2025-05-14 16:03:15.100 +05:30 [INF] Total Investment Amount: 55995.490000000005
2025-05-14 16:03:15.101 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 6.
2025-05-14 16:03:15.103 +05:30 [INF] Calculated investment amount: 751.27.
2025-05-14 16:03:15.104 +05:30 [INF] Total Investment Amount: 56746.76
2025-05-14 16:03:15.108 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:03:15.111 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 6.
2025-05-14 16:03:15.113 +05:30 [INF] Calculated investment amount: 1085.2.
2025-05-14 16:03:15.114 +05:30 [INF] Total Investment Amount: 57831.96
2025-05-14 16:03:15.114 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 6.
2025-05-14 16:03:15.120 +05:30 [INF] Calculated investment amount: 1125.43.
2025-05-14 16:03:15.121 +05:30 [INF] Total Investment Amount: 58957.39
2025-05-14 16:03:15.122 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:03:15.124 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 6.
2025-05-14 16:03:15.131 +05:30 [INF] Calculated investment amount: 813.2.
2025-05-14 16:03:15.133 +05:30 [INF] Total Investment Amount: 59770.59
2025-05-14 16:03:15.134 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 6.
2025-05-14 16:03:15.136 +05:30 [INF] Calculated investment amount: 851.81.
2025-05-14 16:03:15.137 +05:30 [INF] Total Investment Amount: 60622.399999999994
2025-05-14 16:03:15.138 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:03:15.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 6.
2025-05-14 16:03:15.147 +05:30 [INF] Calculated investment amount: 1066.46.
2025-05-14 16:03:15.148 +05:30 [INF] Total Investment Amount: 61688.85999999999
2025-05-14 16:03:15.149 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 6.
2025-05-14 16:03:15.154 +05:30 [INF] Calculated investment amount: 1050.04.
2025-05-14 16:03:15.155 +05:30 [INF] Total Investment Amount: 62738.899999999994
2025-05-14 16:03:15.160 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:03:15.166 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":7.29,"InvestmentAmount":4115.01},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":6.71,"InvestmentAmount":3957.19}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.59,"InvestmentAmount":2757.38},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.91,"InvestmentAmount":2625.09}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":5.4,"InvestmentAmount":2460.17},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.1,"InvestmentAmount":2423.77}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":6.12,"InvestmentAmount":4566.84},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.88,"InvestmentAmount":4438.23}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":7.83,"InvestmentAmount":5276.36},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":8.17,"InvestmentAmount":5413.59}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.89,"InvestmentAmount":4271.7},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.11,"InvestmentAmount":4381.18}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":1408.25},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":1240.66}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":837.44},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":877.41}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":1011.36},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":899.56}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":560.69},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":552.2}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":569.45},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":632.25}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":719.71},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":751.27}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":1085.2},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":1125.43}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":813.2},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":851.81}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":1066.46},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":1050.04}}}}
2025-05-14 16:03:15.178 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:03:15.181 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 376.0396ms
2025-05-14 16:03:15.183 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:03:15.185 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - 200 null application/json; charset=utf-8 457.3804ms
2025-05-14 16:04:56.471 +05:30 [INF] Application is shutting down...
2025-05-14 16:05:58.633 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 16:05:58.854 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 16:05:58.869 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 16:05:58.874 +05:30 [INF] Hosting environment: Development
2025-05-14 16:05:58.876 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 16:06:19.530 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-14 16:06:19.602 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:19.615 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 85.6291ms
2025-05-14 16:06:19.630 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-14 16:06:19.717 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:36:19 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 16:06:19.739 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 9:44:41 AM', Current time (UTC): '5/14/2025 10:36:19 AM'.
2025-05-14 16:06:19.743 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:19.746 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 16:06:19.770 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-14 16:06:19.968 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:19.995 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 214.3533ms
2025-05-14 16:06:19.999 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 16:06:20.001 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 370.7914ms
2025-05-14 16:06:37.762 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:06:37.772 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:37.778 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 16.3586ms
2025-05-14 16:06:37.788 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 16:06:37.806 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:37.810 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:06:37.820 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:06:37.853 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:06:37.881 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:06:37.884 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 16:06:37.890 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 16:06:37.895 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 16:06:37.897 +05:30 [INF] Age adjustments found: {}
2025-05-14 16:06:37.898 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 16:06:37.905 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 16:06:37.928 +05:30 [INF] Sub-allocations for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 16:06:37.931 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:06:37.934 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 16:06:37.936 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 16:06:37.937 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 16:06:37.942 +05:30 [INF] Added sub-assets for equity: {"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}
2025-05-14 16:06:37.944 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:06:37.947 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}
2025-05-14 16:06:37.948 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}
2025-05-14 16:06:37.953 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}
2025-05-14 16:06:37.982 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 16:06:37.998 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:06:38.001 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":9,"Mid Cap":6.75,"Small Cap":6.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":12.5,"subAssets":{"Precious Metals":5,"Energy":3.75,"Agriculture":3.75}},"cash":{"percentage":27.5,"subAssets":{"Liquid Mutual Funds":8.25,"Savings Acc":8.25,"T. Bill":11}},"realEstate":{"percentage":7.5,"subAssets":{"REITs":2.81,"Residential Prop":1.88,"Commercial Prop":2.81}}}
2025-05-14 16:06:38.005 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:06:38.015 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 191.8521ms
2025-05-14 16:06:38.021 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:06:38.024 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 236.5678ms
2025-05-14 16:06:38.034 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - null null
2025-05-14 16:06:38.043 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.046 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 204 null null 12.1068ms
2025-05-14 16:06:38.051 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:06:38.054 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:06:38.056 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 498
2025-05-14 16:06:38.065 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.069 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.079 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.079 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 28.1073ms
2025-05-14 16:06:38.080 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 26.8808ms
2025-05-14 16:06:38.082 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:06:38.089 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:06:38.099 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:06:38.107 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:06:38.111 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.121 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:38.128 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:06:38.130 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:06:38.136 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:06:38.139 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:06:38.146 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:06:38.153 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:06:38.153 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:06:38.156 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:38.158 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:06:38.162 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:06:38.166 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:06:38.166 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 23.1086ms
2025-05-14 16:06:38.169 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:06:38.173 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:06:38.174 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:38.207 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:06:38.213 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 123.666ms
2025-05-14 16:06:38.222 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 71.3282ms
2025-05-14 16:06:38.222 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:06:38.230 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:06:38.238 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 139.3474ms
2025-05-14 16:06:38.240 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.69, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-14 16:06:38.254 +05:30 [INF] Calculated investment amount: 387.6.
2025-05-14 16:06:38.261 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.31, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 16:06:38.265 +05:30 [INF] Calculated investment amount: 361.44.
2025-05-14 16:06:38.267 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:06:38.272 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-14 16:06:38.277 +05:30 [INF] Calculated investment amount: 283.65.
2025-05-14 16:06:38.282 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.16, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-14 16:06:38.286 +05:30 [INF] Calculated investment amount: 256.47.
2025-05-14 16:06:38.287 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:06:38.289 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.47, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-14 16:06:38.296 +05:30 [INF] Calculated investment amount: 267.01.
2025-05-14 16:06:38.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-14 16:06:38.301 +05:30 [INF] Calculated investment amount: 255.97.
2025-05-14 16:06:38.306 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:06:38.310 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 16:06:38.318 +05:30 [INF] Calculated investment amount: 416.33.
2025-05-14 16:06:38.320 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-14 16:06:38.323 +05:30 [INF] Calculated investment amount: 401.53.
2025-05-14 16:06:38.325 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:06:38.330 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-14 16:06:38.333 +05:30 [INF] Calculated investment amount: 514.63.
2025-05-14 16:06:38.335 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-14 16:06:38.340 +05:30 [INF] Calculated investment amount: 534.42.
2025-05-14 16:06:38.343 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:06:38.345 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-14 16:06:38.347 +05:30 [INF] Calculated investment amount: 397.12.
2025-05-14 16:06:38.352 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-14 16:06:38.356 +05:30 [INF] Calculated investment amount: 409.94.
2025-05-14 16:06:38.358 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:06:38.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.77, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-14 16:06:38.365 +05:30 [INF] Calculated investment amount: 238.36.
2025-05-14 16:06:38.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-14 16:06:38.369 +05:30 [INF] Calculated investment amount: 197.35.
2025-05-14 16:06:38.374 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:06:38.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.77, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-14 16:06:38.380 +05:30 [INF] Calculated investment amount: 148.43.
2025-05-14 16:06:38.382 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-14 16:06:38.389 +05:30 [INF] Calculated investment amount: 162.75.
2025-05-14 16:06:38.391 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:06:38.393 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.06, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-14 16:06:38.399 +05:30 [INF] Calculated investment amount: 174.99.
2025-05-14 16:06:38.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-14 16:06:38.404 +05:30 [INF] Calculated investment amount: 147.61.
2025-05-14 16:06:38.405 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:06:38.411 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-14 16:06:38.414 +05:30 [INF] Calculated investment amount: 380.41.
2025-05-14 16:06:38.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.04, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-14 16:06:38.421 +05:30 [INF] Calculated investment amount: 366.44.
2025-05-14 16:06:38.422 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:06:38.424 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.85, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-14 16:06:38.432 +05:30 [INF] Calculated investment amount: 359.4.
2025-05-14 16:06:38.434 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-14 16:06:38.439 +05:30 [INF] Calculated investment amount: 406.8.
2025-05-14 16:06:38.446 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:06:38.450 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-14 16:06:38.456 +05:30 [INF] Calculated investment amount: 483.43.
2025-05-14 16:06:38.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.66, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-14 16:06:38.468 +05:30 [INF] Calculated investment amount: 509.49.
2025-05-14 16:06:38.470 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:06:38.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 2.
2025-05-14 16:06:38.483 +05:30 [INF] Calculated investment amount: 114.68.
2025-05-14 16:06:38.486 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 2.
2025-05-14 16:06:38.492 +05:30 [INF] Calculated investment amount: 120.93.
2025-05-14 16:06:38.495 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:06:38.498 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 2.
2025-05-14 16:06:38.504 +05:30 [INF] Calculated investment amount: 79.05.
2025-05-14 16:06:38.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 2.
2025-05-14 16:06:38.513 +05:30 [INF] Calculated investment amount: 85.12.
2025-05-14 16:06:38.516 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:06:38.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.43, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 2.
2025-05-14 16:06:38.524 +05:30 [INF] Calculated investment amount: 117.75.
2025-05-14 16:06:38.527 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.38, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 2.
2025-05-14 16:06:38.531 +05:30 [INF] Calculated investment amount: 114.47.
2025-05-14 16:06:38.550 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:06:38.554 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":4.69,"InvestmentAmount":387.6},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":4.31,"InvestmentAmount":361.44}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":3.59,"InvestmentAmount":283.65},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":3.16,"InvestmentAmount":256.47}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":3.47,"InvestmentAmount":267.01},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":3.28,"InvestmentAmount":255.97}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":416.33},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":401.53}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":514.63},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":534.42}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":397.12},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":409.94}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.77,"InvestmentAmount":238.36},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":2.23,"InvestmentAmount":197.35}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.77,"InvestmentAmount":148.43},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.98,"InvestmentAmount":162.75}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":2.06,"InvestmentAmount":174.99},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.69,"InvestmentAmount":147.61}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":4.21,"InvestmentAmount":380.41},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":4.04,"InvestmentAmount":366.44}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":3.85,"InvestmentAmount":359.4},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":4.4,"InvestmentAmount":406.8}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":5.34,"InvestmentAmount":483.43},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":5.66,"InvestmentAmount":509.49}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.36,"InvestmentAmount":114.68},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.45,"InvestmentAmount":120.93}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.9,"InvestmentAmount":79.05},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.98,"InvestmentAmount":85.12}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.43,"InvestmentAmount":117.75},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.38,"InvestmentAmount":114.47}}}}
2025-05-14 16:06:38.574 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:38.585 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 462.7037ms
2025-05-14 16:06:38.589 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:06:38.590 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 200 null application/json; charset=utf-8 534.3297ms
2025-05-14 16:06:55.344 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:06:55.346 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:06:55.354 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:55.363 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:55.376 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 31.5444ms
2025-05-14 16:06:55.379 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 33.713ms
2025-05-14 16:06:55.392 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:06:55.403 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:06:55.407 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:55.416 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:06:55.418 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:06:55.420 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:06:55.426 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:06:55.428 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:06:55.434 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:06:55.441 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:06:55.443 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:06:55.445 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:06:55.450 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:55.451 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:06:55.454 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 22.7374ms
2025-05-14 16:06:55.462 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 22.5372ms
2025-05-14 16:06:55.464 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:06:55.467 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:06:55.472 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 80.3455ms
2025-05-14 16:06:55.474 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 71.4329ms
2025-05-14 16:08:18.712 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:08:18.720 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.725 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.05ms
2025-05-14 16:08:18.730 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-14 16:08:18.738 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.740 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:08:18.742 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:08:18.747 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:08:18.751 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:08:18.753 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 16:08:18.759 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 16:08:18.762 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:08:18.763 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:08:18.764 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 16:08:18.764 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 16:08:18.772 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 16:08:18.775 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 16:08:18.777 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 16:08:18.779 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 16:08:18.782 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 16:08:18.785 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 16:08:18.788 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 16:08:18.795 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 16:08:18.796 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 16:08:18.797 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 16:08:18.798 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 16:08:18.804 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:08:18.807 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 16:08:18.809 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:08:18.811 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 63.9979ms
2025-05-14 16:08:18.812 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:08:18.813 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 83.6256ms
2025-05-14 16:08:18.826 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 16:08:18.829 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.834 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:08:18.835 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 9.3476ms
2025-05-14 16:08:18.840 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.840 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:08:18.849 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 499
2025-05-14 16:08:18.851 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.1018ms
2025-05-14 16:08:18.859 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.867 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.874 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:08:18.875 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 34.8992ms
2025-05-14 16:08:18.876 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:08:18.884 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.889 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:08:18.890 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:08:18.896 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:08:18.902 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:18.910 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:08:18.911 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:08:18.912 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:08:18.913 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:08:18.929 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:08:18.929 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:08:18.934 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:08:18.935 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:08:18.938 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:08:18.962 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:08:18.964 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:08:18.966 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:08:18.966 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:08:18.968 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 40.8113ms
2025-05-14 16:08:18.973 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:08:18.976 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 16:08:18.977 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:08:18.978 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 40.2461ms
2025-05-14 16:08:18.980 +05:30 [INF] Calculated investment amount: 625.85.
2025-05-14 16:08:18.985 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 111.372ms
2025-05-14 16:08:18.988 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:08:18.989 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:08:18.997 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 108.4265ms
2025-05-14 16:08:19.001 +05:30 [INF] Calculated investment amount: 589.02.
2025-05-14 16:08:19.010 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:08:19.011 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 16:08:19.012 +05:30 [INF] Calculated investment amount: 448.09.
2025-05-14 16:08:19.013 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 16:08:19.021 +05:30 [INF] Calculated investment amount: 410.93.
2025-05-14 16:08:19.023 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:08:19.025 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 16:08:19.031 +05:30 [INF] Calculated investment amount: 417.13.
2025-05-14 16:08:19.034 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 16:08:19.042 +05:30 [INF] Calculated investment amount: 401.22.
2025-05-14 16:08:19.044 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:08:19.046 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:08:19.048 +05:30 [INF] Calculated investment amount: 429.33.
2025-05-14 16:08:19.049 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.78, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 16:08:19.057 +05:30 [INF] Calculated investment amount: 415.28.
2025-05-14 16:08:19.058 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:08:19.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.36, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 16:08:19.061 +05:30 [INF] Calculated investment amount: 522.09.
2025-05-14 16:08:19.065 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.64, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 16:08:19.068 +05:30 [INF] Calculated investment amount: 540.5.
2025-05-14 16:08:19.071 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:08:19.073 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 16:08:19.080 +05:30 [INF] Calculated investment amount: 407.92.
2025-05-14 16:08:19.082 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.96, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 16:08:19.089 +05:30 [INF] Calculated investment amount: 420.01.
2025-05-14 16:08:19.090 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:08:19.091 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 16:08:19.093 +05:30 [INF] Calculated investment amount: 132.51.
2025-05-14 16:08:19.095 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.34, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 16:08:19.101 +05:30 [INF] Calculated investment amount: 111.56.
2025-05-14 16:08:19.104 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:08:19.105 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:08:19.110 +05:30 [INF] Calculated investment amount: 81.4.
2025-05-14 16:08:19.111 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 16:08:19.113 +05:30 [INF] Calculated investment amount: 88.68.
2025-05-14 16:08:19.114 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:08:19.115 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 16:08:19.121 +05:30 [INF] Calculated investment amount: 96.3.
2025-05-14 16:08:19.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 16:08:19.125 +05:30 [INF] Calculated investment amount: 83.26.
2025-05-14 16:08:19.126 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:08:19.128 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.68, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 16:08:19.132 +05:30 [INF] Calculated investment amount: 230.19.
2025-05-14 16:08:19.133 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:08:19.137 +05:30 [INF] Calculated investment amount: 222.01.
2025-05-14 16:08:19.139 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:08:19.140 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 16:08:19.146 +05:30 [INF] Calculated investment amount: 220.98.
2025-05-14 16:08:19.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 16:08:19.149 +05:30 [INF] Calculated investment amount: 248.92.
2025-05-14 16:08:19.151 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:08:19.157 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 16:08:19.158 +05:30 [INF] Calculated investment amount: 292.87.
2025-05-14 16:08:19.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.6, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 16:08:19.161 +05:30 [INF] Calculated investment amount: 307.45.
2025-05-14 16:08:19.162 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:08:19.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 16:08:19.169 +05:30 [INF] Calculated investment amount: 34.84.
2025-05-14 16:08:19.171 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 16:08:19.174 +05:30 [INF] Calculated investment amount: 37.32.
2025-05-14 16:08:19.179 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:08:19.180 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.3, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 16:08:19.182 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-14 16:08:19.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.32, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 16:08:19.190 +05:30 [INF] Calculated investment amount: 25.9.
2025-05-14 16:08:19.191 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:08:19.192 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.48, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 16:08:19.194 +05:30 [INF] Calculated investment amount: 35.87.
2025-05-14 16:08:19.195 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.46, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 16:08:19.200 +05:30 [INF] Calculated investment amount: 34.75.
2025-05-14 16:08:19.206 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:08:19.208 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":8.33,"InvestmentAmount":625.85},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":7.67,"InvestmentAmount":589.02}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":6.38,"InvestmentAmount":448.09},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":5.62,"InvestmentAmount":410.93}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":6.18,"InvestmentAmount":417.13},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.82,"InvestmentAmount":401.22}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.97,"InvestmentAmount":429.33},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.78,"InvestmentAmount":415.28}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":6.36,"InvestmentAmount":522.09},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.64,"InvestmentAmount":540.5}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.79,"InvestmentAmount":407.92},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.96,"InvestmentAmount":420.01}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":1.66,"InvestmentAmount":132.51},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.34,"InvestmentAmount":111.56}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.06,"InvestmentAmount":81.4},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":88.68}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.23,"InvestmentAmount":96.3},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.02,"InvestmentAmount":83.26}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":2.68,"InvestmentAmount":230.19},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":2.57,"InvestmentAmount":222.01}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.45,"InvestmentAmount":220.98},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":248.92}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":3.4,"InvestmentAmount":292.87},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":3.6,"InvestmentAmount":307.45}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.45,"InvestmentAmount":34.84},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.49,"InvestmentAmount":37.32}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.3,"InvestmentAmount":24.7},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.32,"InvestmentAmount":25.9}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.48,"InvestmentAmount":35.87},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.46,"InvestmentAmount":34.75}}}}
2025-05-14 16:08:19.218 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:08:19.226 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 318.3401ms
2025-05-14 16:08:19.228 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:08:19.230 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 380.795ms
2025-05-14 16:08:32.948 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:08:32.949 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:08:32.957 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:32.965 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:32.966 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 18.0813ms
2025-05-14 16:08:32.968 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 18.4757ms
2025-05-14 16:08:32.982 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:08:32.991 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:08:32.998 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:33.002 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:08:33.003 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:08:33.004 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:08:33.005 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:08:33.034 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:08:33.037 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:08:33.040 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:08:33.042 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:08:33.048 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:08:33.049 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:08:33.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:08:33.051 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.2841ms
2025-05-14 16:08:33.054 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 13.3676ms
2025-05-14 16:08:33.062 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:08:33.065 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:08:33.065 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 83.7898ms
2025-05-14 16:08:33.067 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 76.1573ms
2025-05-14 16:15:48.360 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:15:48.360 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:15:48.370 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:15:48.378 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:15:48.379 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 19.4206ms
2025-05-14 16:15:48.381 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 20.8269ms
2025-05-14 16:15:48.406 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:15:48.415 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:15:48.421 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:15:48.429 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:15:48.430 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:15:48.432 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:15:48.433 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:15:48.454 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:15:48.458 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:15:48.464 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:15:48.467 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:15:48.469 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:15:48.470 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:15:48.472 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:15:48.477 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 19.4441ms
2025-05-14 16:15:48.480 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.2894ms
2025-05-14 16:15:48.481 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:15:48.490 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:15:48.492 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 86.3899ms
2025-05-14 16:15:48.494 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 78.5814ms
2025-05-14 16:16:05.588 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:16:05.594 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:05.596 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.1351ms
2025-05-14 16:16:05.602 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-14 16:16:05.605 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:05.607 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:05.608 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:05.614 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:16:05.616 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:16:05.617 +05:30 [INF] Looking up base allocation for key: Low+Mod
2025-05-14 16:16:05.617 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":50,"commodities":10,"cash":15,"realEstate":5}
2025-05-14 16:16:05.618 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:16:05.619 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:16:05.623 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 16:16:05.624 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 16:16:05.627 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 16:16:05.629 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}
2025-05-14 16:16:05.630 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}
2025-05-14 16:16:05.634 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}
2025-05-14 16:16:05.637 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}
2025-05-14 16:16:05.638 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-14 16:16:05.639 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}
2025-05-14 16:16:05.641 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}
2025-05-14 16:16:05.642 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}
2025-05-14 16:16:05.646 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}
2025-05-14 16:16:05.648 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":42.5,"subAssets":{"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}}}
2025-05-14 16:16:05.651 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:16:05.653 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":42.5,"subAssets":{"Gov Bonds":21.25,"Corp Bonds":8.5,"Fixed Dep":12.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":4.69,"Energy":1.88,"Agriculture":0.94}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":1.73,"Savings Acc":2.88,"T. Bill":2.88}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":1,"Residential Prop":1,"Commercial Prop":0.5}}}
2025-05-14 16:16:05.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:16:05.660 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.1384ms
2025-05-14 16:16:05.662 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:05.663 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 61.2227ms
2025-05-14 16:16:05.672 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - null null
2025-05-14 16:16:05.676 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:05.680 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - 204 null null 8.0676ms
2025-05-14 16:16:05.685 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - application/json 499
2025-05-14 16:16:05.692 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:05.695 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:05.697 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:05.704 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:16:05.705 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:16:05.707 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:16:05.744 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:16:05.747 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:16:05.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-14 16:16:05.755 +05:30 [INF] Calculated investment amount: 889.28.
2025-05-14 16:16:05.758 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 16:16:05.762 +05:30 [INF] Calculated investment amount: 842.49.
2025-05-14 16:16:05.766 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:16:05.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-14 16:16:05.770 +05:30 [INF] Calculated investment amount: 332.12.
2025-05-14 16:16:05.771 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-14 16:16:05.774 +05:30 [INF] Calculated investment amount: 308.29.
2025-05-14 16:16:05.781 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:16:05.784 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-14 16:16:05.786 +05:30 [INF] Calculated investment amount: 152.16.
2025-05-14 16:16:05.790 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-14 16:16:05.792 +05:30 [INF] Calculated investment amount: 147.99.
2025-05-14 16:16:05.794 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:16:05.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.84, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 16:16:05.801 +05:30 [INF] Calculated investment amount: 891.81.
2025-05-14 16:16:05.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-14 16:16:05.805 +05:30 [INF] Calculated investment amount: 862.99.
2025-05-14 16:16:05.806 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:16:05.813 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-14 16:16:05.815 +05:30 [INF] Calculated investment amount: 319.75.
2025-05-14 16:16:05.818 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-14 16:16:05.823 +05:30 [INF] Calculated investment amount: 329.86.
2025-05-14 16:16:05.825 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:16:05.827 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.26, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-14 16:16:05.830 +05:30 [INF] Calculated investment amount: 505.32.
2025-05-14 16:16:05.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.49, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-14 16:16:05.837 +05:30 [INF] Calculated investment amount: 519.93.
2025-05-14 16:16:05.838 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:16:05.839 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.59, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-14 16:16:05.841 +05:30 [INF] Calculated investment amount: 191.79.
2025-05-14 16:16:05.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.1, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-14 16:16:05.850 +05:30 [INF] Calculated investment amount: 164.47.
2025-05-14 16:16:05.852 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:16:05.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.89, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 16:16:05.860 +05:30 [INF] Calculated investment amount: 62.59.
2025-05-14 16:16:05.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-14 16:16:05.864 +05:30 [INF] Calculated investment amount: 66.89.
2025-05-14 16:16:05.866 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:16:05.873 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.52, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-14 16:16:05.875 +05:30 [INF] Calculated investment amount: 37.52.
2025-05-14 16:16:05.877 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-14 16:16:05.883 +05:30 [INF] Calculated investment amount: 32.04.
2025-05-14 16:16:05.884 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:16:05.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-14 16:16:05.893 +05:30 [INF] Calculated investment amount: 71.85.
2025-05-14 16:16:05.895 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 16:16:05.899 +05:30 [INF] Calculated investment amount: 69.93.
2025-05-14 16:16:05.903 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:16:05.905 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.34, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-14 16:16:05.908 +05:30 [INF] Calculated investment amount: 116.77.
2025-05-14 16:16:05.909 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.54, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-14 16:16:05.915 +05:30 [INF] Calculated investment amount: 131.64.
2025-05-14 16:16:05.917 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:16:05.920 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.4, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-14 16:16:05.926 +05:30 [INF] Calculated investment amount: 114.74.
2025-05-14 16:16:05.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.48, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-14 16:16:05.932 +05:30 [INF] Calculated investment amount: 119.92.
2025-05-14 16:16:05.933 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:16:05.938 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.48, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 4.
2025-05-14 16:16:05.941 +05:30 [INF] Calculated investment amount: 34.13.
2025-05-14 16:16:05.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.52, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 4.
2025-05-14 16:16:05.949 +05:30 [INF] Calculated investment amount: 36.17.
2025-05-14 16:16:05.950 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:16:05.953 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.48, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 4.
2025-05-14 16:16:05.955 +05:30 [INF] Calculated investment amount: 37.03.
2025-05-14 16:16:05.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.52, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 4.
2025-05-14 16:16:05.962 +05:30 [INF] Calculated investment amount: 39.23.
2025-05-14 16:16:05.963 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:16:05.965 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.26, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 4.
2025-05-14 16:16:05.967 +05:30 [INF] Calculated investment amount: 17.63.
2025-05-14 16:16:05.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.25, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 4.
2025-05-14 16:16:05.974 +05:30 [INF] Calculated investment amount: 17.2.
2025-05-14 16:16:05.979 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:16:05.984 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":13.02,"InvestmentAmount":889.28},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":11.98,"InvestmentAmount":842.49}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.32,"InvestmentAmount":332.12},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.68,"InvestmentAmount":308.29}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":2.57,"InvestmentAmount":152.16},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":2.43,"InvestmentAmount":147.99}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":10.84,"InvestmentAmount":891.81},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":10.41,"InvestmentAmount":862.99}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":4.16,"InvestmentAmount":319.75},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":4.34,"InvestmentAmount":329.86}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":6.26,"InvestmentAmount":505.32},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.49,"InvestmentAmount":519.93}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.59,"InvestmentAmount":191.79},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":2.1,"InvestmentAmount":164.47}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":0.89,"InvestmentAmount":62.59},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":0.99,"InvestmentAmount":66.89}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.52,"InvestmentAmount":37.52},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.42,"InvestmentAmount":32.04}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.88,"InvestmentAmount":71.85},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.85,"InvestmentAmount":69.93}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":1.34,"InvestmentAmount":116.77},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":1.54,"InvestmentAmount":131.64}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":1.4,"InvestmentAmount":114.74},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.48,"InvestmentAmount":119.92}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.48,"InvestmentAmount":34.13},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.52,"InvestmentAmount":36.17}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.48,"InvestmentAmount":37.03},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.52,"InvestmentAmount":39.23}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.26,"InvestmentAmount":17.63},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.25,"InvestmentAmount":17.2}}}}
2025-05-14 16:16:05.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:06.000 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 297.3277ms
2025-05-14 16:16:06.002 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:06.004 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - 200 null application/json; charset=utf-8 318.5175ms
2025-05-14 16:16:06.031 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:16:06.033 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:16:06.037 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:06.045 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:06.047 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.0566ms
2025-05-14 16:16:06.048 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 14.9051ms
2025-05-14 16:16:06.058 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:16:06.068 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:16:06.072 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:06.078 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:06.080 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:16:06.081 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:16:06.083 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:06.088 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:06.092 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:16:06.098 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:16:06.100 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:16:06.102 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:16:06.102 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:06.104 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:06.105 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.4395ms
2025-05-14 16:16:06.113 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.2996ms
2025-05-14 16:16:06.114 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:16:06.116 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:16:06.121 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 62.8285ms
2025-05-14 16:16:06.123 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 54.9768ms
2025-05-14 16:16:24.911 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:16:24.917 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:24.918 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.4213ms
2025-05-14 16:16:24.926 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 16:16:24.929 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:24.930 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:24.932 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:24.938 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:16:24.940 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:16:24.942 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 16:16:24.943 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:16:24.944 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 16:16:24.948 +05:30 [INF] Age adjustments found: {}
2025-05-14 16:16:24.949 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-14 16:16:24.950 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-14 16:16:24.953 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:24.955 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:24.960 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:24.962 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:24.964 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:24.966 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:24.972 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:24.974 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:24.975 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:24.976 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:24.981 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:24.985 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:16:24.988 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:24.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:16:25.002 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 64.1804ms
2025-05-14 16:16:25.007 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:25.010 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 83.3008ms
2025-05-14 16:16:25.014 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - null null
2025-05-14 16:16:25.022 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:25.023 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - 204 null null 8.6219ms
2025-05-14 16:16:25.031 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - application/json 514
2025-05-14 16:16:25.036 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:25.037 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:25.043 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:25.047 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:16:25.048 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:16:25.050 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:16:25.086 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:16:25.088 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:16:25.095 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-14 16:16:25.097 +05:30 [INF] Calculated investment amount: 7512.63.
2025-05-14 16:16:25.099 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:25.101 +05:30 [INF] Calculated investment amount: 7280.
2025-05-14 16:16:25.105 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:16:25.107 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-14 16:16:25.109 +05:30 [INF] Calculated investment amount: 2622.01.
2025-05-14 16:16:25.110 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-14 16:16:25.112 +05:30 [INF] Calculated investment amount: 2533.52.
2025-05-14 16:16:25.116 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:16:25.119 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-14 16:16:25.122 +05:30 [INF] Calculated investment amount: 1158.95.
2025-05-14 16:16:25.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-14 16:16:25.128 +05:30 [INF] Calculated investment amount: 1141.94.
2025-05-14 16:16:25.130 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:16:25.132 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:25.134 +05:30 [INF] Calculated investment amount: 13602.44.
2025-05-14 16:16:25.136 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-14 16:16:25.140 +05:30 [INF] Calculated investment amount: 13223.42.
2025-05-14 16:16:25.142 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:16:25.143 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-14 16:16:25.145 +05:30 [INF] Calculated investment amount: 4631.24.
2025-05-14 16:16:25.146 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-14 16:16:25.152 +05:30 [INF] Calculated investment amount: 4739.17.
2025-05-14 16:16:25.154 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:16:25.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-14 16:16:25.158 +05:30 [INF] Calculated investment amount: 7589.3.
2025-05-14 16:16:25.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-14 16:16:25.166 +05:30 [INF] Calculated investment amount: 7774.27.
2025-05-14 16:16:25.167 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:16:25.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-14 16:16:25.174 +05:30 [INF] Calculated investment amount: 1016.71.
2025-05-14 16:16:25.176 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-14 16:16:25.178 +05:30 [INF] Calculated investment amount: 912.84.
2025-05-14 16:16:25.180 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:16:25.185 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:25.188 +05:30 [INF] Calculated investment amount: 313.23.
2025-05-14 16:16:25.189 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-14 16:16:25.191 +05:30 [INF] Calculated investment amount: 332.29.
2025-05-14 16:16:25.197 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:16:25.198 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-14 16:16:25.200 +05:30 [INF] Calculated investment amount: 192.07.
2025-05-14 16:16:25.201 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-14 16:16:25.206 +05:30 [INF] Calculated investment amount: 174.37.
2025-05-14 16:16:25.208 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:16:25.209 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 200000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-14 16:16:25.212 +05:30 [INF] Calculated investment amount: 6606.03.
2025-05-14 16:16:25.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:25.218 +05:30 [INF] Calculated investment amount: 6424.56.
2025-05-14 16:16:25.219 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:16:25.221 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 200000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-14 16:16:25.224 +05:30 [INF] Calculated investment amount: 11286.83.
2025-05-14 16:16:25.228 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 200000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-14 16:16:25.231 +05:30 [INF] Calculated investment amount: 12462.65.
2025-05-14 16:16:25.232 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:16:25.233 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 200000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-14 16:16:25.236 +05:30 [INF] Calculated investment amount: 10547.06.
2025-05-14 16:16:25.241 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 200000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-14 16:16:25.243 +05:30 [INF] Calculated investment amount: 10947.68.
2025-05-14 16:16:25.244 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:16:25.246 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
2025-05-14 16:16:25.262 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
2025-05-14 16:16:25.266 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 288
2025-05-14 16:16:25.276 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:16:25.279 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 233.6336ms
2025-05-14 16:16:25.282 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:25.287 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - 500 null text/plain; charset=utf-8 255.7482ms
2025-05-14 16:16:26.753 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 16:16:26.758 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:26.760 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:26.762 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:26.768 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:16:26.771 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:16:26.772 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 16:16:26.776 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:16:26.779 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 16:16:26.780 +05:30 [INF] Age adjustments found: {}
2025-05-14 16:16:26.781 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-14 16:16:26.782 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-14 16:16:26.784 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:26.791 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:26.792 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:26.793 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:26.795 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:26.797 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:26.801 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:26.804 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:26.807 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:26.811 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:26.813 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:26.815 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:16:26.817 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:26.822 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:16:26.825 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.0002ms
2025-05-14 16:16:26.827 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:26.828 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.7142ms
2025-05-14 16:16:26.836 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - application/json 514
2025-05-14 16:16:26.840 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:26.842 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:26.847 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:26.851 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:16:26.852 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:16:26.861 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:16:26.893 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:16:26.899 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:16:26.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-14 16:16:26.905 +05:30 [INF] Calculated investment amount: 7512.63.
2025-05-14 16:16:26.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:26.912 +05:30 [INF] Calculated investment amount: 7280.
2025-05-14 16:16:26.916 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:16:26.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-14 16:16:26.924 +05:30 [INF] Calculated investment amount: 2622.01.
2025-05-14 16:16:26.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-14 16:16:26.928 +05:30 [INF] Calculated investment amount: 2533.52.
2025-05-14 16:16:26.929 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:16:26.930 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-14 16:16:26.936 +05:30 [INF] Calculated investment amount: 1158.95.
2025-05-14 16:16:26.938 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-14 16:16:26.941 +05:30 [INF] Calculated investment amount: 1141.94.
2025-05-14 16:16:26.945 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:16:26.946 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:26.948 +05:30 [INF] Calculated investment amount: 13602.44.
2025-05-14 16:16:26.949 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-14 16:16:26.952 +05:30 [INF] Calculated investment amount: 13223.42.
2025-05-14 16:16:26.957 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:16:26.958 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-14 16:16:26.960 +05:30 [INF] Calculated investment amount: 4631.24.
2025-05-14 16:16:26.963 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-14 16:16:26.969 +05:30 [INF] Calculated investment amount: 4739.17.
2025-05-14 16:16:26.971 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:16:26.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-14 16:16:26.980 +05:30 [INF] Calculated investment amount: 7589.3.
2025-05-14 16:16:26.981 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-14 16:16:26.983 +05:30 [INF] Calculated investment amount: 7774.27.
2025-05-14 16:16:26.985 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:16:26.990 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-14 16:16:26.992 +05:30 [INF] Calculated investment amount: 1016.71.
2025-05-14 16:16:26.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-14 16:16:26.995 +05:30 [INF] Calculated investment amount: 912.84.
2025-05-14 16:16:27.000 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:16:27.003 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:27.006 +05:30 [INF] Calculated investment amount: 313.23.
2025-05-14 16:16:27.008 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-14 16:16:27.012 +05:30 [INF] Calculated investment amount: 332.29.
2025-05-14 16:16:27.013 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:16:27.015 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-14 16:16:27.017 +05:30 [INF] Calculated investment amount: 192.07.
2025-05-14 16:16:27.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-14 16:16:27.025 +05:30 [INF] Calculated investment amount: 174.37.
2025-05-14 16:16:27.026 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:16:27.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 200000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-14 16:16:27.030 +05:30 [INF] Calculated investment amount: 6606.03.
2025-05-14 16:16:27.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:27.037 +05:30 [INF] Calculated investment amount: 6424.56.
2025-05-14 16:16:27.039 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:16:27.042 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 200000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-14 16:16:27.047 +05:30 [INF] Calculated investment amount: 11286.83.
2025-05-14 16:16:27.048 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 200000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-14 16:16:27.050 +05:30 [INF] Calculated investment amount: 12462.65.
2025-05-14 16:16:27.051 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:16:27.053 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 200000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-14 16:16:27.060 +05:30 [INF] Calculated investment amount: 10547.06.
2025-05-14 16:16:27.062 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 200000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-14 16:16:27.063 +05:30 [INF] Calculated investment amount: 10947.68.
2025-05-14 16:16:27.065 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:16:27.074 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
2025-05-14 16:16:27.076 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
2025-05-14 16:16:27.079 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 288
2025-05-14 16:16:27.087 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:16:27.090 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 240.6554ms
2025-05-14 16:16:27.092 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:27.094 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - 500 null text/plain; charset=utf-8 257.2605ms
2025-05-14 16:16:38.482 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:16:38.488 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:38.490 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.5766ms
2025-05-14 16:16:38.501 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 16:16:38.505 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:38.511 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:38.513 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:38.517 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:16:38.520 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:16:38.526 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 16:16:38.527 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:16:38.529 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 16:16:38.535 +05:30 [INF] Age adjustments found: {}
2025-05-14 16:16:38.537 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-14 16:16:38.538 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-14 16:16:38.543 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:38.549 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:38.551 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:38.553 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:38.562 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:38.568 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-14 16:16:38.573 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-14 16:16:38.576 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-14 16:16:38.578 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-14 16:16:38.584 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-14 16:16:38.587 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:38.592 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:16:38.599 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-14 16:16:38.601 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:16:38.603 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 86.5229ms
2025-05-14 16:16:38.605 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:38.612 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 110.7841ms
2025-05-14 16:16:38.620 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - null null
2025-05-14 16:16:38.627 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:38.628 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - 204 null null 7.586ms
2025-05-14 16:16:38.637 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - application/json 514
2025-05-14 16:16:38.647 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:38.648 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:38.650 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:38.653 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:16:38.654 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:16:38.664 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:16:38.712 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:16:38.713 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:16:38.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-14 16:16:38.718 +05:30 [INF] Calculated investment amount: 7512.63.
2025-05-14 16:16:38.728 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:38.731 +05:30 [INF] Calculated investment amount: 7280.
2025-05-14 16:16:38.732 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:16:38.735 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-14 16:16:38.743 +05:30 [INF] Calculated investment amount: 2622.01.
2025-05-14 16:16:38.745 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-14 16:16:38.753 +05:30 [INF] Calculated investment amount: 2533.52.
2025-05-14 16:16:38.755 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:16:38.765 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-14 16:16:38.768 +05:30 [INF] Calculated investment amount: 1158.95.
2025-05-14 16:16:38.769 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-14 16:16:38.772 +05:30 [INF] Calculated investment amount: 1141.94.
2025-05-14 16:16:38.779 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:16:38.781 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:38.785 +05:30 [INF] Calculated investment amount: 13602.44.
2025-05-14 16:16:38.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-14 16:16:38.795 +05:30 [INF] Calculated investment amount: 13223.42.
2025-05-14 16:16:38.796 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:16:38.798 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-14 16:16:38.804 +05:30 [INF] Calculated investment amount: 4631.24.
2025-05-14 16:16:38.805 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-14 16:16:38.808 +05:30 [INF] Calculated investment amount: 4739.17.
2025-05-14 16:16:38.810 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:16:38.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-14 16:16:38.817 +05:30 [INF] Calculated investment amount: 7589.3.
2025-05-14 16:16:38.819 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-14 16:16:38.821 +05:30 [INF] Calculated investment amount: 7774.27.
2025-05-14 16:16:38.827 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:16:38.829 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-14 16:16:38.832 +05:30 [INF] Calculated investment amount: 1016.71.
2025-05-14 16:16:38.833 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-14 16:16:38.842 +05:30 [INF] Calculated investment amount: 912.84.
2025-05-14 16:16:38.844 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:16:38.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:16:38.852 +05:30 [INF] Calculated investment amount: 313.23.
2025-05-14 16:16:38.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-14 16:16:38.856 +05:30 [INF] Calculated investment amount: 332.29.
2025-05-14 16:16:38.862 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:16:38.864 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-14 16:16:38.867 +05:30 [INF] Calculated investment amount: 192.07.
2025-05-14 16:16:38.868 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-14 16:16:38.874 +05:30 [INF] Calculated investment amount: 174.37.
2025-05-14 16:16:38.876 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:16:38.878 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 200000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-14 16:16:38.880 +05:30 [INF] Calculated investment amount: 6606.03.
2025-05-14 16:16:38.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:16:38.888 +05:30 [INF] Calculated investment amount: 6424.56.
2025-05-14 16:16:38.890 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:16:38.893 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 200000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-14 16:16:38.899 +05:30 [INF] Calculated investment amount: 11286.83.
2025-05-14 16:16:38.900 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 200000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-14 16:16:38.903 +05:30 [INF] Calculated investment amount: 12462.65.
2025-05-14 16:16:38.904 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:16:38.911 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 200000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-14 16:16:38.914 +05:30 [INF] Calculated investment amount: 10547.06.
2025-05-14 16:16:38.915 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 200000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-14 16:16:38.918 +05:30 [INF] Calculated investment amount: 10947.68.
2025-05-14 16:16:38.924 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:16:38.926 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
2025-05-14 16:16:38.929 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
2025-05-14 16:16:38.936 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 288
2025-05-14 16:16:38.941 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:16:38.950 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 297.4923ms
2025-05-14 16:16:38.952 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:38.953 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=7 - 500 null text/plain; charset=utf-8 315.6989ms
2025-05-14 16:16:55.307 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:16:55.315 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.317 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 9.8653ms
2025-05-14 16:16:55.323 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-14 16:16:55.326 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.327 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:55.332 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:55.336 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:16:55.338 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:16:55.344 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 16:16:55.346 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:16:55.347 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:16:55.349 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:16:55.351 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 16:16:55.357 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 16:16:55.360 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 16:16:55.361 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:16:55.363 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:16:55.368 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:16:55.369 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 16:16:55.371 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 16:16:55.373 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:16:55.374 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:16:55.378 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:16:55.379 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 16:16:55.381 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 16:16:55.384 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:16:55.390 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 16:16:55.392 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:16:55.394 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.5909ms
2025-05-14 16:16:55.396 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:16:55.403 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 79.5641ms
2025-05-14 16:16:55.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - null null
2025-05-14 16:16:55.420 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.421 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - 204 null null 8.8699ms
2025-05-14 16:16:55.433 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - application/json 477
2025-05-14 16:16:55.441 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.442 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:55.444 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:55.453 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:16:55.455 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:16:55.462 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:16:55.496 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:16:55.504 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:16:55.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-14 16:16:55.509 +05:30 [INF] Calculated investment amount: 711.7.
2025-05-14 16:16:55.510 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 16:16:55.516 +05:30 [INF] Calculated investment amount: 673.71.
2025-05-14 16:16:55.518 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:16:55.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-14 16:16:55.522 +05:30 [INF] Calculated investment amount: 498.19.
2025-05-14 16:16:55.526 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-14 16:16:55.529 +05:30 [INF] Calculated investment amount: 462.43.
2025-05-14 16:16:55.531 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:16:55.534 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-14 16:16:55.539 +05:30 [INF] Calculated investment amount: 457.09.
2025-05-14 16:16:55.540 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-14 16:16:55.543 +05:30 [INF] Calculated investment amount: 443.35.
2025-05-14 16:16:55.544 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:16:55.550 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 16:16:55.553 +05:30 [INF] Calculated investment amount: 377.62.
2025-05-14 16:16:55.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-14 16:16:55.557 +05:30 [INF] Calculated investment amount: 365.59.
2025-05-14 16:16:55.563 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:16:55.566 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-14 16:16:55.569 +05:30 [INF] Calculated investment amount: 451.18.
2025-05-14 16:16:55.573 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-14 16:16:55.575 +05:30 [INF] Calculated investment amount: 465.91.
2025-05-14 16:16:55.576 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:16:55.578 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-14 16:16:55.585 +05:30 [INF] Calculated investment amount: 356.79.
2025-05-14 16:16:55.586 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-14 16:16:55.588 +05:30 [INF] Calculated investment amount: 366.92.
2025-05-14 16:16:55.589 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:16:55.590 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-14 16:16:55.596 +05:30 [INF] Calculated investment amount: 163.65.
2025-05-14 16:16:55.598 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-14 16:16:55.601 +05:30 [INF] Calculated investment amount: 140.19.
2025-05-14 16:16:55.605 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:16:55.608 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 16:16:55.610 +05:30 [INF] Calculated investment amount: 99.86.
2025-05-14 16:16:55.611 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-14 16:16:55.620 +05:30 [INF] Calculated investment amount: 106.75.
2025-05-14 16:16:55.622 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:16:55.624 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-14 16:16:55.626 +05:30 [INF] Calculated investment amount: 119.06.
2025-05-14 16:16:55.632 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-14 16:16:55.634 +05:30 [INF] Calculated investment amount: 102.99.
2025-05-14 16:16:55.635 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:16:55.637 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-14 16:16:55.639 +05:30 [INF] Calculated investment amount: 62.05.
2025-05-14 16:16:55.644 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 16:16:55.646 +05:30 [INF] Calculated investment amount: 60.88.
2025-05-14 16:16:55.647 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:16:55.649 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-14 16:16:55.654 +05:30 [INF] Calculated investment amount: 61.
2025-05-14 16:16:55.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-14 16:16:55.658 +05:30 [INF] Calculated investment amount: 68.38.
2025-05-14 16:16:55.660 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:16:55.661 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-14 16:16:55.667 +05:30 [INF] Calculated investment amount: 79.5.
2025-05-14 16:16:55.669 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-14 16:16:55.671 +05:30 [INF] Calculated investment amount: 83.46.
2025-05-14 16:16:55.672 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:16:55.673 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 4.
2025-05-14 16:16:55.678 +05:30 [INF] Calculated investment amount: 64.7.
2025-05-14 16:16:55.680 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 4.
2025-05-14 16:16:55.682 +05:30 [INF] Calculated investment amount: 67.47.
2025-05-14 16:16:55.683 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:16:55.688 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 4.
2025-05-14 16:16:55.691 +05:30 [INF] Calculated investment amount: 46.29.
2025-05-14 16:16:55.692 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 4.
2025-05-14 16:16:55.694 +05:30 [INF] Calculated investment amount: 49.04.
2025-05-14 16:16:55.700 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:16:55.702 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 4.
2025-05-14 16:16:55.704 +05:30 [INF] Calculated investment amount: 65.09.
2025-05-14 16:16:55.705 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 4.
2025-05-14 16:16:55.707 +05:30 [INF] Calculated investment amount: 63.3.
2025-05-14 16:16:55.714 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:16:55.716 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":10.42,"InvestmentAmount":711.7},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":9.58,"InvestmentAmount":673.71}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":7.98,"InvestmentAmount":498.19},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":7.02,"InvestmentAmount":462.43}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":7.72,"InvestmentAmount":457.09},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":7.28,"InvestmentAmount":443.35}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":377.62},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":365.59}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":451.18},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":465.91}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":356.79},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":366.92}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":163.65},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":140.19}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":99.86},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":106.75}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":119.06},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":102.99}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":62.05},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":60.88}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":61},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":68.38}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":79.5},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":83.46}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.91,"InvestmentAmount":64.7},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.97,"InvestmentAmount":67.47}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.6,"InvestmentAmount":46.29},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.65,"InvestmentAmount":49.04}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.96,"InvestmentAmount":65.09},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.92,"InvestmentAmount":63.3}}}}
2025-05-14 16:16:55.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:55.730 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 277.9176ms
2025-05-14 16:16:55.737 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:16:55.739 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=4 - 200 null application/json; charset=utf-8 305.9639ms
2025-05-14 16:16:55.784 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:16:55.789 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:16:55.791 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.794 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.799 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 14.7574ms
2025-05-14 16:16:55.800 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.5781ms
2025-05-14 16:16:55.812 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:16:55.817 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:16:55.825 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.833 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:16:55.835 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:16:55.838 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:16:55.841 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:16:55.851 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:16:55.854 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:16:55.861 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:16:55.872 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:16:55.874 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:16:55.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:55.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:16:55.878 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 24.6615ms
2025-05-14 16:16:55.889 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 28.0572ms
2025-05-14 16:16:55.893 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:16:55.904 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:16:55.910 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 92.8439ms
2025-05-14 16:16:55.906 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 93.8544ms
2025-05-14 16:17:15.130 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:17:15.136 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.137 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.7655ms
2025-05-14 16:17:15.148 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-14 16:17:15.152 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.153 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:17:15.158 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:17:15.162 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:17:15.164 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:17:15.169 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-14 16:17:15.170 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:17:15.173 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 16:17:15.175 +05:30 [INF] Age adjustments found: {}
2025-05-14 16:17:15.182 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 16:17:15.184 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 16:17:15.188 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-14 16:17:15.197 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 16:17:15.199 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":9.38,"Energy":3.75,"Agriculture":1.88}
2025-05-14 16:17:15.202 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}
2025-05-14 16:17:15.207 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 16:17:15.209 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-14 16:17:15.211 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-14 16:17:15.213 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":9.38,"Energy":3.75,"Agriculture":1.88}
2025-05-14 16:17:15.217 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}
2025-05-14 16:17:15.219 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 16:17:15.220 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":15,"subAssets":{"Precious Metals":9.38,"Energy":3.75,"Agriculture":1.88}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 16:17:15.225 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:17:15.231 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":15,"subAssets":{"Precious Metals":9.38,"Energy":3.75,"Agriculture":1.88}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 16:17:15.233 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:17:15.235 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 72.923ms
2025-05-14 16:17:15.237 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:17:15.242 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 93.8584ms
2025-05-14 16:17:15.254 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=7 - null null
2025-05-14 16:17:15.260 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.265 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=7 - 204 null null 11.8741ms
2025-05-14 16:17:15.271 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=7 - application/json 490
2025-05-14 16:17:15.281 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.282 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:17:15.284 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:17:15.292 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:17:15.295 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:17:15.297 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:17:15.356 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:17:15.362 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:17:15.365 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.77, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-14 16:17:15.368 +05:30 [INF] Calculated investment amount: 1002.71.
2025-05-14 16:17:15.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.98, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:17:15.378 +05:30 [INF] Calculated investment amount: 969.95.
2025-05-14 16:17:15.380 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:17:15.386 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.99, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-14 16:17:15.390 +05:30 [INF] Calculated investment amount: 349.89.
2025-05-14 16:17:15.393 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.51, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-14 16:17:15.400 +05:30 [INF] Calculated investment amount: 338.12.
2025-05-14 16:17:15.402 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:17:15.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-14 16:17:15.415 +05:30 [INF] Calculated investment amount: 154.26.
2025-05-14 16:17:15.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.82, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-14 16:17:15.418 +05:30 [INF] Calculated investment amount: 152.82.
2025-05-14 16:17:15.420 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:17:15.426 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:17:15.429 +05:30 [INF] Calculated investment amount: 1087.34.
2025-05-14 16:17:15.430 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.35, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-14 16:17:15.432 +05:30 [INF] Calculated investment amount: 1058.74.
2025-05-14 16:17:15.437 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:17:15.440 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-14 16:17:15.443 +05:30 [INF] Calculated investment amount: 371.
2025-05-14 16:17:15.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-14 16:17:15.452 +05:30 [INF] Calculated investment amount: 378.64.
2025-05-14 16:17:15.454 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:17:15.456 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-14 16:17:15.463 +05:30 [INF] Calculated investment amount: 607.69.
2025-05-14 16:17:15.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-14 16:17:15.466 +05:30 [INF] Calculated investment amount: 621.4.
2025-05-14 16:17:15.468 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:17:15.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.19, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-14 16:17:15.476 +05:30 [INF] Calculated investment amount: 613.57.
2025-05-14 16:17:15.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.19, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-14 16:17:15.483 +05:30 [INF] Calculated investment amount: 546.4.
2025-05-14 16:17:15.484 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:17:15.486 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.77, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-14 16:17:15.488 +05:30 [INF] Calculated investment amount: 191.18.
2025-05-14 16:17:15.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-14 16:17:15.498 +05:30 [INF] Calculated investment amount: 199.37.
2025-05-14 16:17:15.499 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:17:15.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-14 16:17:15.506 +05:30 [INF] Calculated investment amount: 116.37.
2025-05-14 16:17:15.508 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-14 16:17:15.510 +05:30 [INF] Calculated investment amount: 105.87.
2025-05-14 16:17:15.512 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:17:15.517 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.76, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-14 16:17:15.520 +05:30 [INF] Calculated investment amount: 246.85.
2025-05-14 16:17:15.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-14 16:17:15.528 +05:30 [INF] Calculated investment amount: 241.63.
2025-05-14 16:17:15.530 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:17:15.532 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.69, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-14 16:17:15.537 +05:30 [INF] Calculated investment amount: 422.86.
2025-05-14 16:17:15.540 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.08, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-14 16:17:15.544 +05:30 [INF] Calculated investment amount: 468.11.
2025-05-14 16:17:15.549 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:17:15.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-14 16:17:15.553 +05:30 [INF] Calculated investment amount: 395.34.
2025-05-14 16:17:15.554 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.97, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-14 16:17:15.561 +05:30 [INF] Calculated investment amount: 411.06.
2025-05-14 16:17:15.563 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:17:15.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 20000, AnnualReturn: 8.9, InvestmentHorizon: 7.
2025-05-14 16:17:15.567 +05:30 [INF] Calculated investment amount: 212.52.
2025-05-14 16:17:15.569 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 20000, AnnualReturn: 9.5, InvestmentHorizon: 7.
2025-05-14 16:17:15.582 +05:30 [INF] Calculated investment amount: 219.33.
2025-05-14 16:17:15.583 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:17:15.585 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 20000, AnnualReturn: 6.7, InvestmentHorizon: 7.
2025-05-14 16:17:15.591 +05:30 [INF] Calculated investment amount: 242.61.
2025-05-14 16:17:15.593 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 20000, AnnualReturn: 7.3, InvestmentHorizon: 7.
2025-05-14 16:17:15.596 +05:30 [INF] Calculated investment amount: 255.26.
2025-05-14 16:17:15.597 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:17:15.602 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 20000, AnnualReturn: 10.2, InvestmentHorizon: 7.
2025-05-14 16:17:15.604 +05:30 [INF] Calculated investment amount: 103.36.
2025-05-14 16:17:15.605 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 20000, AnnualReturn: 9.8, InvestmentHorizon: 7.
2025-05-14 16:17:15.608 +05:30 [INF] Calculated investment amount: 101.87.
2025-05-14 16:17:15.616 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:17:15.618 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":9.77,"InvestmentAmount":1002.71},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":8.98,"InvestmentAmount":969.95}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":3.99,"InvestmentAmount":349.89},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":3.51,"InvestmentAmount":338.12}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":1.93,"InvestmentAmount":154.26},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":1.82,"InvestmentAmount":152.82}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":7.65,"InvestmentAmount":1087.34},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":7.35,"InvestmentAmount":1058.74}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":2.94,"InvestmentAmount":371},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":3.06,"InvestmentAmount":378.64}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":607.69},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":621.4}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":5.19,"InvestmentAmount":613.57},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":4.19,"InvestmentAmount":546.4}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.77,"InvestmentAmount":191.18},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.98,"InvestmentAmount":199.37}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.03,"InvestmentAmount":116.37},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.85,"InvestmentAmount":105.87}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":1.76,"InvestmentAmount":246.85},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":1.7,"InvestmentAmount":241.63}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.69,"InvestmentAmount":422.86},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":3.08,"InvestmentAmount":468.11}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":395.34},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":2.97,"InvestmentAmount":411.06}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.93,"InvestmentAmount":212.52},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.07,"InvestmentAmount":219.33}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.91,"InvestmentAmount":242.61},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.09,"InvestmentAmount":255.26}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.02,"InvestmentAmount":103.36},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.98,"InvestmentAmount":101.87}}}}
2025-05-14 16:17:15.627 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:17:15.629 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 343.028ms
2025-05-14 16:17:15.638 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:17:15.641 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=7 - 200 null application/json; charset=utf-8 370.0873ms
2025-05-14 16:17:15.678 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:17:15.680 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:17:15.685 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.699 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.701 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 22.9086ms
2025-05-14 16:17:15.707 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 26.573ms
2025-05-14 16:17:15.725 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:17:15.712 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:17:15.735 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.750 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:17:15.751 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:17:15.756 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:17:15.759 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:17:15.760 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:17:15.763 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:17:15.770 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:17:15.773 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:17:15.774 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:17:15.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:17:15.784 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 20.7135ms
2025-05-14 16:17:15.780 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:17:15.786 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:17:15.793 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 23.6679ms
2025-05-14 16:17:15.795 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 69.8254ms
2025-05-14 16:17:15.797 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:17:15.805 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 92.3839ms
2025-05-14 16:26:59.965 +05:30 [INF] Application is shutting down...
2025-05-14 16:27:09.698 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 16:27:09.862 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 16:27:09.870 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 16:27:09.873 +05:30 [INF] Hosting environment: Development
2025-05-14 16:27:09.876 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 16:27:13.578 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:27:13.578 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:27:13.664 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:13.664 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:13.676 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 99.4687ms
2025-05-14 16:27:13.676 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 99.4323ms
2025-05-14 16:27:13.689 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:27:13.693 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:27:13.802 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:13.802 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:13.809 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:27:13.809 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:27:13.833 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:27:13.833 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:27:13.841 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:27:13.843 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:27:13.849 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:27:13.850 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:27:13.949 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:27:13.964 +05:30 [WRN] Deserialized product allocations are null. Returning an empty result.
2025-05-14 16:27:13.968 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:27:13.996 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 153.3675ms
2025-05-14 16:27:14.000 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:27:14.004 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 315.4032ms
2025-05-14 16:27:14.004 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 164.0712ms
2025-05-14 16:27:14.015 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:27:14.017 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 323.7935ms
2025-05-14 16:27:30.832 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:27:30.840 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:30.843 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.1364ms
2025-05-14 16:27:30.854 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-14 16:27:30.864 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:30.870 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:27:30.883 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:27:30.981 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:27:30.997 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:27:30.999 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 16:27:31.003 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 16:27:31.005 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:27:31.006 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:27:31.007 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-14 16:27:31.009 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-14 16:27:31.024 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 16:27:31.028 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:27:31.032 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4.67,"Energy":3.5,"Agriculture":3.5}
2025-05-14 16:27:31.037 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6.5,"Savings Acc":6.5,"T. Bill":8.67}
2025-05-14 16:27:31.039 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.5,"Residential Prop":1.67,"Commercial Prop":2.5}
2025-05-14 16:27:31.040 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 16:27:31.042 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:27:31.043 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4.67,"Energy":3.5,"Agriculture":3.5}
2025-05-14 16:27:31.044 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6.5,"Savings Acc":6.5,"T. Bill":8.67}
2025-05-14 16:27:31.049 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.5,"Residential Prop":1.67,"Commercial Prop":2.5}
2025-05-14 16:27:31.068 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":4.67,"Energy":3.5,"Agriculture":3.5}},"cash":{"percentage":21.67,"subAssets":{"Liquid Mutual Funds":6.5,"Savings Acc":6.5,"T. Bill":8.67}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":2.5,"Residential Prop":1.67,"Commercial Prop":2.5}}}
2025-05-14 16:27:31.077 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:27:31.084 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":11.67,"subAssets":{"Precious Metals":4.67,"Energy":3.5,"Agriculture":3.5}},"cash":{"percentage":21.67,"subAssets":{"Liquid Mutual Funds":6.5,"Savings Acc":6.5,"T. Bill":8.67}},"realEstate":{"percentage":6.67,"subAssets":{"REITs":2.5,"Residential Prop":1.67,"Commercial Prop":2.5}}}
2025-05-14 16:27:31.087 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:27:31.091 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 200.1362ms
2025-05-14 16:27:31.095 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:27:31.097 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 243.5844ms
2025-05-14 16:27:31.106 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 16:27:31.115 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.117 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 11.124ms
2025-05-14 16:27:31.129 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 493
2025-05-14 16:27:31.137 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.138 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:27:31.146 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:27:31.190 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:27:31.193 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:27:31.195 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:27:31.229 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:27:31.234 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:27:31.240 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 16:27:31.244 +05:30 [INF] Calculated investment amount: 469.57.
2025-05-14 16:27:31.245 +05:30 [INF] Total Investment Amount: 469.57
2025-05-14 16:27:31.247 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:27:31.249 +05:30 [INF] Calculated investment amount: 441.57.
2025-05-14 16:27:31.250 +05:30 [INF] Total Investment Amount: 911.14
2025-05-14 16:27:31.251 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:27:31.257 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 16:27:31.259 +05:30 [INF] Calculated investment amount: 336.42.
2025-05-14 16:27:31.260 +05:30 [INF] Total Investment Amount: 1247.56
2025-05-14 16:27:31.261 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 16:27:31.263 +05:30 [INF] Calculated investment amount: 307.83.
2025-05-14 16:27:31.267 +05:30 [INF] Total Investment Amount: 1555.3899999999999
2025-05-14 16:27:31.269 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:27:31.270 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 16:27:31.272 +05:30 [INF] Calculated investment amount: 312.51.
2025-05-14 16:27:31.273 +05:30 [INF] Total Investment Amount: 1867.8999999999999
2025-05-14 16:27:31.274 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 16:27:31.278 +05:30 [INF] Calculated investment amount: 301.26.
2025-05-14 16:27:31.279 +05:30 [INF] Total Investment Amount: 2169.16
2025-05-14 16:27:31.282 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:27:31.286 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:27:31.294 +05:30 [INF] Calculated investment amount: 396.5.
2025-05-14 16:27:31.296 +05:30 [INF] Total Investment Amount: 2565.66
2025-05-14 16:27:31.300 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 16:27:31.305 +05:30 [INF] Calculated investment amount: 383.14.
2025-05-14 16:27:31.307 +05:30 [INF] Total Investment Amount: 2948.7999999999997
2025-05-14 16:27:31.308 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:27:31.312 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 16:27:31.315 +05:30 [INF] Calculated investment amount: 481.86.
2025-05-14 16:27:31.321 +05:30 [INF] Total Investment Amount: 3430.66
2025-05-14 16:27:31.325 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 16:27:31.328 +05:30 [INF] Calculated investment amount: 498.99.
2025-05-14 16:27:31.329 +05:30 [INF] Total Investment Amount: 3929.6499999999996
2025-05-14 16:27:31.339 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:27:31.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 16:27:31.343 +05:30 [INF] Calculated investment amount: 376.41.
2025-05-14 16:27:31.344 +05:30 [INF] Total Investment Amount: 4306.0599999999995
2025-05-14 16:27:31.346 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 16:27:31.350 +05:30 [INF] Calculated investment amount: 387.83.
2025-05-14 16:27:31.351 +05:30 [INF] Total Investment Amount: 4693.889999999999
2025-05-14 16:27:31.351 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:27:31.353 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.58, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 16:27:31.355 +05:30 [INF] Calculated investment amount: 205.95.
2025-05-14 16:27:31.356 +05:30 [INF] Total Investment Amount: 4899.839999999999
2025-05-14 16:27:31.361 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 16:27:31.365 +05:30 [INF] Calculated investment amount: 174.
2025-05-14 16:27:31.366 +05:30 [INF] Total Investment Amount: 5073.839999999999
2025-05-14 16:27:31.367 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:27:31.368 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:27:31.372 +05:30 [INF] Calculated investment amount: 126.71.
2025-05-14 16:27:31.373 +05:30 [INF] Total Investment Amount: 5200.549999999999
2025-05-14 16:27:31.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.85, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 16:27:31.376 +05:30 [INF] Calculated investment amount: 137.86.
2025-05-14 16:27:31.377 +05:30 [INF] Total Investment Amount: 5338.409999999999
2025-05-14 16:27:31.378 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:27:31.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.92, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 16:27:31.385 +05:30 [INF] Calculated investment amount: 150.32.
2025-05-14 16:27:31.386 +05:30 [INF] Total Investment Amount: 5488.729999999999
2025-05-14 16:27:31.387 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 16:27:31.389 +05:30 [INF] Calculated investment amount: 128.98.
2025-05-14 16:27:31.390 +05:30 [INF] Total Investment Amount: 5617.709999999998
2025-05-14 16:27:31.390 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:27:31.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.31, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 16:27:31.400 +05:30 [INF] Calculated investment amount: 284.3.
2025-05-14 16:27:31.402 +05:30 [INF] Total Investment Amount: 5902.009999999998
2025-05-14 16:27:31.405 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.19, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:27:31.407 +05:30 [INF] Calculated investment amount: 275.56.
2025-05-14 16:27:31.408 +05:30 [INF] Total Investment Amount: 6177.569999999999
2025-05-14 16:27:31.409 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:27:31.410 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.03, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 16:27:31.412 +05:30 [INF] Calculated investment amount: 273.29.
2025-05-14 16:27:31.416 +05:30 [INF] Total Investment Amount: 6450.859999999999
2025-05-14 16:27:31.419 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.47, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 16:27:31.420 +05:30 [INF] Calculated investment amount: 308.48.
2025-05-14 16:27:31.421 +05:30 [INF] Total Investment Amount: 6759.339999999998
2025-05-14 16:27:31.422 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:27:31.423 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 16:27:31.427 +05:30 [INF] Calculated investment amount: 362.64.
2025-05-14 16:27:31.428 +05:30 [INF] Total Investment Amount: 7121.979999999999
2025-05-14 16:27:31.429 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.46, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 16:27:31.431 +05:30 [INF] Calculated investment amount: 380.9.
2025-05-14 16:27:31.432 +05:30 [INF] Total Investment Amount: 7502.879999999998
2025-05-14 16:27:31.433 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:27:31.438 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 16:27:31.440 +05:30 [INF] Calculated investment amount: 93.69.
2025-05-14 16:27:31.442 +05:30 [INF] Total Investment Amount: 7596.569999999998
2025-05-14 16:27:31.443 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 16:27:31.456 +05:30 [INF] Calculated investment amount: 98.25.
2025-05-14 16:27:31.458 +05:30 [INF] Total Investment Amount: 7694.819999999998
2025-05-14 16:27:31.459 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:27:31.460 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 16:27:31.461 +05:30 [INF] Calculated investment amount: 65.86.
2025-05-14 16:27:31.465 +05:30 [INF] Total Investment Amount: 7760.679999999998
2025-05-14 16:27:31.466 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.87, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 16:27:31.468 +05:30 [INF] Calculated investment amount: 70.42.
2025-05-14 16:27:31.469 +05:30 [INF] Total Investment Amount: 7831.099999999998
2025-05-14 16:27:31.470 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:27:31.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 16:27:31.472 +05:30 [INF] Calculated investment amount: 94.9.
2025-05-14 16:27:31.476 +05:30 [INF] Total Investment Amount: 7925.999999999997
2025-05-14 16:27:31.477 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 16:27:31.482 +05:30 [INF] Calculated investment amount: 92.92.
2025-05-14 16:27:31.484 +05:30 [INF] Total Investment Amount: 8018.919999999997
2025-05-14 16:27:31.501 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:27:31.506 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":6.25,"InvestmentAmount":469.57},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":5.75,"InvestmentAmount":441.57}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":4.79,"InvestmentAmount":336.42},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.21,"InvestmentAmount":307.83}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":4.63,"InvestmentAmount":312.51},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":4.37,"InvestmentAmount":301.26}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":396.5},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":383.14}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":481.86},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":498.99}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":376.41},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":387.83}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.58,"InvestmentAmount":205.95},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":2.09,"InvestmentAmount":174}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":126.71},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.85,"InvestmentAmount":137.86}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.92,"InvestmentAmount":150.32},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.58,"InvestmentAmount":128.98}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.31,"InvestmentAmount":284.3},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":3.19,"InvestmentAmount":275.56}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":3.03,"InvestmentAmount":273.29},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":3.47,"InvestmentAmount":308.48}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":4.21,"InvestmentAmount":362.64},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":4.46,"InvestmentAmount":380.9}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.21,"InvestmentAmount":93.69},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.29,"InvestmentAmount":98.25}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":65.86},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.87,"InvestmentAmount":70.42}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.27,"InvestmentAmount":94.9},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.23,"InvestmentAmount":92.92}}}}
2025-05-14 16:27:31.514 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:27:31.522 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 365.9464ms
2025-05-14 16:27:31.525 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:27:31.527 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 398.4482ms
2025-05-14 16:27:31.547 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:27:31.551 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.553 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.5051ms
2025-05-14 16:27:31.554 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:27:31.562 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:27:31.572 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.577 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.582 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 28.0275ms
2025-05-14 16:27:31.585 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:27:31.593 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:27:31.595 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:27:31.597 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:27:31.600 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:27:31.602 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:27:31.606 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:27:31.608 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:27:31.612 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:27:31.612 +05:30 [WRN] Deserialized product allocations are null. Returning an empty result.
2025-05-14 16:27:31.618 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:27:31.618 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:27:31.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:27:31.656 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 57.0873ms
2025-05-14 16:27:31.659 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 48.3264ms
2025-05-14 16:27:31.661 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:27:31.673 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 110.1901ms
2025-05-14 16:27:31.663 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:27:31.691 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 97.6819ms
2025-05-14 16:31:09.260 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:31:09.261 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:31:09.272 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:31:09.279 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:31:09.280 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 19.444ms
2025-05-14 16:31:09.281 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 20.0155ms
2025-05-14 16:31:09.294 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:31:09.301 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:31:09.330 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:31:09.342 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:31:09.343 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:31:09.348 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:31:09.375 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:31:09.346 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:31:09.382 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:31:09.394 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:31:09.395 +05:30 [WRN] Deserialized product allocations are null. Returning an empty result.
2025-05-14 16:31:09.397 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:31:09.399 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:31:09.412 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 37.6996ms
2025-05-14 16:31:09.409 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:31:09.429 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:31:09.430 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:31:09.431 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 137.2666ms
2025-05-14 16:31:09.434 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 36.862ms
2025-05-14 16:31:09.456 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:31:09.457 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 156.4679ms
2025-05-14 16:40:59.211 +05:30 [INF] Application is shutting down...
2025-05-14 16:41:08.162 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 16:41:08.297 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 16:41:08.303 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 16:41:08.305 +05:30 [INF] Hosting environment: Development
2025-05-14 16:41:08.309 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 16:41:23.465 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:41:23.532 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:23.542 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 77.4511ms
2025-05-14 16:41:23.556 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-14 16:41:23.650 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:23.659 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:41:23.688 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:41:23.781 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:41:23.820 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:41:23.823 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 16:41:23.833 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:41:23.836 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:41:23.837 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:41:23.838 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 16:41:23.845 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 16:41:23.871 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:41:23.874 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:41:23.876 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:41:23.879 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:41:23.881 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:41:23.884 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:41:23.886 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:41:23.887 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:41:23.889 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:41:23.890 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:41:23.919 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:41:23.933 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:41:23.935 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:41:23.945 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:41:23.961 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 264.0961ms
2025-05-14 16:41:23.964 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:41:23.967 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 411.9796ms
2025-05-14 16:41:23.976 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - null null
2025-05-14 16:41:23.982 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:23.986 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 204 null null 10.18ms
2025-05-14 16:41:23.994 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - application/json 483
2025-05-14 16:41:24.001 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:24.006 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:41:24.019 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:41:24.060 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:41:24.064 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:41:24.069 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:41:24.101 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:41:24.108 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:41:24.112 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-14 16:41:24.118 +05:30 [INF] Calculated investment amount: 452.65.
2025-05-14 16:41:24.120 +05:30 [INF] Total Investment Amount: 452.65
2025-05-14 16:41:24.121 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 16:41:24.122 +05:30 [INF] Calculated investment amount: 432.12.
2025-05-14 16:41:24.126 +05:30 [INF] Total Investment Amount: 884.77
2025-05-14 16:41:24.127 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:41:24.128 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-14 16:41:24.130 +05:30 [INF] Calculated investment amount: 310.21.
2025-05-14 16:41:24.132 +05:30 [INF] Total Investment Amount: 1194.98
2025-05-14 16:41:24.132 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-14 16:41:24.136 +05:30 [INF] Calculated investment amount: 291.38.
2025-05-14 16:41:24.137 +05:30 [INF] Total Investment Amount: 1486.3600000000001
2025-05-14 16:41:24.139 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:41:24.142 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-14 16:41:24.147 +05:30 [INF] Calculated investment amount: 280.46.
2025-05-14 16:41:24.148 +05:30 [INF] Total Investment Amount: 1766.8200000000002
2025-05-14 16:41:24.149 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-14 16:41:24.150 +05:30 [INF] Calculated investment amount: 274.37.
2025-05-14 16:41:24.151 +05:30 [INF] Total Investment Amount: 2041.19
2025-05-14 16:41:24.152 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:41:24.153 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 16:41:24.154 +05:30 [INF] Calculated investment amount: 479.52.
2025-05-14 16:41:24.162 +05:30 [INF] Total Investment Amount: 2520.71
2025-05-14 16:41:24.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-14 16:41:24.164 +05:30 [INF] Calculated investment amount: 465.13.
2025-05-14 16:41:24.165 +05:30 [INF] Total Investment Amount: 2985.84
2025-05-14 16:41:24.166 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:41:24.167 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-14 16:41:24.171 +05:30 [INF] Calculated investment amount: 563.52.
2025-05-14 16:41:24.172 +05:30 [INF] Total Investment Amount: 3549.36
2025-05-14 16:41:24.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-14 16:41:24.178 +05:30 [INF] Calculated investment amount: 579.8.
2025-05-14 16:41:24.181 +05:30 [INF] Total Investment Amount: 4129.16
2025-05-14 16:41:24.182 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:41:24.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-14 16:41:24.186 +05:30 [INF] Calculated investment amount: 450.66.
2025-05-14 16:41:24.186 +05:30 [INF] Total Investment Amount: 4579.82
2025-05-14 16:41:24.187 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-14 16:41:24.189 +05:30 [INF] Calculated investment amount: 463.09.
2025-05-14 16:41:24.197 +05:30 [INF] Total Investment Amount: 5042.91
2025-05-14 16:41:24.200 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:41:24.201 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-14 16:41:24.203 +05:30 [INF] Calculated investment amount: 151.81.
2025-05-14 16:41:24.204 +05:30 [INF] Total Investment Amount: 5194.72
2025-05-14 16:41:24.208 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-14 16:41:24.210 +05:30 [INF] Calculated investment amount: 131.88.
2025-05-14 16:41:24.211 +05:30 [INF] Total Investment Amount: 5326.6
2025-05-14 16:41:24.212 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:41:24.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 16:41:24.215 +05:30 [INF] Calculated investment amount: 91.45.
2025-05-14 16:41:24.215 +05:30 [INF] Total Investment Amount: 5418.05
2025-05-14 16:41:24.216 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-14 16:41:24.222 +05:30 [INF] Calculated investment amount: 96.78.
2025-05-14 16:41:24.223 +05:30 [INF] Total Investment Amount: 5514.83
2025-05-14 16:41:24.224 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:41:24.227 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-14 16:41:24.231 +05:30 [INF] Calculated investment amount: 109.73.
2025-05-14 16:41:24.232 +05:30 [INF] Total Investment Amount: 5624.5599999999995
2025-05-14 16:41:24.232 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-14 16:41:24.234 +05:30 [INF] Calculated investment amount: 96.25.
2025-05-14 16:41:24.235 +05:30 [INF] Total Investment Amount: 5720.8099999999995
2025-05-14 16:41:24.236 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:41:24.237 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-14 16:41:24.245 +05:30 [INF] Calculated investment amount: 58.98.
2025-05-14 16:41:24.246 +05:30 [INF] Total Investment Amount: 5779.789999999999
2025-05-14 16:41:24.248 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 16:41:24.253 +05:30 [INF] Calculated investment amount: 57.98.
2025-05-14 16:41:24.254 +05:30 [INF] Total Investment Amount: 5837.769999999999
2025-05-14 16:41:24.255 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:41:24.256 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-14 16:41:24.261 +05:30 [INF] Calculated investment amount: 58.94.
2025-05-14 16:41:24.263 +05:30 [INF] Total Investment Amount: 5896.709999999998
2025-05-14 16:41:24.265 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-14 16:41:24.267 +05:30 [INF] Calculated investment amount: 65.75.
2025-05-14 16:41:24.268 +05:30 [INF] Total Investment Amount: 5962.459999999998
2025-05-14 16:41:24.271 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:41:24.272 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-14 16:41:24.274 +05:30 [INF] Calculated investment amount: 75.64.
2025-05-14 16:41:24.275 +05:30 [INF] Total Investment Amount: 6038.0999999999985
2025-05-14 16:41:24.276 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-14 16:41:24.278 +05:30 [INF] Calculated investment amount: 79.18.
2025-05-14 16:41:24.283 +05:30 [INF] Total Investment Amount: 6117.279999999999
2025-05-14 16:41:24.284 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:41:24.285 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-14 16:41:24.287 +05:30 [INF] Calculated investment amount: 118.18.
2025-05-14 16:41:24.288 +05:30 [INF] Total Investment Amount: 6235.459999999999
2025-05-14 16:41:24.289 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-14 16:41:24.293 +05:30 [INF] Calculated investment amount: 123.23.
2025-05-14 16:41:24.295 +05:30 [INF] Total Investment Amount: 6358.689999999999
2025-05-14 16:41:24.296 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:41:24.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-14 16:41:24.299 +05:30 [INF] Calculated investment amount: 86.77.
2025-05-14 16:41:24.300 +05:30 [INF] Total Investment Amount: 6445.459999999999
2025-05-14 16:41:24.304 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-14 16:41:24.308 +05:30 [INF] Calculated investment amount: 91.4.
2025-05-14 16:41:24.310 +05:30 [INF] Total Investment Amount: 6536.859999999999
2025-05-14 16:41:24.314 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:41:24.315 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-14 16:41:24.317 +05:30 [INF] Calculated investment amount: 117.52.
2025-05-14 16:41:24.318 +05:30 [INF] Total Investment Amount: 6654.379999999999
2025-05-14 16:41:24.319 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-14 16:41:24.320 +05:30 [INF] Calculated investment amount: 115.29.
2025-05-14 16:41:24.324 +05:30 [INF] Total Investment Amount: 6769.669999999999
2025-05-14 16:41:24.336 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:41:24.339 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":7.29,"InvestmentAmount":452.65},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":6.71,"InvestmentAmount":432.12}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.59,"InvestmentAmount":310.21},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.91,"InvestmentAmount":291.38}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":5.4,"InvestmentAmount":280.46},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.1,"InvestmentAmount":274.37}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":6.12,"InvestmentAmount":479.52},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.88,"InvestmentAmount":465.13}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":7.83,"InvestmentAmount":563.52},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":8.17,"InvestmentAmount":579.8}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.89,"InvestmentAmount":450.66},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.11,"InvestmentAmount":463.09}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":151.81},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":131.88}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":91.45},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":96.78}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":109.73},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":96.25}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":58.98},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":57.98}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":58.94},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":65.75}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":75.64},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":79.18}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":118.18},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":123.23}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":86.77},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":91.4}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":117.52},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":115.29}}}}
2025-05-14 16:41:24.351 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:41:24.355 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 331.9084ms
2025-05-14 16:41:24.361 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:41:24.364 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 200 null application/json; charset=utf-8 369.8683ms
2025-05-14 16:41:24.386 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:41:24.394 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:41:24.395 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:24.403 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:24.404 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 17.7588ms
2025-05-14 16:41:24.406 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.8752ms
2025-05-14 16:41:24.418 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:41:24.428 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:41:24.439 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:24.439 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:41:24.441 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:41:24.442 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:41:24.453 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:41:24.454 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:41:24.459 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:41:24.463 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:41:24.463 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:41:24.470 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:41:24.470 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:41:24.473 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.9129ms
2025-05-14 16:41:24.475 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:41:24.480 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 62.0224ms
2025-05-14 16:41:24.486 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
2025-05-14 16:41:24.518 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 46
2025-05-14 16:41:24.522 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:41:24.524 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 63.5466ms
2025-05-14 16:41:24.531 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:41:24.532 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 103.3558ms
2025-05-14 16:44:55.696 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:44:55.703 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:55.704 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.7296ms
2025-05-14 16:44:55.716 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-14 16:44:55.727 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:55.728 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:44:55.731 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:44:55.742 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:44:55.746 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:44:55.748 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 16:44:55.751 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 16:44:55.758 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:44:55.760 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:44:55.762 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 16:44:55.764 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 16:44:55.771 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 16:44:55.774 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:44:55.779 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:44:55.781 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}
2025-05-14 16:44:55.784 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:44:55.789 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-14 16:44:55.792 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:44:55.794 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:44:55.795 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}
2025-05-14 16:44:55.802 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:44:55.805 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":20,"subAssets":{"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:44:55.809 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:44:55.813 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":20,"subAssets":{"Liquid Mutual Funds":6,"Savings Acc":6,"T. Bill":8}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:44:55.817 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:44:55.823 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 84.0434ms
2025-05-14 16:44:55.827 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:44:55.830 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 114.0375ms
2025-05-14 16:44:55.839 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 16:44:55.846 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:55.849 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 10.3168ms
2025-05-14 16:44:55.890 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 472
2025-05-14 16:44:55.901 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:55.904 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:44:55.912 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:44:55.923 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:44:55.925 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:44:55.927 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:44:55.955 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:44:55.957 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:44:55.964 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 16:44:55.968 +05:30 [INF] Calculated investment amount: 469.57.
2025-05-14 16:44:55.969 +05:30 [INF] Total Investment Amount: 469.57
2025-05-14 16:44:55.970 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:44:55.971 +05:30 [INF] Calculated investment amount: 441.57.
2025-05-14 16:44:55.976 +05:30 [INF] Total Investment Amount: 911.14
2025-05-14 16:44:55.977 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:44:55.978 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 16:44:55.980 +05:30 [INF] Calculated investment amount: 336.42.
2025-05-14 16:44:55.982 +05:30 [INF] Total Investment Amount: 1247.56
2025-05-14 16:44:55.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 16:44:55.990 +05:30 [INF] Calculated investment amount: 307.83.
2025-05-14 16:44:55.992 +05:30 [INF] Total Investment Amount: 1555.3899999999999
2025-05-14 16:44:55.994 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:44:56.007 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 16:44:56.016 +05:30 [INF] Calculated investment amount: 312.51.
2025-05-14 16:44:56.019 +05:30 [INF] Total Investment Amount: 1867.8999999999999
2025-05-14 16:44:56.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 16:44:56.022 +05:30 [INF] Calculated investment amount: 301.26.
2025-05-14 16:44:56.025 +05:30 [INF] Total Investment Amount: 2169.16
2025-05-14 16:44:56.026 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:44:56.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:44:56.030 +05:30 [INF] Calculated investment amount: 396.5.
2025-05-14 16:44:56.032 +05:30 [INF] Total Investment Amount: 2565.66
2025-05-14 16:44:56.039 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 16:44:56.042 +05:30 [INF] Calculated investment amount: 383.14.
2025-05-14 16:44:56.044 +05:30 [INF] Total Investment Amount: 2948.7999999999997
2025-05-14 16:44:56.046 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:44:56.052 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 16:44:56.054 +05:30 [INF] Calculated investment amount: 481.86.
2025-05-14 16:44:56.055 +05:30 [INF] Total Investment Amount: 3430.66
2025-05-14 16:44:56.056 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 16:44:56.057 +05:30 [INF] Calculated investment amount: 498.99.
2025-05-14 16:44:56.061 +05:30 [INF] Total Investment Amount: 3929.6499999999996
2025-05-14 16:44:56.062 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:44:56.064 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 16:44:56.067 +05:30 [INF] Calculated investment amount: 376.41.
2025-05-14 16:44:56.070 +05:30 [INF] Total Investment Amount: 4306.0599999999995
2025-05-14 16:44:56.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 16:44:56.075 +05:30 [INF] Calculated investment amount: 387.83.
2025-05-14 16:44:56.076 +05:30 [INF] Total Investment Amount: 4693.889999999999
2025-05-14 16:44:56.077 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:44:56.078 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 16:44:56.091 +05:30 [INF] Calculated investment amount: 176.42.
2025-05-14 16:44:56.092 +05:30 [INF] Total Investment Amount: 4870.3099999999995
2025-05-14 16:44:56.093 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 16:44:56.094 +05:30 [INF] Calculated investment amount: 149.02.
2025-05-14 16:44:56.095 +05:30 [INF] Total Investment Amount: 5019.33
2025-05-14 16:44:56.096 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:44:56.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:44:56.105 +05:30 [INF] Calculated investment amount: 109.05.
2025-05-14 16:44:56.106 +05:30 [INF] Total Investment Amount: 5128.38
2025-05-14 16:44:56.106 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 16:44:56.108 +05:30 [INF] Calculated investment amount: 117.74.
2025-05-14 16:44:56.109 +05:30 [INF] Total Investment Amount: 5246.12
2025-05-14 16:44:56.112 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:44:56.115 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 16:44:56.124 +05:30 [INF] Calculated investment amount: 129.18.
2025-05-14 16:44:56.126 +05:30 [INF] Total Investment Amount: 5375.3
2025-05-14 16:44:56.128 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 16:44:56.129 +05:30 [INF] Calculated investment amount: 110.2.
2025-05-14 16:44:56.131 +05:30 [INF] Total Investment Amount: 5485.5
2025-05-14 16:44:56.136 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:44:56.139 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 16:44:56.141 +05:30 [INF] Calculated investment amount: 262.83.
2025-05-14 16:44:56.141 +05:30 [INF] Total Investment Amount: 5748.33
2025-05-14 16:44:56.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:44:56.145 +05:30 [INF] Calculated investment amount: 253.97.
2025-05-14 16:44:56.147 +05:30 [INF] Total Investment Amount: 6002.3
2025-05-14 16:44:56.150 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:44:56.151 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 16:44:56.155 +05:30 [INF] Calculated investment amount: 252.54.
2025-05-14 16:44:56.156 +05:30 [INF] Total Investment Amount: 6254.84
2025-05-14 16:44:56.157 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 16:44:56.159 +05:30 [INF] Calculated investment amount: 284.48.
2025-05-14 16:44:56.160 +05:30 [INF] Total Investment Amount: 6539.32
2025-05-14 16:44:56.160 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:44:56.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.89, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 16:44:56.168 +05:30 [INF] Calculated investment amount: 335.07.
2025-05-14 16:44:56.169 +05:30 [INF] Total Investment Amount: 6874.389999999999
2025-05-14 16:44:56.170 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.11, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 16:44:56.172 +05:30 [INF] Calculated investment amount: 351.01.
2025-05-14 16:44:56.173 +05:30 [INF] Total Investment Amount: 7225.4
2025-05-14 16:44:56.174 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:44:56.177 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 16:44:56.180 +05:30 [INF] Calculated investment amount: 140.15.
2025-05-14 16:44:56.183 +05:30 [INF] Total Investment Amount: 7365.549999999999
2025-05-14 16:44:56.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 16:44:56.189 +05:30 [INF] Calculated investment amount: 147.76.
2025-05-14 16:44:56.190 +05:30 [INF] Total Investment Amount: 7513.3099999999995
2025-05-14 16:44:56.191 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:44:56.192 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 16:44:56.194 +05:30 [INF] Calculated investment amount: 98.78.
2025-05-14 16:44:56.195 +05:30 [INF] Total Investment Amount: 7612.089999999999
2025-05-14 16:44:56.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 16:44:56.202 +05:30 [INF] Calculated investment amount: 105.23.
2025-05-14 16:44:56.203 +05:30 [INF] Total Investment Amount: 7717.319999999999
2025-05-14 16:44:56.204 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:44:56.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 16:44:56.207 +05:30 [INF] Calculated investment amount: 142.72.
2025-05-14 16:44:56.211 +05:30 [INF] Total Investment Amount: 7860.039999999999
2025-05-14 16:44:56.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 16:44:56.215 +05:30 [INF] Calculated investment amount: 139.
2025-05-14 16:44:56.216 +05:30 [INF] Total Investment Amount: 7999.039999999999
2025-05-14 16:44:56.219 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:44:56.223 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":6.25,"InvestmentAmount":469.57},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":5.75,"InvestmentAmount":441.57}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":4.79,"InvestmentAmount":336.42},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.21,"InvestmentAmount":307.83}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":4.63,"InvestmentAmount":312.51},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":4.37,"InvestmentAmount":301.26}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":396.5},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":383.14}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":481.86},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":498.99}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":376.41},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":387.83}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":176.42},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":149.02}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":109.05},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":117.74}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":129.18},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":110.2}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":3.06,"InvestmentAmount":262.83},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":2.94,"InvestmentAmount":253.97}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":252.54},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":3.2,"InvestmentAmount":284.48}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":3.89,"InvestmentAmount":335.07},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":4.11,"InvestmentAmount":351.01}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":140.15},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":147.76}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":98.78},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":105.23}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":142.72},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":139}}}}
2025-05-14 16:44:56.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:44:56.237 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 319.8835ms
2025-05-14 16:44:56.239 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:44:56.241 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 350.6278ms
2025-05-14 16:44:56.263 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:44:56.268 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:56.270 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.5304ms
2025-05-14 16:44:56.273 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:44:56.310 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:56.311 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:44:56.313 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:44:56.333 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:44:56.336 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:44:56.340 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:56.345 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 12.408ms
2025-05-14 16:44:56.345 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:44:56.357 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:44:56.360 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
2025-05-14 16:44:56.362 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:44:56.364 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 46
2025-05-14 16:44:56.365 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:44:56.372 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:44:56.374 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:44:56.375 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 39.1753ms
2025-05-14 16:44:56.377 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:44:56.378 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:44:56.385 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:44:56.386 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 113.4402ms
2025-05-14 16:44:56.387 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:44:56.395 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 18.746ms
2025-05-14 16:44:56.398 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:44:56.399 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 41.6843ms
2025-05-14 16:47:38.191 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:47:38.199 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.200 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 8.9062ms
2025-05-14 16:47:38.206 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-14 16:47:38.213 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.217 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:47:38.219 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:47:38.221 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:47:38.223 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:47:38.228 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 16:47:38.230 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:47:38.233 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:47:38.234 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:47:38.235 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-14 16:47:38.240 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-14 16:47:38.244 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 16:47:38.249 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:47:38.252 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:47:38.253 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:47:38.254 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 16:47:38.255 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-14 16:47:38.256 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-14 16:47:38.259 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:47:38.265 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:47:38.266 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-14 16:47:38.283 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 16:47:38.296 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:47:38.308 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-14 16:47:38.311 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:47:38.314 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 93.357ms
2025-05-14 16:47:38.319 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:47:38.320 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 113.729ms
2025-05-14 16:47:38.332 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - null null
2025-05-14 16:47:38.336 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.337 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - 204 null null 4.9295ms
2025-05-14 16:47:38.346 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - application/json 477
2025-05-14 16:47:38.355 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.356 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:47:38.358 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:47:38.365 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:47:38.367 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:47:38.369 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:47:38.396 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:47:38.398 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:47:38.399 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 6.
2025-05-14 16:47:38.405 +05:30 [INF] Calculated investment amount: 588.18.
2025-05-14 16:47:38.407 +05:30 [INF] Total Investment Amount: 588.18
2025-05-14 16:47:38.408 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:47:38.410 +05:30 [INF] Calculated investment amount: 564.98.
2025-05-14 16:47:38.412 +05:30 [INF] Total Investment Amount: 1153.1599999999999
2025-05-14 16:47:38.416 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:47:38.417 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 6.
2025-05-14 16:47:38.419 +05:30 [INF] Calculated investment amount: 393.63.
2025-05-14 16:47:38.420 +05:30 [INF] Total Investment Amount: 1546.79
2025-05-14 16:47:38.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 6.
2025-05-14 16:47:38.426 +05:30 [INF] Calculated investment amount: 375.32.
2025-05-14 16:47:38.428 +05:30 [INF] Total Investment Amount: 1922.11
2025-05-14 16:47:38.430 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:47:38.432 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 6.
2025-05-14 16:47:38.433 +05:30 [INF] Calculated investment amount: 351.71.
2025-05-14 16:47:38.436 +05:30 [INF] Total Investment Amount: 2273.8199999999997
2025-05-14 16:47:38.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 6.
2025-05-14 16:47:38.438 +05:30 [INF] Calculated investment amount: 345.98.
2025-05-14 16:47:38.439 +05:30 [INF] Total Investment Amount: 2619.7999999999997
2025-05-14 16:47:38.440 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:47:38.442 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:47:38.443 +05:30 [INF] Calculated investment amount: 342.51.
2025-05-14 16:47:38.444 +05:30 [INF] Total Investment Amount: 2962.3099999999995
2025-05-14 16:47:38.450 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 6.
2025-05-14 16:47:38.453 +05:30 [INF] Calculated investment amount: 332.87.
2025-05-14 16:47:38.454 +05:30 [INF] Total Investment Amount: 3295.1799999999994
2025-05-14 16:47:38.455 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:47:38.456 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 6.
2025-05-14 16:47:38.461 +05:30 [INF] Calculated investment amount: 395.56.
2025-05-14 16:47:38.463 +05:30 [INF] Total Investment Amount: 3690.7399999999993
2025-05-14 16:47:38.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 6.
2025-05-14 16:47:38.466 +05:30 [INF] Calculated investment amount: 406.18.
2025-05-14 16:47:38.473 +05:30 [INF] Total Investment Amount: 4096.919999999999
2025-05-14 16:47:38.475 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:47:38.476 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 6.
2025-05-14 16:47:38.479 +05:30 [INF] Calculated investment amount: 320.56.
2025-05-14 16:47:38.482 +05:30 [INF] Total Investment Amount: 4417.48
2025-05-14 16:47:38.485 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 6.
2025-05-14 16:47:38.488 +05:30 [INF] Calculated investment amount: 328.41.
2025-05-14 16:47:38.490 +05:30 [INF] Total Investment Amount: 4745.889999999999
2025-05-14 16:47:38.491 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:47:38.496 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 6.
2025-05-14 16:47:38.499 +05:30 [INF] Calculated investment amount: 140.82.
2025-05-14 16:47:38.501 +05:30 [INF] Total Investment Amount: 4886.709999999999
2025-05-14 16:47:38.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 6.
2025-05-14 16:47:38.510 +05:30 [INF] Calculated investment amount: 124.07.
2025-05-14 16:47:38.512 +05:30 [INF] Total Investment Amount: 5010.779999999999
2025-05-14 16:47:38.514 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:47:38.519 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:47:38.520 +05:30 [INF] Calculated investment amount: 83.74.
2025-05-14 16:47:38.521 +05:30 [INF] Total Investment Amount: 5094.519999999999
2025-05-14 16:47:38.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 6.
2025-05-14 16:47:38.525 +05:30 [INF] Calculated investment amount: 87.74.
2025-05-14 16:47:38.525 +05:30 [INF] Total Investment Amount: 5182.259999999998
2025-05-14 16:47:38.531 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:47:38.534 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 6.
2025-05-14 16:47:38.537 +05:30 [INF] Calculated investment amount: 101.14.
2025-05-14 16:47:38.538 +05:30 [INF] Total Investment Amount: 5283.399999999999
2025-05-14 16:47:38.538 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 6.
2025-05-14 16:47:38.544 +05:30 [INF] Calculated investment amount: 89.96.
2025-05-14 16:47:38.546 +05:30 [INF] Total Investment Amount: 5373.359999999999
2025-05-14 16:47:38.546 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:47:38.548 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 6.
2025-05-14 16:47:38.550 +05:30 [INF] Calculated investment amount: 56.07.
2025-05-14 16:47:38.551 +05:30 [INF] Total Investment Amount: 5429.4299999999985
2025-05-14 16:47:38.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:47:38.558 +05:30 [INF] Calculated investment amount: 55.22.
2025-05-14 16:47:38.559 +05:30 [INF] Total Investment Amount: 5484.649999999999
2025-05-14 16:47:38.561 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:47:38.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 6.
2025-05-14 16:47:38.567 +05:30 [INF] Calculated investment amount: 56.95.
2025-05-14 16:47:38.569 +05:30 [INF] Total Investment Amount: 5541.5999999999985
2025-05-14 16:47:38.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 6.
2025-05-14 16:47:38.572 +05:30 [INF] Calculated investment amount: 63.23.
2025-05-14 16:47:38.573 +05:30 [INF] Total Investment Amount: 5604.829999999998
2025-05-14 16:47:38.574 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:47:38.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 6.
2025-05-14 16:47:38.616 +05:30 [INF] Calculated investment amount: 71.97.
2025-05-14 16:47:38.618 +05:30 [INF] Total Investment Amount: 5676.799999999998
2025-05-14 16:47:38.620 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 6.
2025-05-14 16:47:38.627 +05:30 [INF] Calculated investment amount: 75.13.
2025-05-14 16:47:38.629 +05:30 [INF] Total Investment Amount: 5751.9299999999985
2025-05-14 16:47:38.631 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:47:38.641 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 6.
2025-05-14 16:47:38.648 +05:30 [INF] Calculated investment amount: 54.56.
2025-05-14 16:47:38.650 +05:30 [INF] Total Investment Amount: 5806.489999999999
2025-05-14 16:47:38.652 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 6.
2025-05-14 16:47:38.654 +05:30 [INF] Calculated investment amount: 56.27.
2025-05-14 16:47:38.658 +05:30 [INF] Total Investment Amount: 5862.759999999999
2025-05-14 16:47:38.660 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:47:38.662 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 6.
2025-05-14 16:47:38.664 +05:30 [INF] Calculated investment amount: 40.66.
2025-05-14 16:47:38.665 +05:30 [INF] Total Investment Amount: 5903.419999999999
2025-05-14 16:47:38.672 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 6.
2025-05-14 16:47:38.674 +05:30 [INF] Calculated investment amount: 42.59.
2025-05-14 16:47:38.675 +05:30 [INF] Total Investment Amount: 5946.009999999999
2025-05-14 16:47:38.676 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:47:38.677 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 6.
2025-05-14 16:47:38.684 +05:30 [INF] Calculated investment amount: 53.6.
2025-05-14 16:47:38.685 +05:30 [INF] Total Investment Amount: 5999.61
2025-05-14 16:47:38.686 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 6.
2025-05-14 16:47:38.688 +05:30 [INF] Calculated investment amount: 52.5.
2025-05-14 16:47:38.689 +05:30 [INF] Total Investment Amount: 6052.11
2025-05-14 16:47:38.692 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:47:38.696 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":10.42,"InvestmentAmount":588.18},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":9.58,"InvestmentAmount":564.98}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":7.98,"InvestmentAmount":393.63},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":7.02,"InvestmentAmount":375.32}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":7.72,"InvestmentAmount":351.71},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":7.28,"InvestmentAmount":345.98}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.59,"InvestmentAmount":342.51},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.41,"InvestmentAmount":332.87}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":5.87,"InvestmentAmount":395.56},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.13,"InvestmentAmount":406.18}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.42,"InvestmentAmount":320.56},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.58,"InvestmentAmount":328.41}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":140.82},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":124.07}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":83.74},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":87.74}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":101.14},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":89.96}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":56.07},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":55.22}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":56.95},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":63.23}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":71.97},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":75.13}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.91,"InvestmentAmount":54.56},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.97,"InvestmentAmount":56.27}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.6,"InvestmentAmount":40.66},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.65,"InvestmentAmount":42.59}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.96,"InvestmentAmount":53.6},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.92,"InvestmentAmount":52.5}}}}
2025-05-14 16:47:38.701 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:47:38.703 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 342.8226ms
2025-05-14 16:47:38.709 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:47:38.711 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - 200 null application/json; charset=utf-8 364.7262ms
2025-05-14 16:47:38.732 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:47:38.736 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.738 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.2942ms
2025-05-14 16:47:38.741 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:47:38.761 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:47:38.771 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.775 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.775 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:47:38.776 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 15.6615ms
2025-05-14 16:47:38.778 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:47:38.786 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:47:38.788 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:47:38.794 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:47:38.797 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:47:38.797 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:47:38.798 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:47:38.799 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
2025-05-14 16:47:38.800 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:47:38.806 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetProductAllocationsAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 205
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 46
2025-05-14 16:47:38.808 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:47:38.810 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:47:38.810 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:47:38.812 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 23.7764ms
2025-05-14 16:47:38.817 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.6937ms
2025-05-14 16:47:38.818 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:47:38.820 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:47:38.822 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 80.3215ms
2025-05-14 16:47:38.824 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 37.4407ms
2025-05-14 16:50:26.338 +05:30 [INF] Application is shutting down...
2025-05-14 16:54:36.097 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 16:54:36.264 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 16:54:36.271 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 16:54:36.273 +05:30 [INF] Hosting environment: Development
2025-05-14 16:54:36.277 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 16:54:53.345 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-14 16:54:53.410 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:54:53.422 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 78.7691ms
2025-05-14 16:54:53.433 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 53
2025-05-14 16:54:53.514 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:54:53.519 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 16:54:53.539 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-14 16:54:53.726 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:54:53.750 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 204.6854ms
2025-05-14 16:54:53.754 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-14 16:54:53.756 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 323.9151ms
2025-05-14 16:55:03.979 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:55:03.990 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:03.995 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 15.9774ms
2025-05-14 16:55:04.007 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-14 16:55:04.021 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.025 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:55:04.038 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:55:04.066 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:55:04.091 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:55:04.094 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 16:55:04.098 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 16:55:04.101 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:55:04.106 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:55:04.108 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 16:55:04.112 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 16:55:04.132 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:55:04.138 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:55:04.144 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:55:04.149 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:55:04.153 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:55:04.160 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 16:55:04.161 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 16:55:04.162 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 16:55:04.163 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 16:55:04.164 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 16:55:04.189 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:55:04.202 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:55:04.205 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 16:55:04.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:55:04.217 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 173.6358ms
2025-05-14 16:55:04.225 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:55:04.228 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 220.7689ms
2025-05-14 16:55:04.234 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - null null
2025-05-14 16:55:04.240 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.246 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - 204 null null 11.235ms
2025-05-14 16:55:04.251 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - application/json 483
2025-05-14 16:55:04.265 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.265 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:55:04.272 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:55:04.310 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:55:04.315 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:55:04.326 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:55:04.362 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:55:04.370 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:55:04.376 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 6.
2025-05-14 16:55:04.380 +05:30 [INF] Calculated investment amount: 411.5.
2025-05-14 16:55:04.381 +05:30 [INF] Total Investment Amount: 411.5
2025-05-14 16:55:04.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:55:04.383 +05:30 [INF] Calculated investment amount: 395.72.
2025-05-14 16:55:04.384 +05:30 [INF] Total Investment Amount: 807.22
2025-05-14 16:55:04.385 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:55:04.391 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 6.
2025-05-14 16:55:04.394 +05:30 [INF] Calculated investment amount: 275.74.
2025-05-14 16:55:04.399 +05:30 [INF] Total Investment Amount: 1082.96
2025-05-14 16:55:04.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 6.
2025-05-14 16:55:04.405 +05:30 [INF] Calculated investment amount: 262.51.
2025-05-14 16:55:04.407 +05:30 [INF] Total Investment Amount: 1345.47
2025-05-14 16:55:04.412 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:55:04.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 6.
2025-05-14 16:55:04.418 +05:30 [INF] Calculated investment amount: 246.02.
2025-05-14 16:55:04.424 +05:30 [INF] Total Investment Amount: 1591.49
2025-05-14 16:55:04.425 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 6.
2025-05-14 16:55:04.427 +05:30 [INF] Calculated investment amount: 242.38.
2025-05-14 16:55:04.429 +05:30 [INF] Total Investment Amount: 1833.87
2025-05-14 16:55:04.434 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:55:04.435 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:55:04.437 +05:30 [INF] Calculated investment amount: 456.68.
2025-05-14 16:55:04.438 +05:30 [INF] Total Investment Amount: 2290.5499999999997
2025-05-14 16:55:04.439 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 6.
2025-05-14 16:55:04.443 +05:30 [INF] Calculated investment amount: 443.82.
2025-05-14 16:55:04.445 +05:30 [INF] Total Investment Amount: 2734.37
2025-05-14 16:55:04.446 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:55:04.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 6.
2025-05-14 16:55:04.449 +05:30 [INF] Calculated investment amount: 527.64.
2025-05-14 16:55:04.450 +05:30 [INF] Total Investment Amount: 3262.0099999999998
2025-05-14 16:55:04.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 6.
2025-05-14 16:55:04.458 +05:30 [INF] Calculated investment amount: 541.36.
2025-05-14 16:55:04.459 +05:30 [INF] Total Investment Amount: 3803.37
2025-05-14 16:55:04.460 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:55:04.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 6.
2025-05-14 16:55:04.463 +05:30 [INF] Calculated investment amount: 427.17.
2025-05-14 16:55:04.463 +05:30 [INF] Total Investment Amount: 4230.54
2025-05-14 16:55:04.467 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 6.
2025-05-14 16:55:04.470 +05:30 [INF] Calculated investment amount: 438.12.
2025-05-14 16:55:04.471 +05:30 [INF] Total Investment Amount: 4668.66
2025-05-14 16:55:04.472 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:55:04.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 6.
2025-05-14 16:55:04.479 +05:30 [INF] Calculated investment amount: 140.82.
2025-05-14 16:55:04.480 +05:30 [INF] Total Investment Amount: 4809.48
2025-05-14 16:55:04.480 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 6.
2025-05-14 16:55:04.482 +05:30 [INF] Calculated investment amount: 124.07.
2025-05-14 16:55:04.483 +05:30 [INF] Total Investment Amount: 4933.549999999999
2025-05-14 16:55:04.484 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:55:04.485 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-14 16:55:04.490 +05:30 [INF] Calculated investment amount: 83.74.
2025-05-14 16:55:04.491 +05:30 [INF] Total Investment Amount: 5017.289999999999
2025-05-14 16:55:04.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 6.
2025-05-14 16:55:04.494 +05:30 [INF] Calculated investment amount: 87.74.
2025-05-14 16:55:04.495 +05:30 [INF] Total Investment Amount: 5105.029999999999
2025-05-14 16:55:04.496 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:55:04.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 6.
2025-05-14 16:55:04.501 +05:30 [INF] Calculated investment amount: 101.14.
2025-05-14 16:55:04.502 +05:30 [INF] Total Investment Amount: 5206.169999999999
2025-05-14 16:55:04.503 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 6.
2025-05-14 16:55:04.505 +05:30 [INF] Calculated investment amount: 89.96.
2025-05-14 16:55:04.506 +05:30 [INF] Total Investment Amount: 5296.129999999999
2025-05-14 16:55:04.507 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:55:04.513 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 6.
2025-05-14 16:55:04.514 +05:30 [INF] Calculated investment amount: 56.07.
2025-05-14 16:55:04.515 +05:30 [INF] Total Investment Amount: 5352.199999999999
2025-05-14 16:55:04.516 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-14 16:55:04.517 +05:30 [INF] Calculated investment amount: 55.22.
2025-05-14 16:55:04.525 +05:30 [INF] Total Investment Amount: 5407.419999999999
2025-05-14 16:55:04.527 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:55:04.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 6.
2025-05-14 16:55:04.530 +05:30 [INF] Calculated investment amount: 56.95.
2025-05-14 16:55:04.531 +05:30 [INF] Total Investment Amount: 5464.369999999999
2025-05-14 16:55:04.531 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 6.
2025-05-14 16:55:04.533 +05:30 [INF] Calculated investment amount: 63.23.
2025-05-14 16:55:04.539 +05:30 [INF] Total Investment Amount: 5527.5999999999985
2025-05-14 16:55:04.540 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:55:04.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 6.
2025-05-14 16:55:04.544 +05:30 [INF] Calculated investment amount: 71.97.
2025-05-14 16:55:04.546 +05:30 [INF] Total Investment Amount: 5599.569999999999
2025-05-14 16:55:04.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 6.
2025-05-14 16:55:04.554 +05:30 [INF] Calculated investment amount: 75.13.
2025-05-14 16:55:04.556 +05:30 [INF] Total Investment Amount: 5674.699999999999
2025-05-14 16:55:04.558 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:55:04.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 6.
2025-05-14 16:55:04.561 +05:30 [INF] Calculated investment amount: 108.52.
2025-05-14 16:55:04.562 +05:30 [INF] Total Investment Amount: 5783.219999999999
2025-05-14 16:55:04.563 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 6.
2025-05-14 16:55:04.564 +05:30 [INF] Calculated investment amount: 112.54.
2025-05-14 16:55:04.565 +05:30 [INF] Total Investment Amount: 5895.759999999999
2025-05-14 16:55:04.566 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:55:04.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 6.
2025-05-14 16:55:04.576 +05:30 [INF] Calculated investment amount: 81.32.
2025-05-14 16:55:04.577 +05:30 [INF] Total Investment Amount: 5977.079999999999
2025-05-14 16:55:04.578 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 6.
2025-05-14 16:55:04.582 +05:30 [INF] Calculated investment amount: 85.18.
2025-05-14 16:55:04.582 +05:30 [INF] Total Investment Amount: 6062.259999999999
2025-05-14 16:55:04.583 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:55:04.585 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 6.
2025-05-14 16:55:04.587 +05:30 [INF] Calculated investment amount: 106.65.
2025-05-14 16:55:04.588 +05:30 [INF] Total Investment Amount: 6168.909999999999
2025-05-14 16:55:04.592 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 6.
2025-05-14 16:55:04.594 +05:30 [INF] Calculated investment amount: 105.
2025-05-14 16:55:04.595 +05:30 [INF] Total Investment Amount: 6273.909999999999
2025-05-14 16:55:04.607 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:55:04.612 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":7.29,"InvestmentAmount":411.5},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":6.71,"InvestmentAmount":395.72}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.59,"InvestmentAmount":275.74},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.91,"InvestmentAmount":262.51}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":5.4,"InvestmentAmount":246.02},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.1,"InvestmentAmount":242.38}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":6.12,"InvestmentAmount":456.68},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.88,"InvestmentAmount":443.82}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":7.83,"InvestmentAmount":527.64},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":8.17,"InvestmentAmount":541.36}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.89,"InvestmentAmount":427.17},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.11,"InvestmentAmount":438.12}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":140.82},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":124.07}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":83.74},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":87.74}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":101.14},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":89.96}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":56.07},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":55.22}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":56.95},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":63.23}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":71.97},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":75.13}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":108.52},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":112.54}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":81.32},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":85.18}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":106.65},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":105}}}}
2025-05-14 16:55:04.617 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:55:04.624 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 345.73ms
2025-05-14 16:55:04.627 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:55:04.628 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=6 - 200 null application/json; charset=utf-8 377.7411ms
2025-05-14 16:55:04.817 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:55:04.819 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:55:04.823 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.826 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.830 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 12.9157ms
2025-05-14 16:55:04.831 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.6933ms
2025-05-14 16:55:04.834 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:55:04.844 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:55:04.854 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.856 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:55:04.857 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:55:04.858 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:55:04.863 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:55:04.867 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:55:04.868 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:55:04.875 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:55:04.876 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:55:04.878 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:55:04.879 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:55:04.881 +05:30 [INF] Attempting to read total investment amount from JSON file: ProductAllocations.json
2025-05-14 16:55:04.882 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.7241ms
2025-05-14 16:55:04.885 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:55:04.889 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:55:04.893 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 58.5105ms
2025-05-14 16:55:04.900 +05:30 [ERR] Error occurred while retrieving total investment amount.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
2025-05-14 16:55:04.929 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 49
2025-05-14 16:55:04.934 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:55:04.952 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 81.0972ms
2025-05-14 16:55:04.955 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:55:04.960 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 116.7134ms
2025-05-14 16:59:05.870 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:59:05.874 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:59:05.878 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:05.887 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:05.890 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 19.7857ms
2025-05-14 16:59:05.892 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 17.0439ms
2025-05-14 16:59:05.904 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:59:05.907 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:59:05.916 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:05.919 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:05.923 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:59:05.924 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:59:05.925 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:59:05.927 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:59:05.940 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:59:05.943 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:59:05.945 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:59:05.950 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:59:05.951 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:59:05.954 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 17.4012ms
2025-05-14 16:59:05.962 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:59:05.956 +05:30 [INF] Attempting to read total investment amount from JSON file: ProductAllocations.json
2025-05-14 16:59:05.966 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 61.3128ms
2025-05-14 16:59:05.972 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:59:05.979 +05:30 [ERR] Error occurred while retrieving total investment amount.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
2025-05-14 16:59:05.986 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 49
2025-05-14 16:59:05.990 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:59:05.998 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 58.3923ms
2025-05-14 16:59:06.012 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:59:06.022 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 110.8348ms
2025-05-14 16:59:17.650 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 16:59:17.658 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:17.662 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 11.5599ms
2025-05-14 16:59:17.670 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-14 16:59:17.680 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:17.682 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:59:17.687 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:59:17.693 +05:30 [INF] Starting allocation calculation...
2025-05-14 16:59:17.696 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 16:59:17.700 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-14 16:59:17.701 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-14 16:59:17.702 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 16:59:17.703 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 16:59:17.703 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-14 16:59:17.704 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-14 16:59:17.712 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 16:59:17.715 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 16:59:17.719 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 16:59:17.722 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 16:59:17.723 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 16:59:17.725 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-14 16:59:17.729 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}
2025-05-14 16:59:17.732 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}
2025-05-14 16:59:17.733 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}
2025-05-14 16:59:17.734 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}
2025-05-14 16:59:17.735 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 16:59:17.739 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 16:59:17.746 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":9.75,"Corp Bonds":13,"Fixed Dep":9.75}},"commodities":{"percentage":7.5,"subAssets":{"Precious Metals":3,"Energy":2.25,"Agriculture":2.25}},"cash":{"percentage":17.5,"subAssets":{"Liquid Mutual Funds":5.25,"Savings Acc":5.25,"T. Bill":7}},"realEstate":{"percentage":2.5,"subAssets":{"REITs":0.94,"Residential Prop":0.62,"Commercial Prop":0.94}}}
2025-05-14 16:59:17.747 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 16:59:17.748 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 56.5217ms
2025-05-14 16:59:17.750 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 16:59:17.751 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.1131ms
2025-05-14 16:59:17.760 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - null null
2025-05-14 16:59:17.770 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:17.775 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 204 null null 15.5931ms
2025-05-14 16:59:17.786 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - application/json 499
2025-05-14 16:59:17.792 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:17.793 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:59:17.797 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:59:17.807 +05:30 [INF] Starting product allocation calculation.
2025-05-14 16:59:17.809 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 16:59:17.816 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 16:59:17.849 +05:30 [INF] Product data loaded successfully.
2025-05-14 16:59:17.851 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 16:59:17.857 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 3.
2025-05-14 16:59:17.862 +05:30 [INF] Calculated investment amount: 625.85.
2025-05-14 16:59:17.866 +05:30 [INF] Total Investment Amount: 625.85
2025-05-14 16:59:17.867 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:59:17.868 +05:30 [INF] Calculated investment amount: 589.02.
2025-05-14 16:59:17.869 +05:30 [INF] Total Investment Amount: 1214.87
2025-05-14 16:59:17.870 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 16:59:17.871 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 3.
2025-05-14 16:59:17.872 +05:30 [INF] Calculated investment amount: 448.09.
2025-05-14 16:59:17.880 +05:30 [INF] Total Investment Amount: 1662.9599999999998
2025-05-14 16:59:17.881 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 3.
2025-05-14 16:59:17.882 +05:30 [INF] Calculated investment amount: 410.93.
2025-05-14 16:59:17.883 +05:30 [INF] Total Investment Amount: 2073.89
2025-05-14 16:59:17.884 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 16:59:17.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 3.
2025-05-14 16:59:17.891 +05:30 [INF] Calculated investment amount: 417.13.
2025-05-14 16:59:17.895 +05:30 [INF] Total Investment Amount: 2491.02
2025-05-14 16:59:17.899 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 3.
2025-05-14 16:59:17.901 +05:30 [INF] Calculated investment amount: 401.22.
2025-05-14 16:59:17.902 +05:30 [INF] Total Investment Amount: 2892.24
2025-05-14 16:59:17.903 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 16:59:17.905 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:59:17.912 +05:30 [INF] Calculated investment amount: 429.33.
2025-05-14 16:59:17.914 +05:30 [INF] Total Investment Amount: 3321.5699999999997
2025-05-14 16:59:17.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.78, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 3.
2025-05-14 16:59:17.918 +05:30 [INF] Calculated investment amount: 415.28.
2025-05-14 16:59:17.921 +05:30 [INF] Total Investment Amount: 3736.8499999999995
2025-05-14 16:59:17.923 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 16:59:17.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.36, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 3.
2025-05-14 16:59:17.929 +05:30 [INF] Calculated investment amount: 522.09.
2025-05-14 16:59:17.933 +05:30 [INF] Total Investment Amount: 4258.94
2025-05-14 16:59:17.933 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.64, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 3.
2025-05-14 16:59:17.936 +05:30 [INF] Calculated investment amount: 540.5.
2025-05-14 16:59:17.937 +05:30 [INF] Total Investment Amount: 4799.44
2025-05-14 16:59:17.937 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 16:59:17.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 3.
2025-05-14 16:59:17.946 +05:30 [INF] Calculated investment amount: 407.92.
2025-05-14 16:59:17.947 +05:30 [INF] Total Investment Amount: 5207.36
2025-05-14 16:59:17.948 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.96, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 3.
2025-05-14 16:59:17.950 +05:30 [INF] Calculated investment amount: 420.01.
2025-05-14 16:59:17.951 +05:30 [INF] Total Investment Amount: 5627.37
2025-05-14 16:59:17.952 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 16:59:17.957 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 3.
2025-05-14 16:59:17.962 +05:30 [INF] Calculated investment amount: 132.51.
2025-05-14 16:59:17.963 +05:30 [INF] Total Investment Amount: 5759.88
2025-05-14 16:59:17.966 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.34, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 3.
2025-05-14 16:59:17.968 +05:30 [INF] Calculated investment amount: 111.56.
2025-05-14 16:59:17.969 +05:30 [INF] Total Investment Amount: 5871.4400000000005
2025-05-14 16:59:17.970 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 16:59:17.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.06, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 3.
2025-05-14 16:59:17.978 +05:30 [INF] Calculated investment amount: 81.4.
2025-05-14 16:59:17.980 +05:30 [INF] Total Investment Amount: 5952.84
2025-05-14 16:59:17.981 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.19, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 3.
2025-05-14 16:59:17.983 +05:30 [INF] Calculated investment amount: 88.68.
2025-05-14 16:59:17.984 +05:30 [INF] Total Investment Amount: 6041.52
2025-05-14 16:59:17.988 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 16:59:17.990 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 3.
2025-05-14 16:59:17.993 +05:30 [INF] Calculated investment amount: 96.3.
2025-05-14 16:59:17.995 +05:30 [INF] Total Investment Amount: 6137.820000000001
2025-05-14 16:59:17.998 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 3.
2025-05-14 16:59:18.000 +05:30 [INF] Calculated investment amount: 83.26.
2025-05-14 16:59:18.001 +05:30 [INF] Total Investment Amount: 6221.080000000001
2025-05-14 16:59:18.002 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 16:59:18.003 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.68, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 3.
2025-05-14 16:59:18.005 +05:30 [INF] Calculated investment amount: 230.19.
2025-05-14 16:59:18.006 +05:30 [INF] Total Investment Amount: 6451.27
2025-05-14 16:59:18.013 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 3.
2025-05-14 16:59:18.016 +05:30 [INF] Calculated investment amount: 222.01.
2025-05-14 16:59:18.017 +05:30 [INF] Total Investment Amount: 6673.280000000001
2025-05-14 16:59:18.017 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 16:59:18.019 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 3.
2025-05-14 16:59:18.024 +05:30 [INF] Calculated investment amount: 220.98.
2025-05-14 16:59:18.025 +05:30 [INF] Total Investment Amount: 6894.26
2025-05-14 16:59:18.026 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 3.
2025-05-14 16:59:18.028 +05:30 [INF] Calculated investment amount: 248.92.
2025-05-14 16:59:18.029 +05:30 [INF] Total Investment Amount: 7143.18
2025-05-14 16:59:18.034 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 16:59:18.036 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 3.
2025-05-14 16:59:18.038 +05:30 [INF] Calculated investment amount: 292.87.
2025-05-14 16:59:18.039 +05:30 [INF] Total Investment Amount: 7436.05
2025-05-14 16:59:18.041 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.6, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 3.
2025-05-14 16:59:18.047 +05:30 [INF] Calculated investment amount: 307.45.
2025-05-14 16:59:18.049 +05:30 [INF] Total Investment Amount: 7743.5
2025-05-14 16:59:18.050 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 16:59:18.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.45, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 3.
2025-05-14 16:59:18.052 +05:30 [INF] Calculated investment amount: 34.84.
2025-05-14 16:59:18.056 +05:30 [INF] Total Investment Amount: 7778.34
2025-05-14 16:59:18.058 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 3.
2025-05-14 16:59:18.061 +05:30 [INF] Calculated investment amount: 37.32.
2025-05-14 16:59:18.067 +05:30 [INF] Total Investment Amount: 7815.66
2025-05-14 16:59:18.069 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 16:59:18.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.3, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 3.
2025-05-14 16:59:18.080 +05:30 [INF] Calculated investment amount: 24.7.
2025-05-14 16:59:18.082 +05:30 [INF] Total Investment Amount: 7840.36
2025-05-14 16:59:18.083 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.32, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 3.
2025-05-14 16:59:18.086 +05:30 [INF] Calculated investment amount: 25.9.
2025-05-14 16:59:18.090 +05:30 [INF] Total Investment Amount: 7866.259999999999
2025-05-14 16:59:18.091 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 16:59:18.093 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.48, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 3.
2025-05-14 16:59:18.096 +05:30 [INF] Calculated investment amount: 35.87.
2025-05-14 16:59:18.097 +05:30 [INF] Total Investment Amount: 7902.129999999999
2025-05-14 16:59:18.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.46, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 3.
2025-05-14 16:59:18.104 +05:30 [INF] Calculated investment amount: 34.75.
2025-05-14 16:59:18.105 +05:30 [INF] Total Investment Amount: 7936.879999999999
2025-05-14 16:59:18.111 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 16:59:18.114 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":8.33,"InvestmentAmount":625.85},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":7.67,"InvestmentAmount":589.02}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":6.38,"InvestmentAmount":448.09},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":5.62,"InvestmentAmount":410.93}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":6.18,"InvestmentAmount":417.13},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.82,"InvestmentAmount":401.22}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":4.97,"InvestmentAmount":429.33},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":4.78,"InvestmentAmount":415.28}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":6.36,"InvestmentAmount":522.09},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":6.64,"InvestmentAmount":540.5}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":4.79,"InvestmentAmount":407.92},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":4.96,"InvestmentAmount":420.01}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":1.66,"InvestmentAmount":132.51},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.34,"InvestmentAmount":111.56}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.06,"InvestmentAmount":81.4},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.19,"InvestmentAmount":88.68}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.23,"InvestmentAmount":96.3},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.02,"InvestmentAmount":83.26}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":2.68,"InvestmentAmount":230.19},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":2.57,"InvestmentAmount":222.01}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.45,"InvestmentAmount":220.98},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":248.92}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":3.4,"InvestmentAmount":292.87},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":3.6,"InvestmentAmount":307.45}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":0.45,"InvestmentAmount":34.84},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":0.49,"InvestmentAmount":37.32}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":0.3,"InvestmentAmount":24.7},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":0.32,"InvestmentAmount":25.9}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":0.48,"InvestmentAmount":35.87},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.46,"InvestmentAmount":34.75}}}}
2025-05-14 16:59:18.127 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:59:18.130 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 325.1423ms
2025-05-14 16:59:18.132 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 16:59:18.134 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=3 - 200 null application/json; charset=utf-8 347.2462ms
2025-05-14 16:59:18.161 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:59:18.163 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:59:18.167 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:18.176 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:18.177 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 16.4847ms
2025-05-14 16:59:18.226 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 63.543ms
2025-05-14 16:59:18.249 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 16:59:18.237 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 16:59:18.263 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:18.270 +05:30 [INF] CORS policy execution successful.
2025-05-14 16:59:18.271 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:59:18.272 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:59:18.274 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 16:59:18.275 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 16:59:18.280 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 16:59:18.283 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 16:59:18.285 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:59:18.286 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 16:59:18.287 +05:30 [INF] Attempting to read total investment amount from JSON file: ProductAllocations.json
2025-05-14 16:59:18.287 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 16:59:18.292 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 16:59:18.293 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.3651ms
2025-05-14 16:59:18.295 +05:30 [ERR] Error occurred while retrieving total investment amount.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
2025-05-14 16:59:18.296 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 16:59:18.297 +05:30 [ERR] Error occurred while retrieving product allocations.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.Text.Json.JsonElement.GetProperty(String propertyName)
   at WisVestAPI.Services.ProductAllocationService.GetTotalInvestmentAmountAsync() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Services\ProductAllocationService.cs:line 235
   at WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations() in C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main\Controllers\ProdAllocController.cs:line 49
2025-05-14 16:59:18.298 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 61.3728ms
2025-05-14 16:59:18.305 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-14 16:59:18.310 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 29.9748ms
2025-05-14 16:59:18.316 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 16:59:18.318 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 500 null text/plain; charset=utf-8 69.4699ms
2025-05-14 17:00:21.522 +05:30 [INF] Application is shutting down...
2025-05-14 17:00:27.282 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 17:00:27.475 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 17:00:27.487 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 17:00:27.490 +05:30 [INF] Hosting environment: Development
2025-05-14 17:00:27.492 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 17:00:42.661 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-14 17:00:42.735 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:42.745 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 86.4821ms
2025-05-14 17:00:42.758 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-14 17:00:42.849 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:42.854 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 17:00:42.880 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:00:42.971 +05:30 [INF] Starting allocation calculation...
2025-05-14 17:00:42.999 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 17:00:43.002 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-14 17:00:43.013 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-14 17:00:43.015 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-14 17:00:43.017 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-14 17:00:43.018 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 17:00:43.027 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 17:00:43.046 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 17:00:43.050 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 17:00:43.053 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 17:00:43.055 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 17:00:43.057 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 17:00:43.063 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-14 17:00:43.065 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-14 17:00:43.067 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-14 17:00:43.071 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-14 17:00:43.076 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-14 17:00:43.105 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 17:00:43.115 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 17:00:43.120 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-14 17:00:43.128 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 17:00:43.145 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 258.3947ms
2025-05-14 17:00:43.148 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 17:00:43.152 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 393.363ms
2025-05-14 17:00:43.159 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - null null
2025-05-14 17:00:43.170 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.174 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 204 null null 15.5413ms
2025-05-14 17:00:43.180 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - application/json 483
2025-05-14 17:00:43.188 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.189 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 17:00:43.196 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:00:43.280 +05:30 [INF] Starting product allocation calculation.
2025-05-14 17:00:43.284 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 17:00:43.288 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 17:00:43.329 +05:30 [INF] Product data loaded successfully.
2025-05-14 17:00:43.336 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 17:00:43.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-14 17:00:43.346 +05:30 [INF] Calculated investment amount: 452.65.
2025-05-14 17:00:43.347 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 17:00:43.350 +05:30 [INF] Calculated investment amount: 432.12.
2025-05-14 17:00:43.355 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 17:00:43.357 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-14 17:00:43.359 +05:30 [INF] Calculated investment amount: 310.21.
2025-05-14 17:00:43.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-14 17:00:43.364 +05:30 [INF] Calculated investment amount: 291.38.
2025-05-14 17:00:43.366 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 17:00:43.367 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-14 17:00:43.370 +05:30 [INF] Calculated investment amount: 280.46.
2025-05-14 17:00:43.371 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-14 17:00:43.373 +05:30 [INF] Calculated investment amount: 274.37.
2025-05-14 17:00:43.377 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 17:00:43.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 17:00:43.381 +05:30 [INF] Calculated investment amount: 479.52.
2025-05-14 17:00:43.382 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-14 17:00:43.383 +05:30 [INF] Calculated investment amount: 465.13.
2025-05-14 17:00:43.387 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 17:00:43.388 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-14 17:00:43.391 +05:30 [INF] Calculated investment amount: 563.52.
2025-05-14 17:00:43.392 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-14 17:00:43.393 +05:30 [INF] Calculated investment amount: 579.8.
2025-05-14 17:00:43.394 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 17:00:43.399 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-14 17:00:43.400 +05:30 [INF] Calculated investment amount: 450.66.
2025-05-14 17:00:43.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-14 17:00:43.403 +05:30 [INF] Calculated investment amount: 463.09.
2025-05-14 17:00:43.404 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 17:00:43.405 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-14 17:00:43.410 +05:30 [INF] Calculated investment amount: 151.81.
2025-05-14 17:00:43.411 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-14 17:00:43.413 +05:30 [INF] Calculated investment amount: 131.88.
2025-05-14 17:00:43.414 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 17:00:43.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-14 17:00:43.421 +05:30 [INF] Calculated investment amount: 91.45.
2025-05-14 17:00:43.422 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-14 17:00:43.424 +05:30 [INF] Calculated investment amount: 96.78.
2025-05-14 17:00:43.425 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 17:00:43.427 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-14 17:00:43.431 +05:30 [INF] Calculated investment amount: 109.73.
2025-05-14 17:00:43.432 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-14 17:00:43.434 +05:30 [INF] Calculated investment amount: 96.25.
2025-05-14 17:00:43.436 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 17:00:43.438 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-14 17:00:43.442 +05:30 [INF] Calculated investment amount: 58.98.
2025-05-14 17:00:43.443 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-14 17:00:43.446 +05:30 [INF] Calculated investment amount: 57.98.
2025-05-14 17:00:43.447 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 17:00:43.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-14 17:00:43.453 +05:30 [INF] Calculated investment amount: 58.94.
2025-05-14 17:00:43.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-14 17:00:43.458 +05:30 [INF] Calculated investment amount: 65.75.
2025-05-14 17:00:43.458 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 17:00:43.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-14 17:00:43.463 +05:30 [INF] Calculated investment amount: 75.64.
2025-05-14 17:00:43.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-14 17:00:43.466 +05:30 [INF] Calculated investment amount: 79.18.
2025-05-14 17:00:43.467 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 17:00:43.468 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-14 17:00:43.470 +05:30 [INF] Calculated investment amount: 118.18.
2025-05-14 17:00:43.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-14 17:00:43.478 +05:30 [INF] Calculated investment amount: 123.23.
2025-05-14 17:00:43.479 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 17:00:43.480 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-14 17:00:43.482 +05:30 [INF] Calculated investment amount: 86.77.
2025-05-14 17:00:43.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-14 17:00:43.493 +05:30 [INF] Calculated investment amount: 91.4.
2025-05-14 17:00:43.495 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 17:00:43.496 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-14 17:00:43.498 +05:30 [INF] Calculated investment amount: 117.52.
2025-05-14 17:00:43.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-14 17:00:43.503 +05:30 [INF] Calculated investment amount: 115.29.
2025-05-14 17:00:43.514 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 17:00:43.517 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":7.29,"InvestmentAmount":452.65},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":6.71,"InvestmentAmount":432.12}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.59,"InvestmentAmount":310.21},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.91,"InvestmentAmount":291.38}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":5.4,"InvestmentAmount":280.46},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.1,"InvestmentAmount":274.37}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":6.12,"InvestmentAmount":479.52},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.88,"InvestmentAmount":465.13}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":7.83,"InvestmentAmount":563.52},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":8.17,"InvestmentAmount":579.8}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.89,"InvestmentAmount":450.66},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.11,"InvestmentAmount":463.09}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":151.81},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":131.88}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":91.45},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":96.78}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":109.73},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":96.25}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":58.98},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":57.98}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":58.94},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":65.75}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":75.64},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":79.18}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":118.18},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":123.23}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":86.77},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":91.4}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":117.52},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":115.29}}}}
2025-05-14 17:00:43.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:00:43.531 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 332.1931ms
2025-05-14 17:00:43.538 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 17:00:43.539 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 200 null application/json; charset=utf-8 359.2586ms
2025-05-14 17:00:43.558 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:00:43.565 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:00:43.565 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.573 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.593 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 35.1103ms
2025-05-14 17:00:43.598 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 33.1303ms
2025-05-14 17:00:43.623 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:00:43.628 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:00:43.639 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.639 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:00:43.644 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:00:43.645 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:00:43.651 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:00:43.652 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:00:43.660 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:00:43.663 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:00:43.663 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:00:43.670 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:00:43.670 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:00:43.677 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:00:43.680 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 21.618ms
2025-05-14 17:00:43.681 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 20.5898ms
2025-05-14 17:00:43.683 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:00:43.685 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:00:43.690 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 61.5035ms
2025-05-14 17:00:43.692 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 68.015ms
2025-05-14 17:03:49.090 +05:30 [INF] Application is shutting down...
2025-05-14 17:03:54.278 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 17:03:54.421 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 17:03:54.428 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 17:03:54.430 +05:30 [INF] Hosting environment: Development
2025-05-14 17:03:54.433 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 17:10:07.894 +05:30 [INF] Application is shutting down...
2025-05-14 17:10:13.449 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 17:10:13.581 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 17:10:13.587 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 17:10:13.590 +05:30 [INF] Hosting environment: Development
2025-05-14 17:10:13.594 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 17:11:54.540 +05:30 [INF] Application is shutting down...
2025-05-14 17:11:59.471 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 17:11:59.606 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 17:11:59.613 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 17:11:59.615 +05:30 [INF] Hosting environment: Development
2025-05-14 17:11:59.620 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 17:12:13.363 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-14 17:12:13.654 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 294.1277ms
2025-05-14 17:12:14.299 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-14 17:12:14.614 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 315.6365ms
2025-05-14 17:12:21.734 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:12:21.758 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:12:21.807 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:12:21.817 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:12:21.839 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:12:21.995 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:12:22.054 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 237.0221ms
2025-05-14 17:12:22.058 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:12:22.062 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 328.0359ms
2025-05-14 17:13:16.002 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 117
2025-05-14 17:13:16.015 +05:30 [INF] CORS policy execution failed.
2025-05-14 17:13:16.017 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 17:13:16.021 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 17:13:16.039 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:13:16.153 +05:30 [INF] Starting allocation calculation...
2025-05-14 17:13:16.184 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-14 17:13:16.190 +05:30 [INF] Looking up base allocation for key: Low+Mod
2025-05-14 17:13:16.198 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":50,"commodities":10,"cash":15,"realEstate":5}
2025-05-14 17:13:16.204 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-14 17:13:16.208 +05:30 [INF] Age adjustments found: {}
2025-05-14 17:13:16.214 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-14 17:13:16.227 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-14 17:13:16.273 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-14 17:13:16.279 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":22.5,"Corp Bonds":9,"Fixed Dep":13.5}
2025-05-14 17:13:16.283 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 17:13:16.291 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}
2025-05-14 17:13:16.296 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 17:13:16.305 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-14 17:13:16.314 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":22.5,"Corp Bonds":9,"Fixed Dep":13.5}
2025-05-14 17:13:16.319 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-14 17:13:16.329 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}
2025-05-14 17:13:16.333 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-14 17:13:16.384 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":45,"subAssets":{"Gov Bonds":22.5,"Corp Bonds":9,"Fixed Dep":13.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 17:13:16.415 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-14 17:13:16.421 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":45,"subAssets":{"Gov Bonds":22.5,"Corp Bonds":9,"Fixed Dep":13.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":15,"subAssets":{"Liquid Mutual Funds":3.46,"Savings Acc":5.77,"T. Bill":5.77}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-14 17:13:16.431 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-14 17:13:16.444 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 398.7966ms
2025-05-14 17:13:16.450 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-14 17:13:16.454 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 452.1804ms
2025-05-14 17:13:59.317 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - application/json 818
2025-05-14 17:13:59.331 +05:30 [INF] CORS policy execution failed.
2025-05-14 17:13:59.333 +05:30 [INF] Request origin http://localhost:5251 does not have permission to access the resource.
2025-05-14 17:13:59.336 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 17:13:59.344 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:13:59.388 +05:30 [INF] Starting product allocation calculation.
2025-05-14 17:13:59.397 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-14 17:13:59.404 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-14 17:13:59.481 +05:30 [INF] Product data loaded successfully.
2025-05-14 17:13:59.500 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-14 17:13:59.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-14 17:13:59.519 +05:30 [INF] Calculated investment amount: 4446.42.
2025-05-14 17:13:59.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 17:13:59.532 +05:30 [INF] Calculated investment amount: 4212.46.
2025-05-14 17:13:59.535 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-14 17:13:59.543 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.66, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-14 17:13:59.549 +05:30 [INF] Calculated investment amount: 1660.62.
2025-05-14 17:13:59.556 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.34, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-14 17:13:59.562 +05:30 [INF] Calculated investment amount: 1541.43.
2025-05-14 17:13:59.570 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-14 17:13:59.573 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-14 17:13:59.583 +05:30 [INF] Calculated investment amount: 763.78.
2025-05-14 17:13:59.586 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-14 17:13:59.595 +05:30 [INF] Calculated investment amount: 736.88.
2025-05-14 17:13:59.599 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-14 17:13:59.607 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.48, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 17:13:59.618 +05:30 [INF] Calculated investment amount: 9444.62.
2025-05-14 17:13:59.621 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.02, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-14 17:13:59.631 +05:30 [INF] Calculated investment amount: 9135.59.
2025-05-14 17:13:59.635 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-14 17:13:59.643 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.4, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-14 17:13:59.653 +05:30 [INF] Calculated investment amount: 3381.95.
2025-05-14 17:13:59.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.6, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-14 17:13:59.661 +05:30 [INF] Calculated investment amount: 3496.23.
2025-05-14 17:13:59.669 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-14 17:13:59.672 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.63, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-14 17:13:59.682 +05:30 [INF] Calculated investment amount: 5351.85.
2025-05-14 17:13:59.685 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.87, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-14 17:13:59.695 +05:30 [INF] Calculated investment amount: 5503.73.
2025-05-14 17:13:59.698 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-14 17:13:59.706 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-14 17:13:59.712 +05:30 [INF] Calculated investment amount: 2562.13.
2025-05-14 17:13:59.719 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-14 17:13:59.729 +05:30 [INF] Calculated investment amount: 2185.1.
2025-05-14 17:13:59.732 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-14 17:13:59.739 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-14 17:13:59.743 +05:30 [INF] Calculated investment amount: 829.83.
2025-05-14 17:13:59.745 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-14 17:13:59.752 +05:30 [INF] Calculated investment amount: 891.81.
2025-05-14 17:13:59.754 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-14 17:13:59.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-14 17:13:59.757 +05:30 [INF] Calculated investment amount: 497.89.
2025-05-14 17:13:59.761 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-14 17:13:59.764 +05:30 [INF] Calculated investment amount: 427.22.
2025-05-14 17:13:59.766 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-14 17:13:59.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.76, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-14 17:13:59.779 +05:30 [INF] Calculated investment amount: 1436.98.
2025-05-14 17:13:59.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-14 17:13:59.790 +05:30 [INF] Calculated investment amount: 1398.59.
2025-05-14 17:13:59.794 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-14 17:13:59.797 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.69, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-14 17:13:59.801 +05:30 [INF] Calculated investment amount: 2344.18.
2025-05-14 17:13:59.805 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.08, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-14 17:13:59.808 +05:30 [INF] Calculated investment amount: 2632.8.
2025-05-14 17:13:59.810 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-14 17:13:59.822 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.8, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-14 17:13:59.835 +05:30 [INF] Calculated investment amount: 2294.81.
2025-05-14 17:13:59.838 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.97, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-14 17:13:59.852 +05:30 [INF] Calculated investment amount: 2406.55.
2025-05-14 17:13:59.866 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-14 17:13:59.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 4.
2025-05-14 17:13:59.889 +05:30 [INF] Calculated investment amount: 1372.29.
2025-05-14 17:13:59.892 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 4.
2025-05-14 17:13:59.902 +05:30 [INF] Calculated investment amount: 1439.84.
2025-05-14 17:13:59.905 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-14 17:13:59.911 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 4.
2025-05-14 17:13:59.916 +05:30 [INF] Calculated investment amount: 1473.59.
2025-05-14 17:13:59.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 4.
2025-05-14 17:13:59.928 +05:30 [INF] Calculated investment amount: 1576.69.
2025-05-14 17:13:59.930 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-14 17:13:59.939 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 4.
2025-05-14 17:13:59.944 +05:30 [INF] Calculated investment amount: 691.63.
2025-05-14 17:13:59.950 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 4.
2025-05-14 17:13:59.955 +05:30 [INF] Calculated investment amount: 674.24.
2025-05-14 17:13:59.969 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-14 17:13:59.973 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":6.51,"InvestmentAmount":4446.42},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":5.99,"InvestmentAmount":4212.46}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":2.66,"InvestmentAmount":1660.62},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":2.34,"InvestmentAmount":1541.43}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":1.29,"InvestmentAmount":763.78},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":1.21,"InvestmentAmount":736.88}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":11.48,"InvestmentAmount":9444.62},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":11.02,"InvestmentAmount":9135.59}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":4.4,"InvestmentAmount":3381.95},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":4.6,"InvestmentAmount":3496.23}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":6.63,"InvestmentAmount":5351.85},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.87,"InvestmentAmount":5503.73}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":3.46,"InvestmentAmount":2562.13},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":2.79,"InvestmentAmount":2185.1}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.18,"InvestmentAmount":829.83},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.32,"InvestmentAmount":891.81}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":0.69,"InvestmentAmount":497.89},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":0.56,"InvestmentAmount":427.22}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":1.76,"InvestmentAmount":1436.98},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":1.7,"InvestmentAmount":1398.59}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":2.69,"InvestmentAmount":2344.18},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":3.08,"InvestmentAmount":2632.8}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":2.8,"InvestmentAmount":2294.81},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":2.97,"InvestmentAmount":2406.55}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.93,"InvestmentAmount":1372.29},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":2.07,"InvestmentAmount":1439.84}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.91,"InvestmentAmount":1473.59},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":2.09,"InvestmentAmount":1576.69}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.02,"InvestmentAmount":691.63},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":0.98,"InvestmentAmount":674.24}}}}
2025-05-14 17:13:59.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:13:59.991 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 644.0006ms
2025-05-14 17:13:59.994 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-14 17:14:00.002 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 200 null application/json; charset=utf-8 684.249ms
2025-05-14 17:14:09.271 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:14:09.288 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:14:09.291 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:14:09.299 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:14:09.302 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:14:09.305 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:14:09.312 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 14.9744ms
2025-05-14 17:14:09.323 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:14:09.327 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 55.8549ms
2025-05-14 17:15:01.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:15:01.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:15:01.420 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:15:01.432 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:15:01.434 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 21.9321ms
2025-05-14 17:15:01.434 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 21.8484ms
2025-05-14 17:15:01.445 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:15:01.452 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:15:01.585 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:15:01.585 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:15:01.588 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:15:01.592 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:15:01.594 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:15:01.602 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:15:01.605 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:15:01.612 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:15:01.617 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:15:01.618 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:15:01.620 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 17.6255ms
2025-05-14 17:15:01.629 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:15:01.630 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:15:01.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:15:01.633 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 187.8859ms
2025-05-14 17:15:01.638 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 23.2625ms
2025-05-14 17:15:01.649 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:15:01.651 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 198.2611ms
2025-05-14 17:16:26.597 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:16:26.600 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:16:26.613 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:26.616 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:26.618 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 20.8577ms
2025-05-14 17:16:26.623 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 23.294ms
2025-05-14 17:16:26.642 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:16:26.629 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:16:26.653 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:26.661 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:26.666 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:16:26.673 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:16:26.675 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:16:26.676 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:16:26.680 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:16:26.680 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:16:26.686 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:16:26.687 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:16:26.688 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:16:26.689 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:16:26.690 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.9895ms
2025-05-14 17:16:26.693 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 12.4759ms
2025-05-14 17:16:26.700 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:16:26.701 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:16:26.702 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 59.9366ms
2025-05-14 17:16:26.704 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 74.4804ms
2025-05-14 17:16:55.872 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:16:55.876 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:16:55.878 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:55.882 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:55.883 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.1752ms
2025-05-14 17:16:55.889 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 12.4426ms
2025-05-14 17:16:55.896 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:16:55.903 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:16:55.912 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:55.916 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:16:55.916 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:16:55.917 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:16:55.919 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:16:55.925 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:16:55.927 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:16:55.930 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:16:55.932 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:16:55.940 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:16:55.940 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:16:55.942 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:16:55.944 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.9984ms
2025-05-14 17:16:55.952 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 22.1032ms
2025-05-14 17:16:55.954 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:16:55.956 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:16:55.958 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 61.5375ms
2025-05-14 17:16:55.964 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 61.0246ms
2025-05-14 17:17:11.541 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:11.544 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:11.550 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:11.556 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:11.557 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 15.7444ms
2025-05-14 17:17:11.558 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 13.4968ms
2025-05-14 17:17:11.569 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:11.586 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:11.590 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:11.616 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:11.617 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:11.618 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:11.619 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:17:11.622 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:17:11.624 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:17:11.633 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:17:11.635 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:17:11.636 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:17:11.637 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:11.638 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:11.640 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.4154ms
2025-05-14 17:17:11.649 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:11.647 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 13.9937ms
2025-05-14 17:17:11.650 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 81.1381ms
2025-05-14 17:17:11.652 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:11.665 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 79.1128ms
2025-05-14 17:17:23.758 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:23.763 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:23.780 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:23.796 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:23.797 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 38.7913ms
2025-05-14 17:17:23.802 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 39.0066ms
2025-05-14 17:17:23.810 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:23.821 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:23.825 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:23.837 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:23.838 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:23.844 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:23.846 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:17:23.848 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:17:23.857 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:17:23.859 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:17:23.862 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:17:23.863 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:17:23.864 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:23.865 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:23.873 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 16.224ms
2025-05-14 17:17:23.875 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.3362ms
2025-05-14 17:17:23.877 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:23.879 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:23.890 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 69.0771ms
2025-05-14 17:17:23.887 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 77.0261ms
2025-05-14 17:17:45.896 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:45.899 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:45.904 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:45.907 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:45.914 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 18.0573ms
2025-05-14 17:17:45.915 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 16.366ms
2025-05-14 17:17:45.921 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:17:45.929 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:17:45.932 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:45.944 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:17:45.944 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:45.945 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:45.950 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:17:45.951 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:17:45.957 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:17:45.966 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:17:45.972 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:17:45.972 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:17:45.976 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:45.977 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:17:45.979 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.8708ms
2025-05-14 17:17:45.982 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 25.7722ms
2025-05-14 17:17:45.988 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:17:45.991 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:17:45.992 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 63.6546ms
2025-05-14 17:17:45.994 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 72.83ms
2025-05-14 17:18:00.983 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:18:00.987 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:18:00.990 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:00.994 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:00.999 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 15.6075ms
2025-05-14 17:18:01.000 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 12.7657ms
2025-05-14 17:18:01.029 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:18:01.029 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:18:01.050 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:01.058 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:01.059 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:18:01.063 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:18:01.066 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:18:01.071 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:18:01.085 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:18:01.088 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:18:01.090 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:18:01.091 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:18:01.092 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:18:01.099 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:18:01.100 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.0115ms
2025-05-14 17:18:01.111 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:18:01.113 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 84.2178ms
2025-05-14 17:18:01.103 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.1942ms
2025-05-14 17:18:01.144 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:18:01.146 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 116.7128ms
2025-05-14 17:18:28.593 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:18:28.594 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:18:28.601 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:28.603 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:28.604 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.72ms
2025-05-14 17:18:28.611 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 16.8667ms
2025-05-14 17:18:28.619 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 17:18:28.624 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 17:18:28.645 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:28.651 +05:30 [INF] CORS policy execution successful.
2025-05-14 17:18:28.651 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:18:28.652 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:18:28.654 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 17:18:28.655 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 17:18:28.667 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 17:18:28.670 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 17:18:28.672 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 17:18:28.673 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 17:18:28.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:18:28.680 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 17:18:28.681 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.6359ms
2025-05-14 17:18:28.683 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 13.2485ms
2025-05-14 17:18:28.684 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 17:18:28.686 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 17:18:28.693 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 74.1396ms
2025-05-14 17:18:28.694 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 69.9818ms
2025-05-14 17:25:19.997 +05:30 [INF] Application is shutting down...
2025-05-14 21:48:37.531 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 21:48:37.705 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 21:48:37.728 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 21:48:37.733 +05:30 [INF] Hosting environment: Development
2025-05-14 21:48:37.739 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 21:48:54.545 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 21:48:54.546 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 21:48:54.843 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:48:54.843 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:48:54.892 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 352.2135ms
2025-05-14 21:48:54.892 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 352.2149ms
2025-05-14 21:48:54.922 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-14 21:48:54.922 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-14 21:48:55.224 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:18:55 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 21:48:55.224 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:18:55 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 21:48:55.291 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:18:55 PM'.
2025-05-14 21:48:55.291 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:18:55 PM'.
2025-05-14 21:48:55.312 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:48:55.312 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:48:55.332 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 21:48:55.332 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 21:48:55.486 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-14 21:48:55.486 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 21:48:55.540 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 21:48:55.539 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-14 21:48:55.575 +05:30 [INF] Final allocation JSON read successfully.
2025-05-14 21:48:55.579 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 21:48:55.829 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 21:48:55.861 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 21:48:55.919 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 409.2591ms
2025-05-14 21:48:55.920 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 414.3043ms
2025-05-14 21:48:55.924 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-14 21:48:55.926 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 21:48:55.930 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 1008.1294ms
2025-05-14 21:48:55.931 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 1008.4588ms
2025-05-14 21:49:03.439 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-14 21:49:03.453 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:49:03.455 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 16.2983ms
2025-05-14 21:49:03.465 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-14 21:49:03.473 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:19:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-14 21:49:03.479 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/14/2025 12:24:53 PM', Current time (UTC): '5/14/2025 4:19:03 PM'.
2025-05-14 21:49:03.484 +05:30 [INF] CORS policy execution successful.
2025-05-14 21:49:03.486 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-14 21:49:03.498 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-14 21:49:03.522 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-14 21:49:03.528 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 26.6087ms
2025-05-14 21:49:03.531 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-14 21:49:03.533 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 67.6114ms
2025-05-14 22:58:35.375 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-14 22:58:35.437 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 62.3399ms
2025-05-14 22:58:35.690 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-14 22:58:35.816 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 125.5606ms
2025-05-14 22:58:40.251 +05:30 [INF] Application is shutting down...
2025-05-14 22:58:50.558 +05:30 [INF] User profile is available. Using 'C:\Users\divya.t1\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-14 22:58:50.697 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-14 22:58:50.704 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-14 22:58:50.706 +05:30 [INF] Hosting environment: Development
2025-05-14 22:58:50.707 +05:30 [INF] Content root path: C:\Users\divya.t1\Desktop\7-5-25-WisVest-Backend-main
2025-05-14 22:58:54.315 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/index.html - null null
2025-05-14 22:58:54.451 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/index.html - 200 null text/html;charset=utf-8 136.9302ms
2025-05-14 22:58:54.574 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - null null
2025-05-14 22:58:54.701 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 126.4984ms
2025-05-14 22:59:30.066 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations?sortBy=AnnualReturn&sortDirection=asc - null null
2025-05-14 22:59:30.080 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 22:59:30.112 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations(System.String, System.String) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 22:59:30.137 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 22:59:30.143 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 22:59:30.190 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 22:59:30.210 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 91.5649ms
2025-05-14 22:59:30.213 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 22:59:30.215 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations?sortBy=AnnualReturn&sortDirection=asc - 200 null application/json; charset=utf-8 148.523ms
2025-05-14 22:59:55.396 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations?sortBy=annual_return&sortDirection=asc - null null
2025-05-14 22:59:55.405 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 22:59:55.408 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations(System.String, System.String) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-14 22:59:55.413 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-14 22:59:55.415 +05:30 [INF] Product allocations JSON read successfully.
2025-05-14 22:59:55.417 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-14 22:59:55.419 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.1552ms
2025-05-14 22:59:55.421 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-14 22:59:55.422 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations?sortBy=annual_return&sortDirection=asc - 200 null application/json; charset=utf-8 25.3823ms
