2025-05-18 12:04:51.838 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 12:04:52.928 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 12:04:53.791 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 12:04:54.441 +05:30 [INF] Hosting environment: Development
2025-05-18 12:04:55.029 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 12:06:03.352 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - null null
2025-05-18 12:06:03.427 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:03.435 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - 204 null null 87.1691ms
2025-05-18 12:06:03.441 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Auth/register - application/json 101
2025-05-18 12:06:03.530 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/16/2025 4:55:58 PM', Current time (UTC): '5/18/2025 6:36:03 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-18 12:06:03.557 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/16/2025 4:55:58 PM', Current time (UTC): '5/18/2025 6:36:03 AM'.
2025-05-18 12:06:03.562 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:03.567 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 12:06:03.604 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(UserRegisterRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 12:06:03.858 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 12:06:03.880 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Register (WisVest) in 266.7644ms
2025-05-18 12:06:03.881 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 12:06:03.882 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Auth/register - 200 null application/json; charset=utf-8 440.5589ms
2025-05-18 12:06:11.486 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 12:06:11.492 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:11.493 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 6.8242ms
2025-05-18 12:06:11.495 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 60
2025-05-18 12:06:11.498 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/16/2025 4:55:58 PM', Current time (UTC): '5/18/2025 6:36:11 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-18 12:06:11.510 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/16/2025 4:55:58 PM', Current time (UTC): '5/18/2025 6:36:11 AM'.
2025-05-18 12:06:11.512 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:11.513 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 12:06:11.519 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 12:06:11.628 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 12:06:11.631 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 108.4835ms
2025-05-18 12:06:11.632 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 12:06:11.632 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 137.4001ms
2025-05-18 12:06:15.241 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 12:06:15.243 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:15.244 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.9437ms
2025-05-18 12:06:15.249 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 12:06:15.271 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:15.273 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 12:06:15.283 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 12:06:15.391 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 12:06:15.398 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 110.9834ms
2025-05-18 12:06:15.399 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 12:06:15.402 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 152.3972ms
2025-05-18 12:06:44.829 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 12:06:44.835 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:44.836 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.1945ms
2025-05-18 12:06:44.840 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 12:06:44.844 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:44.845 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:06:44.858 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 12:06:44.892 +05:30 [INF] Starting allocation calculation...
2025-05-18 12:06:44.962 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 12:06:44.963 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 12:06:44.969 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 12:06:44.972 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 12:06:44.973 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 12:06:44.973 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 12:06:44.976 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 12:06:45.011 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:06:45.013 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:06:45.015 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:06:45.016 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:06:45.017 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:06:45.018 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:06:45.019 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:06:45.020 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:06:45.021 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:06:45.022 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:06:45.042 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:06:45.052 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 12:06:45.053 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:06:45.058 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 12:06:45.062 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 203.2067ms
2025-05-18 12:06:45.064 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:06:45.065 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 225.1431ms
2025-05-18 12:06:45.071 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - null null
2025-05-18 12:06:45.074 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:45.074 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 204 null null 3.083ms
2025-05-18 12:06:45.076 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - application/json 515
2025-05-18 12:06:45.078 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:45.079 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:06:45.091 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 12:06:45.114 +05:30 [INF] Starting product allocation calculation.
2025-05-18 12:06:45.118 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-18 12:06:45.121 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-18 12:06:45.137 +05:30 [INF] Product data loaded successfully.
2025-05-18 12:06:45.140 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-18 12:06:45.142 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-18 12:06:45.143 +05:30 [INF] Calculated investment amount: 5867.09.
2025-05-18 12:06:45.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:06:45.146 +05:30 [INF] Calculated investment amount: 5562.7.
2025-05-18 12:06:45.146 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-18 12:06:45.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-18 12:06:45.148 +05:30 [INF] Calculated investment amount: 4114.1.
2025-05-18 12:06:45.149 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.79, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-18 12:06:45.151 +05:30 [INF] Calculated investment amount: 3814.05.
2025-05-18 12:06:45.152 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-18 12:06:45.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.37, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-18 12:06:45.153 +05:30 [INF] Calculated investment amount: 3771.55.
2025-05-18 12:06:45.153 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.01, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-18 12:06:45.154 +05:30 [INF] Calculated investment amount: 3660.06.
2025-05-18 12:06:45.154 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-18 12:06:45.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:06:45.156 +05:30 [INF] Calculated investment amount: 2682.01.
2025-05-18 12:06:45.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.12, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-18 12:06:45.157 +05:30 [INF] Calculated investment amount: 2586.48.
2025-05-18 12:06:45.158 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-18 12:06:45.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-18 12:06:45.159 +05:30 [INF] Calculated investment amount: 3197.48.
2025-05-18 12:06:45.160 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-18 12:06:45.161 +05:30 [INF] Calculated investment amount: 3298.62.
2025-05-18 12:06:45.162 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-18 12:06:45.164 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-18 12:06:45.166 +05:30 [INF] Calculated investment amount: 2526.59.
2025-05-18 12:06:45.166 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.25, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-18 12:06:45.167 +05:30 [INF] Calculated investment amount: 2603.65.
2025-05-18 12:06:45.168 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-18 12:06:45.169 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-18 12:06:45.170 +05:30 [INF] Calculated investment amount: 207.34.
2025-05-18 12:06:45.171 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-18 12:06:45.173 +05:30 [INF] Calculated investment amount: 172.3.
2025-05-18 12:06:45.173 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-18 12:06:45.174 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:06:45.177 +05:30 [INF] Calculated investment amount: 126.58.
2025-05-18 12:06:45.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-18 12:06:45.181 +05:30 [INF] Calculated investment amount: 135.12.
2025-05-18 12:06:45.182 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-18 12:06:45.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-18 12:06:45.184 +05:30 [INF] Calculated investment amount: 151.53.
2025-05-18 12:06:45.185 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-18 12:06:45.186 +05:30 [INF] Calculated investment amount: 129.69.
2025-05-18 12:06:45.186 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-18 12:06:45.187 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-18 12:06:45.188 +05:30 [INF] Calculated investment amount: 4996.76.
2025-05-18 12:06:45.188 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:06:45.189 +05:30 [INF] Calculated investment amount: 4837.49.
2025-05-18 12:06:45.189 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-18 12:06:45.190 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-18 12:06:45.200 +05:30 [INF] Calculated investment amount: 4880.08.
2025-05-18 12:06:45.202 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-18 12:06:45.219 +05:30 [INF] Calculated investment amount: 5470.75.
2025-05-18 12:06:45.220 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-18 12:06:45.220 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-18 12:06:45.238 +05:30 [INF] Calculated investment amount: 6368.1.
2025-05-18 12:06:45.239 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-18 12:06:45.241 +05:30 [INF] Calculated investment amount: 6668.64.
2025-05-18 12:06:45.242 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-18 12:06:45.244 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
2025-05-18 12:06:45.275 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
2025-05-18 12:06:45.276 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 106
2025-05-18 12:06:45.278 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-18 12:06:45.279 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 186.4591ms
2025-05-18 12:06:45.280 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:06:45.280 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 500 null text/plain; charset=utf-8 204.2772ms
2025-05-18 12:06:51.470 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 12:06:51.479 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:51.484 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 13.9783ms
2025-05-18 12:06:51.493 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 12:06:51.503 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:51.507 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:06:51.509 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 12:06:51.513 +05:30 [INF] Starting allocation calculation...
2025-05-18 12:06:51.525 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 12:06:51.527 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 12:06:51.529 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 12:06:51.532 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 12:06:51.535 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 12:06:51.536 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 12:06:51.538 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 12:06:51.540 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:06:51.540 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:06:51.541 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:06:51.542 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:06:51.543 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:06:51.544 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:06:51.545 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:06:51.545 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:06:51.546 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:06:51.546 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:06:51.548 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:06:51.558 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 12:06:51.558 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:06:51.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 12:06:51.560 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.6486ms
2025-05-18 12:06:51.561 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:06:51.562 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 69.166ms
2025-05-18 12:06:51.566 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - null null
2025-05-18 12:06:51.572 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:51.572 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 204 null null 6.0969ms
2025-05-18 12:06:51.574 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - application/json 515
2025-05-18 12:06:51.575 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:06:51.575 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:06:51.576 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 12:06:51.578 +05:30 [INF] Starting product allocation calculation.
2025-05-18 12:06:51.578 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-18 12:06:51.579 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-18 12:06:51.591 +05:30 [INF] Product data loaded successfully.
2025-05-18 12:06:51.591 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-18 12:06:51.592 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-18 12:06:51.593 +05:30 [INF] Calculated investment amount: 5867.09.
2025-05-18 12:06:51.593 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:06:51.594 +05:30 [INF] Calculated investment amount: 5562.7.
2025-05-18 12:06:51.595 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-18 12:06:51.595 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-18 12:06:51.596 +05:30 [INF] Calculated investment amount: 4114.1.
2025-05-18 12:06:51.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.79, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-18 12:06:51.601 +05:30 [INF] Calculated investment amount: 3814.05.
2025-05-18 12:06:51.602 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-18 12:06:51.603 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.37, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-18 12:06:51.604 +05:30 [INF] Calculated investment amount: 3771.55.
2025-05-18 12:06:51.605 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.01, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-18 12:06:51.606 +05:30 [INF] Calculated investment amount: 3660.06.
2025-05-18 12:06:51.607 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-18 12:06:51.607 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:06:51.608 +05:30 [INF] Calculated investment amount: 2682.01.
2025-05-18 12:06:51.609 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.12, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-18 12:06:51.609 +05:30 [INF] Calculated investment amount: 2586.48.
2025-05-18 12:06:51.609 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-18 12:06:51.610 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-18 12:06:51.611 +05:30 [INF] Calculated investment amount: 3197.48.
2025-05-18 12:06:51.611 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-18 12:06:51.611 +05:30 [INF] Calculated investment amount: 3298.62.
2025-05-18 12:06:51.612 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-18 12:06:51.612 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-18 12:06:51.615 +05:30 [INF] Calculated investment amount: 2526.59.
2025-05-18 12:06:51.618 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.25, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-18 12:06:51.619 +05:30 [INF] Calculated investment amount: 2603.65.
2025-05-18 12:06:51.620 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-18 12:06:51.621 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-18 12:06:51.621 +05:30 [INF] Calculated investment amount: 207.34.
2025-05-18 12:06:51.622 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-18 12:06:51.622 +05:30 [INF] Calculated investment amount: 172.3.
2025-05-18 12:06:51.623 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-18 12:06:51.623 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:06:51.624 +05:30 [INF] Calculated investment amount: 126.58.
2025-05-18 12:06:51.624 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-18 12:06:51.625 +05:30 [INF] Calculated investment amount: 135.12.
2025-05-18 12:06:51.625 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-18 12:06:51.626 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-18 12:06:51.627 +05:30 [INF] Calculated investment amount: 151.53.
2025-05-18 12:06:51.627 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-18 12:06:51.628 +05:30 [INF] Calculated investment amount: 129.69.
2025-05-18 12:06:51.628 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-18 12:06:51.629 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-18 12:06:51.629 +05:30 [INF] Calculated investment amount: 4996.76.
2025-05-18 12:06:51.633 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:06:51.637 +05:30 [INF] Calculated investment amount: 4837.49.
2025-05-18 12:06:51.637 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-18 12:06:51.638 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-18 12:06:51.638 +05:30 [INF] Calculated investment amount: 4880.08.
2025-05-18 12:06:51.639 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-18 12:06:51.640 +05:30 [INF] Calculated investment amount: 5470.75.
2025-05-18 12:06:51.640 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-18 12:06:51.640 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-18 12:06:51.641 +05:30 [INF] Calculated investment amount: 6368.1.
2025-05-18 12:06:51.641 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-18 12:06:51.642 +05:30 [INF] Calculated investment amount: 6668.64.
2025-05-18 12:06:51.643 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-18 12:06:51.643 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
2025-05-18 12:06:51.644 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
2025-05-18 12:06:51.646 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 106
2025-05-18 12:06:51.651 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-18 12:06:51.653 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 75.9422ms
2025-05-18 12:06:51.654 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:06:51.655 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 500 null text/plain; charset=utf-8 80.9521ms
2025-05-18 12:07:13.971 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 12:07:13.973 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:13.974 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 2.6091ms
2025-05-18 12:07:13.976 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 12:07:13.979 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:13.979 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:07:13.980 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 12:07:13.987 +05:30 [INF] Starting allocation calculation...
2025-05-18 12:07:13.992 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 12:07:13.993 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 12:07:13.994 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 12:07:13.997 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 12:07:13.998 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 12:07:14.000 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 12:07:14.002 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 12:07:14.004 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:07:14.004 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:07:14.006 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:07:14.007 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:07:14.008 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:07:14.009 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 12:07:14.009 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 12:07:14.011 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 12:07:14.011 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 12:07:14.012 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 12:07:14.014 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:07:14.023 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 12:07:14.024 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 12:07:14.025 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 12:07:14.028 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 44.7788ms
2025-05-18 12:07:14.029 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:07:14.030 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 54.102ms
2025-05-18 12:07:14.034 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - null null
2025-05-18 12:07:14.035 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:14.036 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 204 null null 2.2251ms
2025-05-18 12:07:14.039 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - application/json 515
2025-05-18 12:07:14.040 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:14.041 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:07:14.041 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 12:07:14.044 +05:30 [INF] Starting product allocation calculation.
2025-05-18 12:07:14.044 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-18 12:07:14.046 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-18 12:07:14.057 +05:30 [INF] Product data loaded successfully.
2025-05-18 12:07:14.057 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-18 12:07:14.058 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 4.
2025-05-18 12:07:14.059 +05:30 [INF] Calculated investment amount: 5867.09.
2025-05-18 12:07:14.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:07:14.060 +05:30 [INF] Calculated investment amount: 5562.7.
2025-05-18 12:07:14.061 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-18 12:07:14.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 4.
2025-05-18 12:07:14.064 +05:30 [INF] Calculated investment amount: 4114.1.
2025-05-18 12:07:14.065 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.79, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 4.
2025-05-18 12:07:14.066 +05:30 [INF] Calculated investment amount: 3814.05.
2025-05-18 12:07:14.066 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-18 12:07:14.067 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.37, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 4.
2025-05-18 12:07:14.069 +05:30 [INF] Calculated investment amount: 3771.55.
2025-05-18 12:07:14.070 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.01, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 4.
2025-05-18 12:07:14.071 +05:30 [INF] Calculated investment amount: 3660.06.
2025-05-18 12:07:14.071 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-18 12:07:14.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:07:14.072 +05:30 [INF] Calculated investment amount: 2682.01.
2025-05-18 12:07:14.073 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.12, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 4.
2025-05-18 12:07:14.073 +05:30 [INF] Calculated investment amount: 2586.48.
2025-05-18 12:07:14.074 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-18 12:07:14.075 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 4.
2025-05-18 12:07:14.075 +05:30 [INF] Calculated investment amount: 3197.48.
2025-05-18 12:07:14.076 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 4.
2025-05-18 12:07:14.077 +05:30 [INF] Calculated investment amount: 3298.62.
2025-05-18 12:07:14.077 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-18 12:07:14.078 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 4.
2025-05-18 12:07:14.079 +05:30 [INF] Calculated investment amount: 2526.59.
2025-05-18 12:07:14.080 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.25, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 4.
2025-05-18 12:07:14.081 +05:30 [INF] Calculated investment amount: 2603.65.
2025-05-18 12:07:14.082 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-18 12:07:14.083 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 4.
2025-05-18 12:07:14.084 +05:30 [INF] Calculated investment amount: 207.34.
2025-05-18 12:07:14.085 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 4.
2025-05-18 12:07:14.085 +05:30 [INF] Calculated investment amount: 172.3.
2025-05-18 12:07:14.086 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-18 12:07:14.086 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 4.
2025-05-18 12:07:14.087 +05:30 [INF] Calculated investment amount: 126.58.
2025-05-18 12:07:14.087 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 4.
2025-05-18 12:07:14.088 +05:30 [INF] Calculated investment amount: 135.12.
2025-05-18 12:07:14.088 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-18 12:07:14.089 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 4.
2025-05-18 12:07:14.090 +05:30 [INF] Calculated investment amount: 151.53.
2025-05-18 12:07:14.091 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 4.
2025-05-18 12:07:14.091 +05:30 [INF] Calculated investment amount: 129.69.
2025-05-18 12:07:14.092 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-18 12:07:14.092 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 4.
2025-05-18 12:07:14.093 +05:30 [INF] Calculated investment amount: 4996.76.
2025-05-18 12:07:14.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 4.
2025-05-18 12:07:14.094 +05:30 [INF] Calculated investment amount: 4837.49.
2025-05-18 12:07:14.095 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-18 12:07:14.095 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 4.
2025-05-18 12:07:14.096 +05:30 [INF] Calculated investment amount: 4880.08.
2025-05-18 12:07:14.096 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 4.
2025-05-18 12:07:14.098 +05:30 [INF] Calculated investment amount: 5470.75.
2025-05-18 12:07:14.100 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-18 12:07:14.100 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 4.
2025-05-18 12:07:14.101 +05:30 [INF] Calculated investment amount: 6368.1.
2025-05-18 12:07:14.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 4.
2025-05-18 12:07:14.102 +05:30 [INF] Calculated investment amount: 6668.64.
2025-05-18 12:07:14.103 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-18 12:07:14.103 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
2025-05-18 12:07:14.104 +05:30 [ERR] Error calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
2025-05-18 12:07:14.109 +05:30 [ERR] Error occurred while calculating product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 88
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 122
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 68
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 106
2025-05-18 12:07:14.119 +05:30 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-05-18 12:07:14.120 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 78.132ms
2025-05-18 12:07:14.121 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:07:14.122 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=4 - 500 null text/plain; charset=utf-8 83.0284ms
2025-05-18 12:07:28.183 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 12:07:28.187 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.188 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.5508ms
2025-05-18 12:07:28.190 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 12:07:28.203 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.206 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:07:28.207 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 12:07:28.210 +05:30 [INF] Starting allocation calculation...
2025-05-18 12:07:28.212 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 12:07:28.217 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 12:07:28.218 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 12:07:28.220 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 12:07:28.223 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 12:07:28.224 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 12:07:28.227 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 12:07:28.239 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-18 12:07:28.242 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 12:07:28.243 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 12:07:28.245 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 12:07:28.249 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 12:07:28.255 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}
2025-05-18 12:07:28.257 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 12:07:28.259 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 12:07:28.262 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 12:07:28.267 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 12:07:28.270 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 12:07:28.274 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 12:07:28.275 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":35,"subAssets":{"Large Cap":14,"Mid Cap":10.5,"Small Cap":10.5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 12:07:28.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 12:07:28.280 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 71.422ms
2025-05-18 12:07:28.283 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 12:07:28.285 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 94.7409ms
2025-05-18 12:07:28.292 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - null null
2025-05-18 12:07:28.297 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.300 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - 204 null null 8.5102ms
2025-05-18 12:07:28.306 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - application/json 483
2025-05-18 12:07:28.310 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.312 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:07:28.313 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 12:07:28.319 +05:30 [INF] Starting product allocation calculation.
2025-05-18 12:07:28.320 +05:30 [INF] Loading product data from JSON file: Repositories/Matrix/product_json.json
2025-05-18 12:07:28.323 +05:30 [INF] Raw JSON Content: {
  "Equity": {
    "Large Cap": [
      {
        "product_name": "BlueChip Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 10.0,
        "liquidity": "High",
        "pros": [
          "Stable returns",
          "Low risk"
        ],
        "cons": [
          "Lower growth"
        ],
        "description":"A low-risk fund investing in established blue-chip companies offering stable returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Index Fund ",
        "asset_class": "Equity",
        "sub_asset_class": "Large Cap",
        "annual_return": 9.2,
        "liquidity": "High",
        "pros": [
          "Diversified",
          "Low cost"
        ],
        "cons": [
          "Market dependent"
        ],
        "description":"Tracks major indices, providing diversified exposure with low management cost.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Mid Cap": [
      {
        "product_name": "Mid Cap Growth ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 12.5,
        "liquidity": "Medium",
        "pros": [
          "High growth potential"
        ],
        "cons": [
          "Volatile"
        ],
        "description":"Targets growing mid-sized companies with high return potential but increased risk.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "MidCap Blend ",
        "asset_class": "Equity",
        "sub_asset_class": "Mid Cap",
        "annual_return": 11.0,
        "liquidity": "Medium",
        "pros": [
          "Balanced approach"
        ],
        "cons": [
          "Moderate risk"
        ],
        "description":"Balances growth and risk by investing in a mix of mid-cap stocks.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Small Cap": [
      {
        "product_name": "SmallCap Aggressive ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 14.0,
        "liquidity": "Medium",
        "pros": [
          "High return potential"
        ],
        "cons": [
          "Very volatile"
        ],
        "description":"An aggressive fund focusing on small companies with strong growth prospects.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Emerging Companies ",
        "asset_class": "Equity",
        "sub_asset_class": "Small Cap",
        "annual_return": 13.2,
        "liquidity": "Low",
        "pros": [
          "Growth stocks"
        ],
        "cons": [
          "Liquidity risk"
        ],
        "description":"Invests in emerging businesses offering growth but with limited liquidity.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Fixed Income": {
    "Gov Bonds": [
      {
        "product_name": "Government Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 5.0,
        "liquidity": "Low",
        "pros": [
          "Very safe",
          "Guaranteed return"
        ],
        "cons": [
          "Low return"
        ],
        "description":"Safe investment backed by the government, ideal for conservative investors.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Sovereign Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Gov Bonds",
        "annual_return": 4.8,
        "liquidity": "Low",
        "pros": [
          "Stable income"
        ],
        "cons": [
          "Interest rate sensitive"
        ],
        "description":"Government-issued bond offering steady income with minimal default risk.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ],
    "Corp Bonds": [
      {
        "product_name": "Corporate Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 6.8,
        "liquidity": "Medium",
        "pros": [
          "Better return"
        ],
        "cons": [
          "Company risk"
        ],
        "description":"Offers higher returns than government bonds with moderate corporate risk.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Private Corp Bond ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Corp Bonds",
        "annual_return": 7.1,
        "liquidity": "Medium",
        "pros": [
          "Good yield"
        ],
        "cons": [
          "Credit risk"
        ],
        "description":"High-yield bond from private corporations with higher associated credit risk.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Fixed Dep": [
      {
        "product_name": "Fixed Deposit ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.5,
        "liquidity": "High",
        "pros": [
          "Capital safety"
        ],
        "cons": [
          "Low returns"
        ],
        "description":"Bank deposit product ensuring principal safety and steady but lower returns.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Bank FD ",
        "asset_class": "Fixed Income",
        "sub_asset_class": "Fixed Dep",
        "annual_return": 5.7,
        "liquidity": "High",
        "pros": [
          "Easy access"
        ],
        "cons": [
          "Taxable"
        ],
        "description":"Secure savings product offering fixed interest and high liquidity.",
        "risk_level": "Low",
        "percentage_split": 0
      }
    ]
  },
  "Real Estate": {
    "REITs": [
      {
        "product_name": "REITs Trust ",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 8.9,
        "liquidity": "Moderate",
        "pros": [
          "Stable returns",
          "Diversified portfolio"
        ],
        "cons": [
          "Sensitive to interest rates",
          "Limited growth"
        ],
        "description":"A high-liquidity REIT focusing on tax-efficient income generation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Vanguad Real Estate",
        "asset_class": "Real Estate",
        "sub_asset_class": "REITs",
        "annual_return": 9.5,
        "liquidity": "High",
        "pros": [
          "Tax efficiency",
          "Regular income"
        ],
        "cons": [
          "Market volatility",
          "Fees"
        ],
        "description":"A diversified real estate investment trust offering stable returns.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Residential Prop": [
      {
        "product_name": "Residential Scheme ",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 6.7,
        "liquidity": "Low",
        "pros": [
          "Stable income",
          "Low volatility"
        ],
        "cons": [
          "Low liquidity",
          "Maintenance costs"
        ],
        "description":"Invests in residential properties for stable rental income.",
        "risk_level": "Low",
        "percentage_split": 0
      },
      {
        "product_name": "Housing Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Residential Prop",
        "annual_return": 7.3,
        "liquidity": "Moderate",
        "pros": [
          "Tax benefits",
          "Long-term growth"
        ],
        "cons": [
          "Location dependent",
          "Slow ROI"
        ],
        "description":"Focuses on long-term growth through residential property investments.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Commercial Prop": [
      {
        "product_name": "Commercial Plaza",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 10.2,
        "liquidity": "Low",
        "pros": [
          "High rental yields",
          "Strong appreciation"
        ],
        "cons": [
          "High initial cost",
          "Vacancy risk"
        ],
        "description":"Targets high rental yields from commercial real estate.",
        "risk_level": "High",
        "percentage_split": 0
      },
      {
        "product_name": "Office Fund",
        "asset_class": "Real Estate",
        "sub_asset_class": "Commercial Prop",
        "annual_return": 9.8,
        "liquidity": "Moderate",
        "pros": [
          "Steady returns",
          "Long leases"
        ],
        "cons": [
          "Tenant turnover",
          "High maintenance"
        ],
        "description":"Invests in office spaces with steady returns and long leases.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ]
  },
  "Commodities": {
    "Precious Metals": [
      {
        "product_name": "Gold ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 7.8,
        "liquidity": "High",
        "pros": [
          "Inflation hedge",
          "Safe haven asset"
        ],
        "cons": [
          "No income generation",
          "Price volatility"
        ],
        "description":"Invests in gold to provide a hedge against inflation.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Silver Trust",
        "asset_class": "Commodities",
        "sub_asset_class": "Precious Metals",
        "annual_return": 6.3,
        "liquidity": "High",
        "pros": [
          "Alternative investment",
          "Deflation hedge"
        ],
        "cons": [
          "Subject to price swings",
          "Not income-producing"
        ],
        "description":"Focuses on silver as an alternative investment for diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ],
    "Energy": [
      {
        "product_name": "Energy Fund",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 9.2,
        "liquidity": "Medium",
        "pros": [
          "High demand",
          "Diversified exposure"
        ],
        "cons": [
          "Subject to price fluctuations",
          "Geopolitical risks"
        ],
        "description":"Provides exposure to energy markets with diversified assets.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Oil & Gas ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Energy",
        "annual_return": 10.3,
        "liquidity": "Medium",
        "pros": [
          "Strong returns",
          "Global demand"
        ],
        "cons": [
          "Environmental impact",
          "Political risk"
        ],
        "description":"Targets oil and gas sectors for strong returns and global demand.",
        "risk_level": "High",
        "percentage_split": 0
      }
    ],
    "Agriculture": [
      {
        "product_name": "Agricultural ETF",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 8.5,
        "liquidity": "Low",
        "pros": [
          "Diversification",
          "Growth potential"
        ],
        "cons": [
          "Weather dependent",
          "Global supply issues"
        ],
        "description":"Invests in agricultural commodities for growth and diversification.",
        "risk_level": "Moderate",
        "percentage_split": 0
      },
      {
        "product_name": "Crop Futures B",
        "asset_class": "Commodities",
        "sub_asset_class": "Agriculture",
        "annual_return": 7.0,
        "liquidity": "Low",
        "pros": [
          "Alternative to stocks",
          "Hedge against inflation"
        ],
        "cons": [
          "Market volatility",
          "Weather sensitivity"
        ],
        "description":"Focuses on crop futures to hedge against inflation and market volatility.",
        "risk_level": "Moderate",
        "percentage_split": 0
      }
    ]
  },
  "Cash": {
    "Liquid Mutual Funds": [

{

"product_name": "Liquid Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.2,

"liquidity": "High",

"pros": ["Quick redemption", "Low risk"],

"cons": ["Lower returns", "Short-term horizon"],
"description":"Provides quick redemption and low-risk short-term investment.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "Ultra Short Fund",

"asset_class": "Cash",

"sub_asset_class": "Liquid Mutual Funds",

"annual_return": 5.0,
"liquidity": "High",

"pros": ["Better returns than savings", "High liquidity"],

"cons": ["Interest rate risk", "Short-term only"],
"description":"Offers slightly better returns with high liquidity for short-term needs.",

"risk_level": "Low",

"percentage_split": 0

}

],

"Savings Acc": [

{

"product_name": "Standard Savings Account",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 3.5,

"liquidity": "High",

"pros": ["Very liquid", "Capital safety"],

"cons": ["Very low returns", "Not suitable for growth"],
"description":"Ensures capital safety with very high liquidity for daily needs.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "High Interest Savings",

"asset_class": "Cash",

"sub_asset_class": "Savings Acc",

"annual_return": 4.0,

"liquidity": "High",

"pros": ["Slightly higher returns", "Safe and accessible"],
"cons": ["Still low returns", "Inflation risk"],
"description":"Provides higher interest rates while maintaining accessibility and safety.",

"risk_level": "Low",

"percentage_split": 0

}

],

"T. Bill": [

{

"product_name": "91-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.1,

"liquidity": "Moderate",

"pros": ["Government backed", "Low risk"],

"cons": ["Fixed tenure", "Lower yield"],
"description":"Short-term government-backed investment with moderate liquidity.",

"risk_level": "Low",

"percentage_split": 0

},

{

"product_name": "182-Day T-Bill",

"asset_class": "Cash",

"sub_asset_class": "T. Bill",

"annual_return": 5.4,

"liquidity": "Moderate",

"pros": ["Safe investment", "Short maturity"],

"cons": ["Not liquid before maturity", "Limited returns"],
"description":"Safe short-term investment with slightly higher returns and fixed tenure.",

"risk_level": "Low",
"percentage_split": 0
}
]
}
}

2025-05-18 12:07:28.355 +05:30 [INF] Product data loaded successfully.
2025-05-18 12:07:28.356 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Large Cap.
2025-05-18 12:07:28.358 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.29, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 6.
2025-05-18 12:07:28.360 +05:30 [INF] Calculated investment amount: 4115.01.
2025-05-18 12:07:28.361 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.71, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-18 12:07:28.366 +05:30 [INF] Calculated investment amount: 3957.19.
2025-05-18 12:07:28.369 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Mid Cap.
2025-05-18 12:07:28.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.59, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 6.
2025-05-18 12:07:28.372 +05:30 [INF] Calculated investment amount: 2757.38.
2025-05-18 12:07:28.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.91, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 6.
2025-05-18 12:07:28.376 +05:30 [INF] Calculated investment amount: 2625.09.
2025-05-18 12:07:28.377 +05:30 [INF] Fetching products for Asset Class: equity, Sub-Asset Class: Small Cap.
2025-05-18 12:07:28.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.4, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 6.
2025-05-18 12:07:28.381 +05:30 [INF] Calculated investment amount: 2460.17.
2025-05-18 12:07:28.383 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.1, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 6.
2025-05-18 12:07:28.385 +05:30 [INF] Calculated investment amount: 2423.77.
2025-05-18 12:07:28.387 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Gov Bonds.
2025-05-18 12:07:28.388 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-18 12:07:28.390 +05:30 [INF] Calculated investment amount: 4566.84.
2025-05-18 12:07:28.392 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 6.
2025-05-18 12:07:28.393 +05:30 [INF] Calculated investment amount: 4438.23.
2025-05-18 12:07:28.395 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Corp Bonds.
2025-05-18 12:07:28.401 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 6.
2025-05-18 12:07:28.403 +05:30 [INF] Calculated investment amount: 5276.36.
2025-05-18 12:07:28.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 6.
2025-05-18 12:07:28.406 +05:30 [INF] Calculated investment amount: 5413.59.
2025-05-18 12:07:28.408 +05:30 [INF] Fetching products for Asset Class: fixedincome, Sub-Asset Class: Fixed Dep.
2025-05-18 12:07:28.409 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 6.
2025-05-18 12:07:28.412 +05:30 [INF] Calculated investment amount: 4271.7.
2025-05-18 12:07:28.417 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 6.
2025-05-18 12:07:28.419 +05:30 [INF] Calculated investment amount: 4381.18.
2025-05-18 12:07:28.421 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Precious Metals.
2025-05-18 12:07:28.422 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 6.
2025-05-18 12:07:28.425 +05:30 [INF] Calculated investment amount: 1408.25.
2025-05-18 12:07:28.427 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 6.
2025-05-18 12:07:28.429 +05:30 [INF] Calculated investment amount: 1240.66.
2025-05-18 12:07:28.431 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Energy.
2025-05-18 12:07:28.433 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 6.
2025-05-18 12:07:28.436 +05:30 [INF] Calculated investment amount: 837.44.
2025-05-18 12:07:28.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 6.
2025-05-18 12:07:28.440 +05:30 [INF] Calculated investment amount: 877.41.
2025-05-18 12:07:28.441 +05:30 [INF] Fetching products for Asset Class: commodities, Sub-Asset Class: Agriculture.
2025-05-18 12:07:28.443 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 6.
2025-05-18 12:07:28.445 +05:30 [INF] Calculated investment amount: 1011.36.
2025-05-18 12:07:28.449 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 6.
2025-05-18 12:07:28.452 +05:30 [INF] Calculated investment amount: 899.56.
2025-05-18 12:07:28.454 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Liquid Mutual Funds.
2025-05-18 12:07:28.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 6.
2025-05-18 12:07:28.458 +05:30 [INF] Calculated investment amount: 560.69.
2025-05-18 12:07:28.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 6.
2025-05-18 12:07:28.461 +05:30 [INF] Calculated investment amount: 552.2.
2025-05-18 12:07:28.462 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: Savings Acc.
2025-05-18 12:07:28.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 6.
2025-05-18 12:07:28.468 +05:30 [INF] Calculated investment amount: 569.45.
2025-05-18 12:07:28.469 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 6.
2025-05-18 12:07:28.471 +05:30 [INF] Calculated investment amount: 632.25.
2025-05-18 12:07:28.473 +05:30 [INF] Fetching products for Asset Class: cash, Sub-Asset Class: T. Bill.
2025-05-18 12:07:28.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 6.
2025-05-18 12:07:28.477 +05:30 [INF] Calculated investment amount: 719.71.
2025-05-18 12:07:28.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 6.
2025-05-18 12:07:28.480 +05:30 [INF] Calculated investment amount: 751.27.
2025-05-18 12:07:28.483 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: REITs.
2025-05-18 12:07:28.485 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.81, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 6.
2025-05-18 12:07:28.487 +05:30 [INF] Calculated investment amount: 1085.2.
2025-05-18 12:07:28.489 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 6.
2025-05-18 12:07:28.491 +05:30 [INF] Calculated investment amount: 1125.43.
2025-05-18 12:07:28.492 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Residential Prop.
2025-05-18 12:07:28.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 6.
2025-05-18 12:07:28.496 +05:30 [INF] Calculated investment amount: 813.2.
2025-05-18 12:07:28.498 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 6.
2025-05-18 12:07:28.500 +05:30 [INF] Calculated investment amount: 851.81.
2025-05-18 12:07:28.502 +05:30 [INF] Fetching products for Asset Class: realestate, Sub-Asset Class: Commercial Prop.
2025-05-18 12:07:28.503 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 6.
2025-05-18 12:07:28.505 +05:30 [INF] Calculated investment amount: 1066.46.
2025-05-18 12:07:28.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 6.
2025-05-18 12:07:28.508 +05:30 [INF] Calculated investment amount: 1050.04.
2025-05-18 12:07:28.518 +05:30 [INF] Product allocations saved successfully to ProductAllocations.json
2025-05-18 12:07:28.523 +05:30 [INF] Final Product Allocations: {"equity":{"Large Cap":{"BlueChip Fund ":{"product_name":"BlueChip Fund ","annual_return":10,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Stable returns","Low risk"],"cons":["Lower growth"],"risk_level":"Low","percentage_split":7.29,"InvestmentAmount":4115.01},"Index Fund ":{"product_name":"Index Fund ","annual_return":9.2,"asset_class":"Equity","sub_asset_class":"Large Cap","liquidity":"High","pros":["Diversified","Low cost"],"cons":["Market dependent"],"risk_level":"Moderate","percentage_split":6.71,"InvestmentAmount":3957.19}},"Mid Cap":{"Mid Cap Growth ":{"product_name":"Mid Cap Growth ","annual_return":12.5,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["High growth potential"],"cons":["Volatile"],"risk_level":"High","percentage_split":5.59,"InvestmentAmount":2757.38},"MidCap Blend ":{"product_name":"MidCap Blend ","annual_return":11,"asset_class":"Equity","sub_asset_class":"Mid Cap","liquidity":"Medium","pros":["Balanced approach"],"cons":["Moderate risk"],"risk_level":"Moderate","percentage_split":4.91,"InvestmentAmount":2625.09}},"Small Cap":{"SmallCap Aggressive ":{"product_name":"SmallCap Aggressive ","annual_return":14,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Medium","pros":["High return potential"],"cons":["Very volatile"],"risk_level":"High","percentage_split":5.4,"InvestmentAmount":2460.17},"Emerging Companies ":{"product_name":"Emerging Companies ","annual_return":13.2,"asset_class":"Equity","sub_asset_class":"Small Cap","liquidity":"Low","pros":["Growth stocks"],"cons":["Liquidity risk"],"risk_level":"High","percentage_split":5.1,"InvestmentAmount":2423.77}}},"fixedIncome":{"Gov Bonds":{"Government Bond ":{"product_name":"Government Bond ","annual_return":5,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Very safe","Guaranteed return"],"cons":["Low return"],"risk_level":"Low","percentage_split":6.12,"InvestmentAmount":4566.84},"Sovereign Bond ":{"product_name":"Sovereign Bond ","annual_return":4.8,"asset_class":"Fixed Income","sub_asset_class":"Gov Bonds","liquidity":"Low","pros":["Stable income"],"cons":["Interest rate sensitive"],"risk_level":"Low","percentage_split":5.88,"InvestmentAmount":4438.23}},"Corp Bonds":{"Corporate Bond ":{"product_name":"Corporate Bond ","annual_return":6.8,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Better return"],"cons":["Company risk"],"risk_level":"Moderate","percentage_split":7.83,"InvestmentAmount":5276.36},"Private Corp Bond ":{"product_name":"Private Corp Bond ","annual_return":7.1,"asset_class":"Fixed Income","sub_asset_class":"Corp Bonds","liquidity":"Medium","pros":["Good yield"],"cons":["Credit risk"],"risk_level":"High","percentage_split":8.17,"InvestmentAmount":5413.59}},"Fixed Dep":{"Fixed Deposit ":{"product_name":"Fixed Deposit ","annual_return":5.5,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Capital safety"],"cons":["Low returns"],"risk_level":"Low","percentage_split":5.89,"InvestmentAmount":4271.7},"Bank FD ":{"product_name":"Bank FD ","annual_return":5.7,"asset_class":"Fixed Income","sub_asset_class":"Fixed Dep","liquidity":"High","pros":["Easy access"],"cons":["Taxable"],"risk_level":"Low","percentage_split":6.11,"InvestmentAmount":4381.18}}},"commodities":{"Precious Metals":{"Gold ETF":{"product_name":"Gold ETF","annual_return":7.8,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Inflation hedge","Safe haven asset"],"cons":["No income generation","Price volatility"],"risk_level":"Moderate","percentage_split":2.21,"InvestmentAmount":1408.25},"Silver Trust":{"product_name":"Silver Trust","annual_return":6.3,"asset_class":"Commodities","sub_asset_class":"Precious Metals","liquidity":"High","pros":["Alternative investment","Deflation hedge"],"cons":["Subject to price swings","Not income-producing"],"risk_level":"Moderate","percentage_split":1.79,"InvestmentAmount":1240.66}},"Energy":{"Energy Fund":{"product_name":"Energy Fund","annual_return":9.2,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["High demand","Diversified exposure"],"cons":["Subject to price fluctuations","Geopolitical risks"],"risk_level":"Moderate","percentage_split":1.42,"InvestmentAmount":837.44},"Oil \u0026 Gas ETF":{"product_name":"Oil \u0026 Gas ETF","annual_return":10.3,"asset_class":"Commodities","sub_asset_class":"Energy","liquidity":"Medium","pros":["Strong returns","Global demand"],"cons":["Environmental impact","Political risk"],"risk_level":"High","percentage_split":1.58,"InvestmentAmount":877.41}},"Agriculture":{"Agricultural ETF":{"product_name":"Agricultural ETF","annual_return":8.5,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Diversification","Growth potential"],"cons":["Weather dependent","Global supply issues"],"risk_level":"Moderate","percentage_split":1.65,"InvestmentAmount":1011.36},"Crop Futures B":{"product_name":"Crop Futures B","annual_return":7,"asset_class":"Commodities","sub_asset_class":"Agriculture","liquidity":"Low","pros":["Alternative to stocks","Hedge against inflation"],"cons":["Market volatility","Weather sensitivity"],"risk_level":"Moderate","percentage_split":1.35,"InvestmentAmount":899.56}}},"cash":{"Liquid Mutual Funds":{"Liquid Fund":{"product_name":"Liquid Fund","annual_return":5.2,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Quick redemption","Low risk"],"cons":["Lower returns","Short-term horizon"],"risk_level":"Low","percentage_split":0.76,"InvestmentAmount":560.69},"Ultra Short Fund":{"product_name":"Ultra Short Fund","annual_return":5,"asset_class":"Cash","sub_asset_class":"Liquid Mutual Funds","liquidity":"High","pros":["Better returns than savings","High liquidity"],"cons":["Interest rate risk","Short-term only"],"risk_level":"Low","percentage_split":0.74,"InvestmentAmount":552.2}},"Savings Acc":{"Standard Savings Account":{"product_name":"Standard Savings Account","annual_return":3.5,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Very liquid","Capital safety"],"cons":["Very low returns","Not suitable for growth"],"risk_level":"Low","percentage_split":0.7,"InvestmentAmount":569.45},"High Interest Savings":{"product_name":"High Interest Savings","annual_return":4,"asset_class":"Cash","sub_asset_class":"Savings Acc","liquidity":"High","pros":["Slightly higher returns","Safe and accessible"],"cons":["Still low returns","Inflation risk"],"risk_level":"Low","percentage_split":0.8,"InvestmentAmount":632.25}},"T. Bill":{"91-Day T-Bill":{"product_name":"91-Day T-Bill","annual_return":5.1,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Government backed","Low risk"],"cons":["Fixed tenure","Lower yield"],"risk_level":"Low","percentage_split":0.97,"InvestmentAmount":719.71},"182-Day T-Bill":{"product_name":"182-Day T-Bill","annual_return":5.4,"asset_class":"Cash","sub_asset_class":"T. Bill","liquidity":"Moderate","pros":["Safe investment","Short maturity"],"cons":["Not liquid before maturity","Limited returns"],"risk_level":"Low","percentage_split":1.03,"InvestmentAmount":751.27}}},"realEstate":{"REITs":{"REITs Trust ":{"product_name":"REITs Trust ","annual_return":8.9,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"Moderate","pros":["Stable returns","Diversified portfolio"],"cons":["Sensitive to interest rates","Limited growth"],"risk_level":"Moderate","percentage_split":1.81,"InvestmentAmount":1085.2},"Vanguad Real Estate":{"product_name":"Vanguad Real Estate","annual_return":9.5,"asset_class":"Real Estate","sub_asset_class":"REITs","liquidity":"High","pros":["Tax efficiency","Regular income"],"cons":["Market volatility","Fees"],"risk_level":"High","percentage_split":1.94,"InvestmentAmount":1125.43}},"Residential Prop":{"Residential Scheme ":{"product_name":"Residential Scheme ","annual_return":6.7,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Low","pros":["Stable income","Low volatility"],"cons":["Low liquidity","Maintenance costs"],"risk_level":"Low","percentage_split":1.2,"InvestmentAmount":813.2},"Housing Fund":{"product_name":"Housing Fund","annual_return":7.3,"asset_class":"Real Estate","sub_asset_class":"Residential Prop","liquidity":"Moderate","pros":["Tax benefits","Long-term growth"],"cons":["Location dependent","Slow ROI"],"risk_level":"Moderate","percentage_split":1.3,"InvestmentAmount":851.81}},"Commercial Prop":{"Commercial Plaza":{"product_name":"Commercial Plaza","annual_return":10.2,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Low","pros":["High rental yields","Strong appreciation"],"cons":["High initial cost","Vacancy risk"],"risk_level":"High","percentage_split":1.91,"InvestmentAmount":1066.46},"Office Fund":{"product_name":"Office Fund","annual_return":9.8,"asset_class":"Real Estate","sub_asset_class":"Commercial Prop","liquidity":"Moderate","pros":["Steady returns","Long leases"],"cons":["Tenant turnover","High maintenance"],"risk_level":"High","percentage_split":1.84,"InvestmentAmount":1050.04}}}}
2025-05-18 12:07:28.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 12:07:28.537 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 220.1569ms
2025-05-18 12:07:28.538 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 12:07:28.540 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=6 - 200 null application/json; charset=utf-8 233.908ms
2025-05-18 12:07:28.550 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 12:07:28.551 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 12:07:28.556 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.558 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.558 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.051ms
2025-05-18 12:07:28.559 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.5807ms
2025-05-18 12:07:28.561 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 12:07:28.564 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 12:07:28.570 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.570 +05:30 [INF] CORS policy execution successful.
2025-05-18 12:07:28.571 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 12:07:28.572 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 12:07:28.579 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 12:07:28.579 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 12:07:28.585 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 12:07:28.587 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 12:07:28.588 +05:30 [INF] Attempting to read product allocations from JSON file: ProductAllocations.json
2025-05-18 12:07:28.590 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 12:07:28.593 +05:30 [INF] Product allocations JSON read successfully.
2025-05-18 12:07:28.594 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.1767ms
2025-05-18 12:07:28.595 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 12:07:28.597 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 35.7889ms
2025-05-18 12:07:28.600 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Services.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 12:07:28.610 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 25.0687ms
2025-05-18 12:07:28.611 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 12:07:28.616 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 52.3838ms
2025-05-18 12:15:57.114 +05:30 [INF] Application is shutting down...
2025-05-18 13:04:21.450 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 13:04:21.594 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 13:04:21.598 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 13:04:21.599 +05:30 [INF] Hosting environment: Development
2025-05-18 13:04:21.599 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 13:05:21.231 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 13:05:21.329 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:21.343 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 115.62ms
2025-05-18 13:05:21.354 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 60
2025-05-18 13:05:21.469 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:21.474 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:05:21.516 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:05:21.744 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:05:21.775 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 248.4317ms
2025-05-18 13:05:21.779 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:05:21.780 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 426.5109ms
2025-05-18 13:05:24.557 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 13:05:24.565 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:24.567 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 9.4014ms
2025-05-18 13:05:24.572 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 13:05:24.581 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:24.586 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:05:24.597 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 13:05:24.637 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 13:05:24.650 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 47.6759ms
2025-05-18 13:05:24.655 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:05:24.658 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 85.8423ms
2025-05-18 13:05:52.639 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:05:52.643 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:52.644 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.6998ms
2025-05-18 13:05:52.649 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 111
2025-05-18 13:05:52.652 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:52.653 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:05:52.660 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:05:52.687 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:05:52.703 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:05:52.707 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:05:52.711 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:05:52.714 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-18 13:05:52.717 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-18 13:05:52.719 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:05:52.723 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:05:52.739 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-18 13:05:52.741 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-18 13:05:52.742 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 13:05:52.744 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-18 13:05:52.747 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-18 13:05:52.749 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-18 13:05:52.750 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}
2025-05-18 13:05:52.751 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 13:05:52.753 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}
2025-05-18 13:05:52.754 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0,"Residential Prop":0,"Commercial Prop":0}
2025-05-18 13:05:52.782 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-18 13:05:52.795 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:05:52.797 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"percentage":0,"subAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}
2025-05-18 13:05:52.802 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:05:52.806 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 138.2182ms
2025-05-18 13:05:52.808 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:05:52.810 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 161.2842ms
2025-05-18 13:05:52.816 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - null null
2025-05-18 13:05:52.819 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:52.821 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - 204 null null 5.8002ms
2025-05-18 13:05:52.824 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - application/json 486
2025-05-18 13:05:52.830 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:05:52.832 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:05:52.840 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:05:52.873 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":5,"Corp Bonds":20,"Fixed Dep":5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":5,"Savings Acc":2.5,"T. Bill":2.5}},"realEstate":{"Percentage":0,"SubAssets":{"REITs":0,"Residential Prop":0,"Commercial Prop":0}}}}
2025-05-18 13:05:52.875 +05:30 [INF] Target Amount: 100000000
2025-05-18 13:05:52.876 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:05:52.878 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:05:52.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 100000000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:05:52.886 +05:30 [INF] Calculated investment amount: 2509886.81.
2025-05-18 13:05:52.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 100000000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:05:52.888 +05:30 [INF] Calculated investment amount: 2484279.4.
2025-05-18 13:05:52.889 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.87, TargetAmount: 100000000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:05:52.890 +05:30 [INF] Calculated investment amount: 2731482.33.
2025-05-18 13:05:52.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.8, TargetAmount: 100000000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:05:52.891 +05:30 [INF] Calculated investment amount: 2747038.93.
2025-05-18 13:05:52.892 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.72, TargetAmount: 100000000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:05:52.893 +05:30 [INF] Calculated investment amount: 2891653.64.
2025-05-18 13:05:52.893 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.11, TargetAmount: 100000000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:05:52.894 +05:30 [INF] Calculated investment amount: 2926084.66.
2025-05-18 13:05:52.895 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 100000000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:05:52.896 +05:30 [INF] Calculated investment amount: 1565478.8.
2025-05-18 13:05:52.897 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 100000000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:05:52.898 +05:30 [INF] Calculated investment amount: 1533039.19.
2025-05-18 13:05:52.899 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.78, TargetAmount: 100000000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:05:52.900 +05:30 [INF] Calculated investment amount: 5065546.75.
2025-05-18 13:05:52.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.22, TargetAmount: 100000000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:05:52.902 +05:30 [INF] Calculated investment amount: 5147023.93.
2025-05-18 13:05:52.902 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.46, TargetAmount: 100000000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:05:52.903 +05:30 [INF] Calculated investment amount: 1440159.23.
2025-05-18 13:05:52.904 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.54, TargetAmount: 100000000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:05:52.905 +05:30 [INF] Calculated investment amount: 1459095.92.
2025-05-18 13:05:52.906 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:05:52.906 +05:30 [INF] Calculated investment amount: 434110.43.
2025-05-18 13:05:52.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:05:52.908 +05:30 [INF] Calculated investment amount: 407125.79.
2025-05-18 13:05:52.908 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:05:52.909 +05:30 [INF] Calculated investment amount: 817033.46.
2025-05-18 13:05:52.909 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:05:52.911 +05:30 [INF] Calculated investment amount: 825405.88.
2025-05-18 13:05:52.912 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:05:52.913 +05:30 [INF] Calculated investment amount: 1012833.6.
2025-05-18 13:05:52.914 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:05:52.915 +05:30 [INF] Calculated investment amount: 955696.67.
2025-05-18 13:05:52.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.55, TargetAmount: 100000000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 13:05:52.916 +05:30 [INF] Calculated investment amount: 1535970.17.
2025-05-18 13:05:52.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.45, TargetAmount: 100000000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:05:52.918 +05:30 [INF] Calculated investment amount: 1504087.47.
2025-05-18 13:05:52.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.17, TargetAmount: 100000000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 13:05:52.919 +05:30 [INF] Calculated investment amount: 829435.01.
2025-05-18 13:05:52.919 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.33, TargetAmount: 100000000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 13:05:52.920 +05:30 [INF] Calculated investment amount: 898500.34.
2025-05-18 13:05:52.921 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 100000000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 13:05:52.921 +05:30 [INF] Calculated investment amount: 735797.33.
2025-05-18 13:05:52.922 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 100000000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 13:05:52.923 +05:30 [INF] Calculated investment amount: 762401.25.
2025-05-18 13:05:52.924 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:05:52.949 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:05:52.952 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:05:52.954 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:05:52.957 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 111.7632ms
2025-05-18 13:05:52.957 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:05:52.958 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - 500 null application/json; charset=utf-8 134.3091ms
2025-05-18 13:06:01.771 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:06:01.772 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:01.773 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 2.5697ms
2025-05-18 13:06:01.778 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 110
2025-05-18 13:06:01.781 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:01.783 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:01.784 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:01.786 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:06:01.789 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:06:01.790 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:06:01.790 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:06:01.791 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:06:01.791 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:06:01.792 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:06:01.792 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:06:01.794 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 13:06:01.795 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 13:06:01.796 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 13:06:01.797 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 13:06:01.799 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 13:06:01.800 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 13:06:01.801 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 13:06:01.802 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 13:06:01.802 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 13:06:01.804 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 13:06:01.805 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 13:06:01.814 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:06:01.815 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 13:06:01.817 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:06:01.818 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 32.851ms
2025-05-18 13:06:01.819 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:01.819 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 41.0103ms
2025-05-18 13:06:01.821 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - null null
2025-05-18 13:06:01.823 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:01.823 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - 204 null null 2.4072ms
2025-05-18 13:06:01.827 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - application/json 508
2025-05-18 13:06:01.830 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:01.832 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:01.833 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:01.836 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-18 13:06:01.836 +05:30 [INF] Target Amount: 100000000
2025-05-18 13:06:01.837 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:06:01.837 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:06:01.838 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 100000000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:06:01.839 +05:30 [INF] Calculated investment amount: 4017361.08.
2025-05-18 13:06:01.839 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 100000000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:01.840 +05:30 [INF] Calculated investment amount: 3973188.09.
2025-05-18 13:06:01.841 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 100000000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:06:01.841 +05:30 [INF] Calculated investment amount: 4369755.84.
2025-05-18 13:06:01.842 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 100000000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:06:01.843 +05:30 [INF] Calculated investment amount: 4395262.3.
2025-05-18 13:06:01.844 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 100000000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:06:01.845 +05:30 [INF] Calculated investment amount: 4628803.77.
2025-05-18 13:06:01.846 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 100000000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:06:01.848 +05:30 [INF] Calculated investment amount: 4679998.9.
2025-05-18 13:06:01.848 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:06:01.849 +05:30 [INF] Calculated investment amount: 521826.27.
2025-05-18 13:06:01.849 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:06:01.850 +05:30 [INF] Calculated investment amount: 513098.83.
2025-05-18 13:06:01.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:06:01.852 +05:30 [INF] Calculated investment amount: 1688515.58.
2025-05-18 13:06:01.852 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 100000000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:06:01.853 +05:30 [INF] Calculated investment amount: 1717353.39.
2025-05-18 13:06:01.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:06:01.854 +05:30 [INF] Calculated investment amount: 480053.08.
2025-05-18 13:06:01.855 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:06:01.856 +05:30 [INF] Calculated investment amount: 488280.13.
2025-05-18 13:06:01.856 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:06:01.857 +05:30 [INF] Calculated investment amount: 434110.43.
2025-05-18 13:06:01.858 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:06:01.859 +05:30 [INF] Calculated investment amount: 407125.79.
2025-05-18 13:06:01.860 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:01.861 +05:30 [INF] Calculated investment amount: 817033.46.
2025-05-18 13:06:01.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:06:01.863 +05:30 [INF] Calculated investment amount: 825405.88.
2025-05-18 13:06:01.865 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:06:01.867 +05:30 [INF] Calculated investment amount: 1012833.6.
2025-05-18 13:06:01.868 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:06:01.868 +05:30 [INF] Calculated investment amount: 955696.67.
2025-05-18 13:06:01.869 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:06:01.870 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:06:01.872 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:06:01.874 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:01.875 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 40.4528ms
2025-05-18 13:06:01.876 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:01.877 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000000&investmentHorizon=10 - 500 null application/json; charset=utf-8 50.1456ms
2025-05-18 13:06:06.714 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:06:06.719 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:06.719 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:06.721 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:06.724 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:06:06.727 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:06:06.730 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:06:06.732 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:06:06.733 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:06:06.734 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:06:06.734 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:06:06.735 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:06:06.736 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:06.737 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:06.738 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:06.739 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:06.740 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:06.741 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:06.742 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:06.743 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:06.743 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:06.744 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:06.745 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:06.749 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:06:06.749 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:06.750 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:06:06.752 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 29.5238ms
2025-05-18 13:06:06.752 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:06.753 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 38.5878ms
2025-05-18 13:06:06.755 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - null null
2025-05-18 13:06:06.756 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:06.757 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 204 null null 2.4599ms
2025-05-18 13:06:06.760 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 477
2025-05-18 13:06:06.763 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:06.763 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:06.765 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:06.768 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:06:06.769 +05:30 [INF] Target Amount: 10000
2025-05-18 13:06:06.770 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:06:06.770 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:06:06.771 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:06:06.772 +05:30 [INF] Calculated investment amount: 481.93.
2025-05-18 13:06:06.773 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:06.774 +05:30 [INF] Calculated investment amount: 476.95.
2025-05-18 13:06:06.774 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:06:06.775 +05:30 [INF] Calculated investment amount: 294.7.
2025-05-18 13:06:06.776 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:06:06.777 +05:30 [INF] Calculated investment amount: 296.89.
2025-05-18 13:06:06.777 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:06:06.778 +05:30 [INF] Calculated investment amount: 249.78.
2025-05-18 13:06:06.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:06:06.781 +05:30 [INF] Calculated investment amount: 252.96.
2025-05-18 13:06:06.781 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:06:06.782 +05:30 [INF] Calculated investment amount: 235.13.
2025-05-18 13:06:06.783 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:06:06.783 +05:30 [INF] Calculated investment amount: 229.64.
2025-05-18 13:06:06.784 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:06:06.785 +05:30 [INF] Calculated investment amount: 253.28.
2025-05-18 13:06:06.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:06:06.786 +05:30 [INF] Calculated investment amount: 257.35.
2025-05-18 13:06:06.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:06:06.788 +05:30 [INF] Calculated investment amount: 215.44.
2025-05-18 13:06:06.788 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:06:06.789 +05:30 [INF] Calculated investment amount: 219.44.
2025-05-18 13:06:06.790 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:06:06.790 +05:30 [INF] Calculated investment amount: 104.28.
2025-05-18 13:06:06.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:06:06.792 +05:30 [INF] Calculated investment amount: 97.17.
2025-05-18 13:06:06.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:06.793 +05:30 [INF] Calculated investment amount: 58.89.
2025-05-18 13:06:06.794 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:06:06.795 +05:30 [INF] Calculated investment amount: 59.28.
2025-05-18 13:06:06.798 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:06:06.800 +05:30 [INF] Calculated investment amount: 72.98.
2025-05-18 13:06:06.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:06:06.802 +05:30 [INF] Calculated investment amount: 68.63.
2025-05-18 13:06:06.804 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:06:06.805 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:06:06.808 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:06:06.811 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:06.813 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 46.2796ms
2025-05-18 13:06:06.814 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:06.814 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 54.7029ms
2025-05-18 13:06:08.675 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:06:08.680 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:08.682 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.138ms
2025-05-18 13:06:08.685 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:06:08.690 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:08.690 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:08.691 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:08.693 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:06:08.698 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:06:08.700 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:06:08.701 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:06:08.702 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:06:08.703 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:06:08.703 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:06:08.704 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:06:08.705 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:08.706 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:08.706 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:08.707 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:08.708 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:08.709 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:08.710 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:08.712 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:08.714 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:08.715 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:08.716 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:08.719 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:06:08.720 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:08.721 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:06:08.722 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 28.6504ms
2025-05-18 13:06:08.722 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:08.723 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 37.5958ms
2025-05-18 13:06:08.725 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 477
2025-05-18 13:06:08.726 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:08.727 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:08.727 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:08.729 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:06:08.730 +05:30 [INF] Target Amount: 10000
2025-05-18 13:06:08.730 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:06:08.731 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:06:08.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:06:08.733 +05:30 [INF] Calculated investment amount: 481.93.
2025-05-18 13:06:08.733 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:08.734 +05:30 [INF] Calculated investment amount: 476.95.
2025-05-18 13:06:08.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:06:08.735 +05:30 [INF] Calculated investment amount: 294.7.
2025-05-18 13:06:08.736 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:06:08.736 +05:30 [INF] Calculated investment amount: 296.89.
2025-05-18 13:06:08.737 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:06:08.737 +05:30 [INF] Calculated investment amount: 249.78.
2025-05-18 13:06:08.738 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:06:08.739 +05:30 [INF] Calculated investment amount: 252.96.
2025-05-18 13:06:08.739 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:06:08.740 +05:30 [INF] Calculated investment amount: 235.13.
2025-05-18 13:06:08.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:06:08.741 +05:30 [INF] Calculated investment amount: 229.64.
2025-05-18 13:06:08.742 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:06:08.743 +05:30 [INF] Calculated investment amount: 253.28.
2025-05-18 13:06:08.743 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:06:08.745 +05:30 [INF] Calculated investment amount: 257.35.
2025-05-18 13:06:08.746 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:06:08.748 +05:30 [INF] Calculated investment amount: 215.44.
2025-05-18 13:06:08.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:06:08.749 +05:30 [INF] Calculated investment amount: 219.44.
2025-05-18 13:06:08.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:06:08.750 +05:30 [INF] Calculated investment amount: 104.28.
2025-05-18 13:06:08.751 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:06:08.751 +05:30 [INF] Calculated investment amount: 97.17.
2025-05-18 13:06:08.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:06:08.753 +05:30 [INF] Calculated investment amount: 58.89.
2025-05-18 13:06:08.753 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:06:08.754 +05:30 [INF] Calculated investment amount: 59.28.
2025-05-18 13:06:08.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:06:08.756 +05:30 [INF] Calculated investment amount: 72.98.
2025-05-18 13:06:08.756 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:06:08.757 +05:30 [INF] Calculated investment amount: 68.63.
2025-05-18 13:06:08.757 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:06:08.758 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:06:08.759 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:06:08.762 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:08.763 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 33.92ms
2025-05-18 13:06:08.764 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:08.765 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 40.0521ms
2025-05-18 13:06:13.418 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:06:13.424 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:13.425 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:13.426 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:13.427 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:06:13.434 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:06:13.435 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:06:13.436 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:06:13.437 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:06:13.438 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:06:13.439 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:06:13.441 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:06:13.442 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:13.444 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:13.445 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:13.446 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:13.448 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:13.449 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:06:13.451 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:06:13.452 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:06:13.453 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:06:13.453 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:06:13.454 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:13.459 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:06:13.462 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:06:13.463 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:06:13.465 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 38.6925ms
2025-05-18 13:06:13.468 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:13.469 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 51.126ms
2025-05-18 13:06:13.471 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - null null
2025-05-18 13:06:13.473 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:13.474 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 204 null null 3.0652ms
2025-05-18 13:06:13.476 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - application/json 477
2025-05-18 13:06:13.478 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:13.478 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:13.479 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:13.482 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:06:13.483 +05:30 [INF] Target Amount: 10000
2025-05-18 13:06:13.484 +05:30 [INF] Investment Horizon: 11
2025-05-18 13:06:13.485 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:06:13.486 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-18 13:06:13.486 +05:30 [INF] Calculated investment amount: 438.12.
2025-05-18 13:06:13.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:06:13.488 +05:30 [INF] Calculated investment amount: 436.77.
2025-05-18 13:06:13.489 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-18 13:06:13.490 +05:30 [INF] Calculated investment amount: 261.96.
2025-05-18 13:06:13.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-18 13:06:13.492 +05:30 [INF] Calculated investment amount: 267.47.
2025-05-18 13:06:13.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-18 13:06:13.493 +05:30 [INF] Calculated investment amount: 219.11.
2025-05-18 13:06:13.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-18 13:06:13.496 +05:30 [INF] Calculated investment amount: 223.46.
2025-05-18 13:06:13.497 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 13:06:13.499 +05:30 [INF] Calculated investment amount: 223.93.
2025-05-18 13:06:13.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-18 13:06:13.500 +05:30 [INF] Calculated investment amount: 219.13.
2025-05-18 13:06:13.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-18 13:06:13.502 +05:30 [INF] Calculated investment amount: 237.15.
2025-05-18 13:06:13.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-18 13:06:13.503 +05:30 [INF] Calculated investment amount: 240.29.
2025-05-18 13:06:13.505 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-18 13:06:13.506 +05:30 [INF] Calculated investment amount: 204.21.
2025-05-18 13:06:13.506 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-18 13:06:13.507 +05:30 [INF] Calculated investment amount: 207.61.
2025-05-18 13:06:13.508 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-18 13:06:13.508 +05:30 [INF] Calculated investment amount: 96.74.
2025-05-18 13:06:13.510 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-18 13:06:13.511 +05:30 [INF] Calculated investment amount: 91.41.
2025-05-18 13:06:13.512 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:06:13.513 +05:30 [INF] Calculated investment amount: 53.93.
2025-05-18 13:06:13.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-18 13:06:13.515 +05:30 [INF] Calculated investment amount: 53.74.
2025-05-18 13:06:13.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-18 13:06:13.516 +05:30 [INF] Calculated investment amount: 67.26.
2025-05-18 13:06:13.517 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-18 13:06:13.518 +05:30 [INF] Calculated investment amount: 64.14.
2025-05-18 13:06:13.518 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:06:13.519 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:06:13.521 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:06:13.524 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:13.525 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 43.751ms
2025-05-18 13:06:13.526 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:13.527 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=11 - 500 null application/json; charset=utf-8 50.7301ms
2025-05-18 13:06:37.660 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:06:37.664 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.665 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.9878ms
2025-05-18 13:06:37.668 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 95
2025-05-18 13:06:37.669 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.670 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:37.671 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:37.673 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:06:37.676 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:06:37.677 +05:30 [INF] Looking up base allocation for key: Low+Mod
2025-05-18 13:06:37.680 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":50,"commodities":10,"cash":15,"realEstate":5}
2025-05-18 13:06:37.681 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:06:37.683 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:06:37.684 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 13:06:37.686 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 13:06:37.694 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-18 13:06:37.696 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 13:06:37.698 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 13:06:37.699 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 13:06:37.700 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:06:37.701 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}
2025-05-18 13:06:37.702 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 13:06:37.704 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 13:06:37.705 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 13:06:37.705 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:06:37.707 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:06:37.717 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:06:37.718 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:06:37.719 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:06:37.720 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.9976ms
2025-05-18 13:06:37.724 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:06:37.725 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 57.0324ms
2025-05-18 13:06:37.729 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - null null
2025-05-18 13:06:37.731 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.732 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 204 null null 3.4285ms
2025-05-18 13:06:37.736 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - application/json 490
2025-05-18 13:06:37.739 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.739 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:37.740 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:37.742 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":18.75,"Mid Cap":7.5,"Small Cap":3.75}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-18 13:06:37.743 +05:30 [INF] Target Amount: 10000
2025-05-18 13:06:37.747 +05:30 [INF] Investment Horizon: 5
2025-05-18 13:06:37.748 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:06:37.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.77, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-18 13:06:37.751 +05:30 [INF] Calculated investment amount: 606.64.
2025-05-18 13:06:37.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 13:06:37.753 +05:30 [INF] Calculated investment amount: 578.31.
2025-05-18 13:06:37.754 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-18 13:06:37.755 +05:30 [INF] Calculated investment amount: 221.42.
2025-05-18 13:06:37.756 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.51, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-18 13:06:37.756 +05:30 [INF] Calculated investment amount: 208.3.
2025-05-18 13:06:37.757 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-18 13:06:37.758 +05:30 [INF] Calculated investment amount: 100.24.
2025-05-18 13:06:37.759 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-18 13:06:37.759 +05:30 [INF] Calculated investment amount: 97.91.
2025-05-18 13:06:37.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 13:06:37.762 +05:30 [INF] Calculated investment amount: 799.2.
2025-05-18 13:06:37.763 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-18 13:06:37.765 +05:30 [INF] Calculated investment amount: 775.21.
2025-05-18 13:06:37.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-18 13:06:37.767 +05:30 [INF] Calculated investment amount: 281.4.
2025-05-18 13:06:37.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.09, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-18 13:06:37.768 +05:30 [INF] Calculated investment amount: 290.25.
2025-05-18 13:06:37.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-18 13:06:37.769 +05:30 [INF] Calculated investment amount: 450.66.
2025-05-18 13:06:37.769 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-18 13:06:37.770 +05:30 [INF] Calculated investment amount: 463.09.
2025-05-18 13:06:37.770 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-18 13:06:37.771 +05:30 [INF] Calculated investment amount: 237.67.
2025-05-18 13:06:37.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-18 13:06:37.772 +05:30 [INF] Calculated investment amount: 205.56.
2025-05-18 13:06:37.773 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 13:06:37.773 +05:30 [INF] Calculated investment amount: 75.99.
2025-05-18 13:06:37.774 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-18 13:06:37.775 +05:30 [INF] Calculated investment amount: 80.85.
2025-05-18 13:06:37.775 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-18 13:06:37.776 +05:30 [INF] Calculated investment amount: 45.89.
2025-05-18 13:06:37.776 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-18 13:06:37.779 +05:30 [INF] Calculated investment amount: 39.93.
2025-05-18 13:06:37.781 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-18 13:06:37.782 +05:30 [INF] Calculated investment amount: 91.58.
2025-05-18 13:06:37.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.13, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 13:06:37.783 +05:30 [INF] Calculated investment amount: 88.54.
2025-05-18 13:06:37.784 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.8, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-18 13:06:37.785 +05:30 [INF] Calculated investment amount: 151.56.
2025-05-18 13:06:37.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-18 13:06:37.786 +05:30 [INF] Calculated investment amount: 168.5.
2025-05-18 13:06:37.786 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-18 13:06:37.787 +05:30 [INF] Calculated investment amount: 145.82.
2025-05-18 13:06:37.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-18 13:06:37.788 +05:30 [INF] Calculated investment amount: 152.22.
2025-05-18 13:06:37.789 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-18 13:06:37.789 +05:30 [INF] Calculated investment amount: 126.01.
2025-05-18 13:06:37.790 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-18 13:06:37.790 +05:30 [INF] Calculated investment amount: 131.49.
2025-05-18 13:06:37.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-18 13:06:37.791 +05:30 [INF] Calculated investment amount: 138.11.
2025-05-18 13:06:37.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-18 13:06:37.793 +05:30 [INF] Calculated investment amount: 146.94.
2025-05-18 13:06:37.794 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-18 13:06:37.795 +05:30 [INF] Calculated investment amount: 62.76.
2025-05-18 13:06:37.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-18 13:06:37.798 +05:30 [INF] Calculated investment amount: 61.41.
2025-05-18 13:06:37.804 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 13:06:37.804 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:37.806 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 64.1144ms
2025-05-18 13:06:37.807 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:06:37.807 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 200 null application/json; charset=utf-8 71.3805ms
2025-05-18 13:06:37.817 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:06:37.818 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:06:37.819 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.821 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.825 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.8381ms
2025-05-18 13:06:37.826 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.7213ms
2025-05-18 13:06:37.831 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:06:37.832 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:06:37.834 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.834 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:06:37.834 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:06:37.835 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:06:37.839 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:06:37.839 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:06:37.844 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 13:06:37.847 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 13:06:37.848 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:37.849 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.3242ms
2025-05-18 13:06:37.849 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:06:37.850 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:06:37.853 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 21.2431ms
2025-05-18 13:06:37.857 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 16.2012ms
2025-05-18 13:06:37.858 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:06:37.859 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.1323ms
2025-05-18 13:08:34.436 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:08:34.439 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:34.440 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.1974ms
2025-05-18 13:08:34.443 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 13:08:34.448 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:34.448 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:08:34.449 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:08:34.453 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:08:34.461 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:08:34.462 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:08:34.463 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:08:34.464 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:08:34.465 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:08:34.465 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 13:08:34.467 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 13:08:34.471 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 13:08:34.472 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 13:08:34.474 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:08:34.476 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:08:34.478 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 13:08:34.479 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 13:08:34.480 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 13:08:34.480 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:08:34.481 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:08:34.483 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 13:08:34.491 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 13:08:34.504 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:08:34.514 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 13:08:34.515 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:08:34.516 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 64.3104ms
2025-05-18 13:08:34.517 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:08:34.518 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.2743ms
2025-05-18 13:08:34.520 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - null null
2025-05-18 13:08:34.525 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:34.526 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 204 null null 5.7747ms
2025-05-18 13:08:34.530 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - application/json 483
2025-05-18 13:08:34.531 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:34.532 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:08:34.532 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:08:34.534 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-18 13:08:34.541 +05:30 [INF] Target Amount: 200000
2025-05-18 13:08:34.543 +05:30 [INF] Investment Horizon: 11
2025-05-18 13:08:34.543 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:08:34.546 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-18 13:08:34.548 +05:30 [INF] Calculated investment amount: 6575.27.
2025-05-18 13:08:34.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:08:34.550 +05:30 [INF] Calculated investment amount: 6547.69.
2025-05-18 13:08:34.551 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-18 13:08:34.551 +05:30 [INF] Calculated investment amount: 3930.76.
2025-05-18 13:08:34.552 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-18 13:08:34.552 +05:30 [INF] Calculated investment amount: 4010.46.
2025-05-18 13:08:34.553 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-18 13:08:34.554 +05:30 [INF] Calculated investment amount: 3288.98.
2025-05-18 13:08:34.558 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-18 13:08:34.559 +05:30 [INF] Calculated investment amount: 3349.35.
2025-05-18 13:08:34.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 13:08:34.560 +05:30 [INF] Calculated investment amount: 6267.76.
2025-05-18 13:08:34.561 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-18 13:08:34.562 +05:30 [INF] Calculated investment amount: 6137.89.
2025-05-18 13:08:34.563 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-18 13:08:34.564 +05:30 [INF] Calculated investment amount: 6644.11.
2025-05-18 13:08:34.565 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-18 13:08:34.566 +05:30 [INF] Calculated investment amount: 6724.37.
2025-05-18 13:08:34.566 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-18 13:08:34.567 +05:30 [INF] Calculated investment amount: 5726.68.
2025-05-18 13:08:34.567 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-18 13:08:34.568 +05:30 [INF] Calculated investment amount: 5804.25.
2025-05-18 13:08:34.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-18 13:08:34.575 +05:30 [INF] Calculated investment amount: 1934.71.
2025-05-18 13:08:34.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-18 13:08:34.577 +05:30 [INF] Calculated investment amount: 1828.17.
2025-05-18 13:08:34.577 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:08:34.578 +05:30 [INF] Calculated investment amount: 1078.62.
2025-05-18 13:08:34.578 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-18 13:08:34.579 +05:30 [INF] Calculated investment amount: 1074.87.
2025-05-18 13:08:34.580 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-18 13:08:34.581 +05:30 [INF] Calculated investment amount: 1345.2.
2025-05-18 13:08:34.581 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-18 13:08:34.582 +05:30 [INF] Calculated investment amount: 1282.75.
2025-05-18 13:08:34.583 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:08:34.583 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:08:34.585 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:08:34.587 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:08:34.588 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 54.2672ms
2025-05-18 13:08:34.589 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:08:34.589 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 500 null application/json; charset=utf-8 59.5559ms
2025-05-18 13:08:36.114 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 13:08:36.118 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:36.118 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:08:36.119 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:08:36.120 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:08:36.121 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:08:36.122 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:08:36.123 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:08:36.124 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:08:36.125 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:08:36.125 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 13:08:36.126 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 13:08:36.128 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 13:08:36.129 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 13:08:36.130 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:08:36.130 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:08:36.131 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 13:08:36.131 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 13:08:36.132 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 13:08:36.132 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:08:36.133 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:08:36.133 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 13:08:36.134 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 13:08:36.136 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:08:36.137 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 13:08:36.138 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:08:36.139 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 19.1128ms
2025-05-18 13:08:36.143 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:08:36.144 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 30.421ms
2025-05-18 13:08:36.148 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - application/json 483
2025-05-18 13:08:36.149 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:08:36.150 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:08:36.150 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:08:36.152 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-18 13:08:36.152 +05:30 [INF] Target Amount: 200000
2025-05-18 13:08:36.153 +05:30 [INF] Investment Horizon: 11
2025-05-18 13:08:36.153 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:08:36.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-18 13:08:36.155 +05:30 [INF] Calculated investment amount: 6575.27.
2025-05-18 13:08:36.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:08:36.157 +05:30 [INF] Calculated investment amount: 6547.69.
2025-05-18 13:08:36.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-18 13:08:36.159 +05:30 [INF] Calculated investment amount: 3930.76.
2025-05-18 13:08:36.160 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-18 13:08:36.160 +05:30 [INF] Calculated investment amount: 4010.46.
2025-05-18 13:08:36.161 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-18 13:08:36.162 +05:30 [INF] Calculated investment amount: 3288.98.
2025-05-18 13:08:36.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-18 13:08:36.164 +05:30 [INF] Calculated investment amount: 3349.35.
2025-05-18 13:08:36.165 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 13:08:36.165 +05:30 [INF] Calculated investment amount: 6267.76.
2025-05-18 13:08:36.166 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-18 13:08:36.167 +05:30 [INF] Calculated investment amount: 6137.89.
2025-05-18 13:08:36.167 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-18 13:08:36.168 +05:30 [INF] Calculated investment amount: 6644.11.
2025-05-18 13:08:36.168 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-18 13:08:36.169 +05:30 [INF] Calculated investment amount: 6724.37.
2025-05-18 13:08:36.169 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-18 13:08:36.170 +05:30 [INF] Calculated investment amount: 5726.68.
2025-05-18 13:08:36.171 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-18 13:08:36.172 +05:30 [INF] Calculated investment amount: 5804.25.
2025-05-18 13:08:36.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-18 13:08:36.174 +05:30 [INF] Calculated investment amount: 1934.71.
2025-05-18 13:08:36.175 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-18 13:08:36.176 +05:30 [INF] Calculated investment amount: 1828.17.
2025-05-18 13:08:36.176 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 13:08:36.177 +05:30 [INF] Calculated investment amount: 1078.62.
2025-05-18 13:08:36.178 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-18 13:08:36.181 +05:30 [INF] Calculated investment amount: 1074.87.
2025-05-18 13:08:36.182 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-18 13:08:36.183 +05:30 [INF] Calculated investment amount: 1345.2.
2025-05-18 13:08:36.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-18 13:08:36.184 +05:30 [INF] Calculated investment amount: 1282.75.
2025-05-18 13:08:36.185 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:08:36.186 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:08:36.187 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:08:36.189 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:08:36.191 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 39.8765ms
2025-05-18 13:08:36.193 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:08:36.194 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 500 null application/json; charset=utf-8 45.9426ms
2025-05-18 13:08:48.855 +05:30 [INF] Application is shutting down...
2025-05-18 13:08:53.381 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 13:08:53.498 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 13:08:53.502 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 13:08:53.504 +05:30 [INF] Hosting environment: Development
2025-05-18 13:08:53.504 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 13:09:06.393 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 13:09:06.476 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:06.484 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 93.978ms
2025-05-18 13:09:06.495 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 60
2025-05-18 13:09:06.600 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:06.604 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:09:06.634 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:09:06.858 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:06.886 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 246.5251ms
2025-05-18 13:09:06.890 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:09:06.893 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 398.0084ms
2025-05-18 13:09:25.262 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:09:25.279 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:25.281 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 18.44ms
2025-05-18 13:09:25.286 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:09:25.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:25.293 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:25.313 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:09:25.343 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:09:25.359 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:09:25.359 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:09:25.363 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:09:25.364 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:09:25.364 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:09:25.365 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:09:25.372 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:09:25.383 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:09:25.383 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:09:25.384 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:09:25.385 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:09:25.386 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:09:25.387 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:09:25.388 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:09:25.389 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:09:25.390 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:09:25.391 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:09:25.410 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:09:25.415 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:09:25.416 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:09:25.419 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:09:25.427 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 109.781ms
2025-05-18 13:09:25.428 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:25.429 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 143.9165ms
2025-05-18 13:09:25.432 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - null null
2025-05-18 13:09:25.434 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:25.435 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 204 null null 2.8792ms
2025-05-18 13:09:25.439 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 477
2025-05-18 13:09:25.442 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:25.443 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:25.446 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:09:25.468 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:09:25.469 +05:30 [INF] Target Amount: 10000
2025-05-18 13:09:25.471 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:09:25.475 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:09:25.484 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:09:25.486 +05:30 [INF] Calculated investment amount: 481.93.
2025-05-18 13:09:25.488 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:09:25.489 +05:30 [INF] Calculated investment amount: 476.95.
2025-05-18 13:09:25.490 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:09:25.491 +05:30 [INF] Calculated investment amount: 294.7.
2025-05-18 13:09:25.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:09:25.493 +05:30 [INF] Calculated investment amount: 296.89.
2025-05-18 13:09:25.493 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:09:25.494 +05:30 [INF] Calculated investment amount: 249.78.
2025-05-18 13:09:25.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:09:25.495 +05:30 [INF] Calculated investment amount: 252.96.
2025-05-18 13:09:25.496 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:09:25.496 +05:30 [INF] Calculated investment amount: 235.13.
2025-05-18 13:09:25.497 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:09:25.498 +05:30 [INF] Calculated investment amount: 229.64.
2025-05-18 13:09:25.499 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:09:25.500 +05:30 [INF] Calculated investment amount: 253.28.
2025-05-18 13:09:25.500 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:09:25.501 +05:30 [INF] Calculated investment amount: 257.35.
2025-05-18 13:09:25.503 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:09:25.505 +05:30 [INF] Calculated investment amount: 215.44.
2025-05-18 13:09:25.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:09:25.508 +05:30 [INF] Calculated investment amount: 219.44.
2025-05-18 13:09:25.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:09:25.510 +05:30 [INF] Calculated investment amount: 104.28.
2025-05-18 13:09:25.510 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:09:25.511 +05:30 [INF] Calculated investment amount: 97.17.
2025-05-18 13:09:25.511 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:09:25.512 +05:30 [INF] Calculated investment amount: 58.89.
2025-05-18 13:09:25.513 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:09:25.514 +05:30 [INF] Calculated investment amount: 59.28.
2025-05-18 13:09:25.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:09:25.515 +05:30 [INF] Calculated investment amount: 72.98.
2025-05-18 13:09:25.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:09:25.516 +05:30 [INF] Calculated investment amount: 68.63.
2025-05-18 13:09:25.517 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:09:25.528 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:09:25.529 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:09:25.532 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:25.535 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 87.3899ms
2025-05-18 13:09:25.537 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:25.539 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 99.8722ms
2025-05-18 13:09:26.691 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:09:26.697 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:26.698 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:26.699 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:09:26.701 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:09:26.744 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:09:26.745 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:09:26.746 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:09:26.747 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:09:26.748 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:09:26.749 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:09:26.751 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:09:26.758 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:09:26.759 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:09:26.761 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:09:26.763 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:09:26.765 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:09:26.766 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 13:09:26.769 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 13:09:26.770 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:09:26.773 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 13:09:26.776 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:09:26.778 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:09:26.782 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:09:26.783 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:09:26.784 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:09:26.786 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 85.9315ms
2025-05-18 13:09:26.788 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:26.790 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 98.8282ms
2025-05-18 13:09:26.793 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 477
2025-05-18 13:09:26.796 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:26.797 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:26.798 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:09:26.800 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:09:26.800 +05:30 [INF] Target Amount: 10000
2025-05-18 13:09:26.801 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:09:26.801 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:09:26.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:09:26.806 +05:30 [INF] Calculated investment amount: 481.93.
2025-05-18 13:09:26.807 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:09:26.808 +05:30 [INF] Calculated investment amount: 476.95.
2025-05-18 13:09:26.808 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:09:26.809 +05:30 [INF] Calculated investment amount: 294.7.
2025-05-18 13:09:26.809 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:09:26.810 +05:30 [INF] Calculated investment amount: 296.89.
2025-05-18 13:09:26.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:09:26.812 +05:30 [INF] Calculated investment amount: 249.78.
2025-05-18 13:09:26.813 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:09:26.814 +05:30 [INF] Calculated investment amount: 252.96.
2025-05-18 13:09:26.814 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:09:26.815 +05:30 [INF] Calculated investment amount: 235.13.
2025-05-18 13:09:26.816 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:09:26.816 +05:30 [INF] Calculated investment amount: 229.64.
2025-05-18 13:09:26.817 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:09:26.818 +05:30 [INF] Calculated investment amount: 253.28.
2025-05-18 13:09:26.819 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:09:26.820 +05:30 [INF] Calculated investment amount: 257.35.
2025-05-18 13:09:26.821 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:09:26.822 +05:30 [INF] Calculated investment amount: 215.44.
2025-05-18 13:09:26.823 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:09:26.824 +05:30 [INF] Calculated investment amount: 219.44.
2025-05-18 13:09:26.824 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:09:26.825 +05:30 [INF] Calculated investment amount: 104.28.
2025-05-18 13:09:26.826 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:09:26.829 +05:30 [INF] Calculated investment amount: 97.17.
2025-05-18 13:09:26.830 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:09:26.831 +05:30 [INF] Calculated investment amount: 58.89.
2025-05-18 13:09:26.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:09:26.832 +05:30 [INF] Calculated investment amount: 59.28.
2025-05-18 13:09:26.832 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:09:26.833 +05:30 [INF] Calculated investment amount: 72.98.
2025-05-18 13:09:26.837 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:09:26.840 +05:30 [INF] Calculated investment amount: 68.63.
2025-05-18 13:09:26.842 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:09:26.843 +05:30 [ERR] Error during product allocation calculation.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
2025-05-18 13:09:26.845 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 71
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 90
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:09:26.848 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:26.849 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 50.0278ms
2025-05-18 13:09:26.850 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:26.850 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 56.8619ms
2025-05-18 13:09:43.648 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:09:43.650 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.650 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 2.9841ms
2025-05-18 13:09:43.653 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 95
2025-05-18 13:09:43.656 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.658 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:43.659 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:09:43.663 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:09:43.665 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:09:43.667 +05:30 [INF] Looking up base allocation for key: Low+Short
2025-05-18 13:09:43.668 +05:30 [INF] Base allocation found: {"equity":10,"fixedIncome":40,"commodities":5,"cash":40,"realEstate":5}
2025-05-18 13:09:43.679 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:09:43.680 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:09:43.680 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 13:09:43.681 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 13:09:43.686 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 13:09:43.689 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-18 13:09:43.690 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":3.12,"Energy":1.25,"Agriculture":0.62}
2025-05-18 13:09:43.694 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":8.08,"Savings Acc":13.46,"T. Bill":13.46}
2025-05-18 13:09:43.694 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:09:43.695 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 13:09:43.695 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}
2025-05-18 13:09:43.696 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":3.12,"Energy":1.25,"Agriculture":0.62}
2025-05-18 13:09:43.697 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":8.08,"Savings Acc":13.46,"T. Bill":13.46}
2025-05-18 13:09:43.698 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:09:43.699 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":5,"subAssets":{"Precious Metals":3.12,"Energy":1.25,"Agriculture":0.62}},"cash":{"percentage":35,"subAssets":{"Liquid Mutual Funds":8.08,"Savings Acc":13.46,"T. Bill":13.46}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:09:43.700 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:09:43.701 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"percentage":5,"subAssets":{"Precious Metals":3.12,"Energy":1.25,"Agriculture":0.62}},"cash":{"percentage":35,"subAssets":{"Liquid Mutual Funds":8.08,"Savings Acc":13.46,"T. Bill":13.46}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:09:43.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:09:43.704 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 42.7ms
2025-05-18 13:09:43.709 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:09:43.710 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 57.4222ms
2025-05-18 13:09:43.713 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - null null
2025-05-18 13:09:43.715 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.715 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 204 null null 1.9003ms
2025-05-18 13:09:43.717 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 487
2025-05-18 13:09:43.718 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.718 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:43.719 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:09:43.724 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":20,"SubAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":15,"Corp Bonds":6,"Fixed Dep":9}},"commodities":{"Percentage":5,"SubAssets":{"Precious Metals":3.12,"Energy":1.25,"Agriculture":0.62}},"cash":{"Percentage":35,"SubAssets":{"Liquid Mutual Funds":8.08,"Savings Acc":13.46,"T. Bill":13.46}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-18 13:09:43.725 +05:30 [INF] Target Amount: 10000
2025-05-18 13:09:43.726 +05:30 [INF] Investment Horizon: 2
2025-05-18 13:09:43.726 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:09:43.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-18 13:09:43.728 +05:30 [INF] Calculated investment amount: 538.02.
2025-05-18 13:09:43.728 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-18 13:09:43.729 +05:30 [INF] Calculated investment amount: 502.32.
2025-05-18 13:09:43.729 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.66, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-18 13:09:43.730 +05:30 [INF] Calculated investment amount: 210.17.
2025-05-18 13:09:43.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.34, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-18 13:09:43.731 +05:30 [INF] Calculated investment amount: 189.92.
2025-05-18 13:09:43.731 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-18 13:09:43.732 +05:30 [INF] Calculated investment amount: 99.26.
2025-05-18 13:09:43.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-18 13:09:43.733 +05:30 [INF] Calculated investment amount: 94.43.
2025-05-18 13:09:43.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-18 13:09:43.734 +05:30 [INF] Calculated investment amount: 693.88.
2025-05-18 13:09:43.735 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.35, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-18 13:09:43.736 +05:30 [INF] Calculated investment amount: 669.21.
2025-05-18 13:09:43.737 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-18 13:09:43.740 +05:30 [INF] Calculated investment amount: 257.75.
2025-05-18 13:09:43.741 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-18 13:09:43.743 +05:30 [INF] Calculated investment amount: 266.77.
2025-05-18 13:09:43.743 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-18 13:09:43.744 +05:30 [INF] Calculated investment amount: 397.12.
2025-05-18 13:09:43.744 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-18 13:09:43.745 +05:30 [INF] Calculated investment amount: 409.94.
2025-05-18 13:09:43.746 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.73, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-18 13:09:43.747 +05:30 [INF] Calculated investment amount: 148.87.
2025-05-18 13:09:43.747 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.39, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-18 13:09:43.748 +05:30 [INF] Calculated investment amount: 123.01.
2025-05-18 13:09:43.748 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-18 13:09:43.749 +05:30 [INF] Calculated investment amount: 49.48.
2025-05-18 13:09:43.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.66, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-18 13:09:43.750 +05:30 [INF] Calculated investment amount: 54.25.
2025-05-18 13:09:43.750 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.34, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-18 13:09:43.751 +05:30 [INF] Calculated investment amount: 28.88.
2025-05-18 13:09:43.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-18 13:09:43.753 +05:30 [INF] Calculated investment amount: 24.46.
2025-05-18 13:09:43.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-18 13:09:43.756 +05:30 [INF] Calculated investment amount: 372.28.
2025-05-18 13:09:43.757 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.96, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-18 13:09:43.758 +05:30 [INF] Calculated investment amount: 359.18.
2025-05-18 13:09:43.759 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.28, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-18 13:09:43.759 +05:30 [INF] Calculated investment amount: 586.24.
2025-05-18 13:09:43.759 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-18 13:09:43.760 +05:30 [INF] Calculated investment amount: 663.83.
2025-05-18 13:09:43.761 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.54, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-18 13:09:43.761 +05:30 [INF] Calculated investment amount: 592.07.
2025-05-18 13:09:43.762 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.92, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-18 13:09:43.762 +05:30 [INF] Calculated investment amount: 622.91.
2025-05-18 13:09:43.763 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 2.
2025-05-18 13:09:43.763 +05:30 [INF] Calculated investment amount: 162.74.
2025-05-18 13:09:43.764 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 2.
2025-05-18 13:09:43.764 +05:30 [INF] Calculated investment amount: 172.64.
2025-05-18 13:09:43.765 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 2.
2025-05-18 13:09:43.766 +05:30 [INF] Calculated investment amount: 167.77.
2025-05-18 13:09:43.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 2.
2025-05-18 13:09:43.767 +05:30 [INF] Calculated investment amount: 181.53.
2025-05-18 13:09:43.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 2.
2025-05-18 13:09:43.768 +05:30 [INF] Calculated investment amount: 83.99.
2025-05-18 13:09:43.769 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 2.
2025-05-18 13:09:43.769 +05:30 [INF] Calculated investment amount: 81.29.
2025-05-18 13:09:43.781 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 13:09:43.782 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:43.784 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 62.8248ms
2025-05-18 13:09:43.784 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:09:43.786 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 200 null application/json; charset=utf-8 69.0054ms
2025-05-18 13:09:43.796 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:09:43.798 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:09:43.798 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.799 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.799 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 3.2192ms
2025-05-18 13:09:43.800 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 2.1592ms
2025-05-18 13:09:43.802 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:09:43.803 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:09:43.811 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.811 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:09:43.812 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:09:43.814 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:09:43.819 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:09:43.819 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:09:43.822 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 13:09:43.824 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 13:09:43.824 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:43.827 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.7239ms
2025-05-18 13:09:43.827 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:09:43.828 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 26.0233ms
2025-05-18 13:09:43.828 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:09:43.832 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 10.2899ms
2025-05-18 13:09:43.832 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:09:43.833 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 30.0223ms
2025-05-18 13:12:43.879 +05:30 [INF] Application is shutting down...
2025-05-18 13:22:10.386 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 13:22:10.530 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 13:22:10.533 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 13:22:10.534 +05:30 [INF] Hosting environment: Development
2025-05-18 13:22:10.534 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 13:22:56.667 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - null null
2025-05-18 13:22:56.741 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:22:56.753 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - 204 null null 88.116ms
2025-05-18 13:22:56.765 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Auth/register - application/json 103
2025-05-18 13:22:56.847 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:22:56.854 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 13:22:56.883 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(UserRegisterRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:22:57.049 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:22:57.064 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Register (WisVest) in 178.0141ms
2025-05-18 13:22:57.067 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 13:22:57.069 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Auth/register - 200 null application/json; charset=utf-8 304.2386ms
2025-05-18 13:23:02.071 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 13:23:02.081 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:02.082 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 11.7994ms
2025-05-18 13:23:02.086 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 13:23:02.091 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:02.093 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:23:02.098 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:23:02.199 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:23:02.205 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 102.8633ms
2025-05-18 13:23:02.208 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:23:02.209 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 123.2951ms
2025-05-18 13:23:44.237 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:23:44.241 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:44.242 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.3369ms
2025-05-18 13:23:44.245 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 13:23:44.257 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:44.259 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:23:44.271 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:23:44.296 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:23:44.319 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:23:44.321 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:23:44.325 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:23:44.328 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:23:44.329 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:23:44.329 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:23:44.334 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:23:44.345 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 13:23:44.346 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 13:23:44.347 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 13:23:44.347 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:23:44.348 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 13:23:44.348 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 13:23:44.350 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 13:23:44.351 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 13:23:44.353 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:23:44.354 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 13:23:44.374 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 13:23:44.380 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:23:44.381 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 13:23:44.387 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:23:44.391 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 115.6854ms
2025-05-18 13:23:44.392 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:23:44.394 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 148.5042ms
2025-05-18 13:23:44.396 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - null null
2025-05-18 13:23:44.397 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:44.398 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 204 null null 1.7344ms
2025-05-18 13:23:44.399 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 515
2025-05-18 13:23:44.404 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:23:44.404 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:23:44.408 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:23:44.432 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":41.25,"SubAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"Percentage":21.25,"SubAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}}
2025-05-18 13:23:44.433 +05:30 [INF] Target Amount: 10000
2025-05-18 13:23:44.435 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:23:44.439 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:23:44.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:23:44.450 +05:30 [INF] Calculated investment amount: 331.18.
2025-05-18 13:23:44.452 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:23:44.454 +05:30 [INF] Calculated investment amount: 328.06.
2025-05-18 13:23:44.454 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:23:44.456 +05:30 [INF] Calculated investment amount: 202.94.
2025-05-18 13:23:44.456 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.79, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:23:44.457 +05:30 [INF] Calculated investment amount: 203.91.
2025-05-18 13:23:44.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.37, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:23:44.458 +05:30 [INF] Calculated investment amount: 171.83.
2025-05-18 13:23:44.459 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.01, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:23:44.460 +05:30 [INF] Calculated investment amount: 173.94.
2025-05-18 13:23:44.460 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:23:44.461 +05:30 [INF] Calculated investment amount: 200.14.
2025-05-18 13:23:44.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.12, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:23:44.462 +05:30 [INF] Calculated investment amount: 195.23.
2025-05-18 13:23:44.463 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:23:44.464 +05:30 [INF] Calculated investment amount: 215.47.
2025-05-18 13:23:44.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:23:44.465 +05:30 [INF] Calculated investment amount: 218.57.
2025-05-18 13:23:44.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:23:44.467 +05:30 [INF] Calculated investment amount: 183.24.
2025-05-18 13:23:44.470 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.25, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:23:44.470 +05:30 [INF] Calculated investment amount: 186.7.
2025-05-18 13:23:44.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 13:23:44.472 +05:30 [INF] Calculated investment amount: 13.21.
2025-05-18 13:23:44.473 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 13:23:44.473 +05:30 [INF] Calculated investment amount: 11.94.
2025-05-18 13:23:44.474 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:23:44.475 +05:30 [INF] Calculated investment amount: 7.47.
2025-05-18 13:23:44.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 13:23:44.476 +05:30 [INF] Calculated investment amount: 7.5.
2025-05-18 13:23:44.476 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 13:23:44.477 +05:30 [INF] Calculated investment amount: 9.29.
2025-05-18 13:23:44.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 13:23:44.478 +05:30 [INF] Calculated investment amount: 8.64.
2025-05-18 13:23:44.479 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 13:23:44.480 +05:30 [INF] Calculated investment amount: 368.63.
2025-05-18 13:23:44.480 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:23:44.481 +05:30 [INF] Calculated investment amount: 360.98.
2025-05-18 13:23:44.481 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 13:23:44.482 +05:30 [INF] Calculated investment amount: 396.99.
2025-05-18 13:23:44.483 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 13:23:44.486 +05:30 [INF] Calculated investment amount: 432.36.
2025-05-18 13:23:44.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 13:23:44.488 +05:30 [INF] Calculated investment amount: 472.49.
2025-05-18 13:23:44.488 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 13:23:44.489 +05:30 [INF] Calculated investment amount: 486.4.
2025-05-18 13:23:44.490 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:23:44.520 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:23:44.523 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:23:44.527 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:23:44.529 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 119.9356ms
2025-05-18 13:23:44.530 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:23:44.531 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 131.1645ms
2025-05-18 13:24:03.192 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:24:03.195 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:03.196 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.6236ms
2025-05-18 13:24:03.199 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 13:24:03.204 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:03.206 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:24:03.207 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:24:03.212 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:24:03.218 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:24:03.219 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 13:24:03.220 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 13:24:03.221 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:24:03.224 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:24:03.225 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:24:03.226 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:24:03.229 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 13:24:03.231 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 13:24:03.232 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 13:24:03.232 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 13:24:03.233 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 13:24:03.235 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 13:24:03.236 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 13:24:03.237 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 13:24:03.237 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 13:24:03.238 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 13:24:03.239 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 13:24:03.244 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:24:03.245 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 13:24:03.247 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:24:03.248 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 38.6602ms
2025-05-18 13:24:03.249 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:24:03.252 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 52.8211ms
2025-05-18 13:24:03.257 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - null null
2025-05-18 13:24:03.261 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:03.261 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - 204 null null 4.3061ms
2025-05-18 13:24:03.263 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - application/json 514
2025-05-18 13:24:03.264 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:03.265 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:24:03.266 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:24:03.270 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":22.5,"SubAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"Percentage":37.5,"SubAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 13:24:03.271 +05:30 [INF] Target Amount: 10000
2025-05-18 13:24:03.271 +05:30 [INF] Investment Horizon: 7
2025-05-18 13:24:03.272 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:24:03.273 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-18 13:24:03.274 +05:30 [INF] Calculated investment amount: 375.63.
2025-05-18 13:24:03.274 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-18 13:24:03.275 +05:30 [INF] Calculated investment amount: 364.
2025-05-18 13:24:03.275 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-18 13:24:03.276 +05:30 [INF] Calculated investment amount: 131.1.
2025-05-18 13:24:03.276 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-18 13:24:03.277 +05:30 [INF] Calculated investment amount: 126.68.
2025-05-18 13:24:03.278 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-18 13:24:03.279 +05:30 [INF] Calculated investment amount: 57.95.
2025-05-18 13:24:03.279 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-18 13:24:03.280 +05:30 [INF] Calculated investment amount: 57.1.
2025-05-18 13:24:03.280 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-18 13:24:03.281 +05:30 [INF] Calculated investment amount: 680.12.
2025-05-18 13:24:03.282 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-18 13:24:03.283 +05:30 [INF] Calculated investment amount: 661.17.
2025-05-18 13:24:03.285 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-18 13:24:03.286 +05:30 [INF] Calculated investment amount: 231.56.
2025-05-18 13:24:03.287 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-18 13:24:03.288 +05:30 [INF] Calculated investment amount: 236.96.
2025-05-18 13:24:03.289 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-18 13:24:03.289 +05:30 [INF] Calculated investment amount: 379.47.
2025-05-18 13:24:03.290 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-18 13:24:03.290 +05:30 [INF] Calculated investment amount: 388.71.
2025-05-18 13:24:03.291 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-18 13:24:03.291 +05:30 [INF] Calculated investment amount: 50.84.
2025-05-18 13:24:03.292 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-18 13:24:03.292 +05:30 [INF] Calculated investment amount: 45.64.
2025-05-18 13:24:03.293 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-18 13:24:03.293 +05:30 [INF] Calculated investment amount: 15.66.
2025-05-18 13:24:03.294 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-18 13:24:03.294 +05:30 [INF] Calculated investment amount: 16.61.
2025-05-18 13:24:03.295 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-18 13:24:03.296 +05:30 [INF] Calculated investment amount: 9.6.
2025-05-18 13:24:03.296 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-18 13:24:03.297 +05:30 [INF] Calculated investment amount: 8.72.
2025-05-18 13:24:03.297 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-18 13:24:03.298 +05:30 [INF] Calculated investment amount: 330.3.
2025-05-18 13:24:03.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-18 13:24:03.300 +05:30 [INF] Calculated investment amount: 321.23.
2025-05-18 13:24:03.301 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-18 13:24:03.303 +05:30 [INF] Calculated investment amount: 564.34.
2025-05-18 13:24:03.304 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-18 13:24:03.304 +05:30 [INF] Calculated investment amount: 623.13.
2025-05-18 13:24:03.305 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-18 13:24:03.306 +05:30 [INF] Calculated investment amount: 527.35.
2025-05-18 13:24:03.306 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-18 13:24:03.307 +05:30 [INF] Calculated investment amount: 547.38.
2025-05-18 13:24:03.307 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:24:03.308 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:24:03.309 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:24:03.311 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:24:03.312 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 45.3078ms
2025-05-18 13:24:03.313 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:24:03.314 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - 500 null application/json; charset=utf-8 51.2717ms
2025-05-18 13:24:05.282 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 13:24:05.285 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:05.287 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:24:05.290 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:24:05.294 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:24:05.297 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:24:05.302 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 13:24:05.304 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 13:24:05.306 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:24:05.308 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:24:05.310 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:24:05.311 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:24:05.313 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 13:24:05.314 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 13:24:05.314 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 13:24:05.316 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 13:24:05.318 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 13:24:05.319 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 13:24:05.321 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 13:24:05.322 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 13:24:05.324 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 13:24:05.325 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 13:24:05.326 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 13:24:05.327 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:24:05.329 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 13:24:05.329 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:24:05.331 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 38.8654ms
2025-05-18 13:24:05.336 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:24:05.338 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 56.5213ms
2025-05-18 13:24:05.341 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - application/json 514
2025-05-18 13:24:05.343 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:24:05.343 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:24:05.344 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:24:05.346 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":22.5,"SubAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"Percentage":37.5,"SubAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 13:24:05.347 +05:30 [INF] Target Amount: 10000
2025-05-18 13:24:05.347 +05:30 [INF] Investment Horizon: 7
2025-05-18 13:24:05.347 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:24:05.349 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 7.
2025-05-18 13:24:05.350 +05:30 [INF] Calculated investment amount: 375.63.
2025-05-18 13:24:05.351 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-18 13:24:05.352 +05:30 [INF] Calculated investment amount: 364.
2025-05-18 13:24:05.353 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 7.
2025-05-18 13:24:05.354 +05:30 [INF] Calculated investment amount: 131.1.
2025-05-18 13:24:05.354 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 7.
2025-05-18 13:24:05.355 +05:30 [INF] Calculated investment amount: 126.68.
2025-05-18 13:24:05.355 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 7.
2025-05-18 13:24:05.356 +05:30 [INF] Calculated investment amount: 57.95.
2025-05-18 13:24:05.356 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 7.
2025-05-18 13:24:05.357 +05:30 [INF] Calculated investment amount: 57.1.
2025-05-18 13:24:05.358 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-18 13:24:05.359 +05:30 [INF] Calculated investment amount: 680.12.
2025-05-18 13:24:05.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 7.
2025-05-18 13:24:05.360 +05:30 [INF] Calculated investment amount: 661.17.
2025-05-18 13:24:05.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 7.
2025-05-18 13:24:05.361 +05:30 [INF] Calculated investment amount: 231.56.
2025-05-18 13:24:05.361 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 7.
2025-05-18 13:24:05.363 +05:30 [INF] Calculated investment amount: 236.96.
2025-05-18 13:24:05.363 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 7.
2025-05-18 13:24:05.364 +05:30 [INF] Calculated investment amount: 379.47.
2025-05-18 13:24:05.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 7.
2025-05-18 13:24:05.368 +05:30 [INF] Calculated investment amount: 388.71.
2025-05-18 13:24:05.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 7.
2025-05-18 13:24:05.371 +05:30 [INF] Calculated investment amount: 50.84.
2025-05-18 13:24:05.372 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 7.
2025-05-18 13:24:05.373 +05:30 [INF] Calculated investment amount: 45.64.
2025-05-18 13:24:05.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 7.
2025-05-18 13:24:05.374 +05:30 [INF] Calculated investment amount: 15.66.
2025-05-18 13:24:05.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 7.
2025-05-18 13:24:05.375 +05:30 [INF] Calculated investment amount: 16.61.
2025-05-18 13:24:05.375 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 7.
2025-05-18 13:24:05.376 +05:30 [INF] Calculated investment amount: 9.6.
2025-05-18 13:24:05.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 7.
2025-05-18 13:24:05.377 +05:30 [INF] Calculated investment amount: 8.72.
2025-05-18 13:24:05.378 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 7.
2025-05-18 13:24:05.378 +05:30 [INF] Calculated investment amount: 330.3.
2025-05-18 13:24:05.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 7.
2025-05-18 13:24:05.379 +05:30 [INF] Calculated investment amount: 321.23.
2025-05-18 13:24:05.380 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 7.
2025-05-18 13:24:05.380 +05:30 [INF] Calculated investment amount: 564.34.
2025-05-18 13:24:05.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 7.
2025-05-18 13:24:05.382 +05:30 [INF] Calculated investment amount: 623.13.
2025-05-18 13:24:05.383 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 7.
2025-05-18 13:24:05.384 +05:30 [INF] Calculated investment amount: 527.35.
2025-05-18 13:24:05.385 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 7.
2025-05-18 13:24:05.386 +05:30 [INF] Calculated investment amount: 547.38.
2025-05-18 13:24:05.387 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:24:05.387 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:24:05.389 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:24:05.390 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:24:05.391 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 46.0937ms
2025-05-18 13:24:05.391 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:24:05.392 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=7 - 500 null application/json; charset=utf-8 50.9393ms
2025-05-18 13:25:19.903 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:25:19.906 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:19.907 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.3905ms
2025-05-18 13:25:19.909 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:19.911 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:19.911 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:19.912 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:19.916 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:19.918 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:19.919 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:19.920 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:19.921 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:19.922 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:19.923 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:19.923 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:19.925 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:19.926 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:19.927 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:19.929 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:19.930 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:19.932 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:19.933 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:19.934 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:19.934 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:19.935 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:19.936 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:19.939 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:19.940 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:19.941 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:19.942 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 26.5528ms
2025-05-18 13:25:19.943 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:19.943 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 34.6216ms
2025-05-18 13:25:19.946 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - null null
2025-05-18 13:25:19.949 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:19.949 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 204 null null 3.4008ms
2025-05-18 13:25:19.952 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:19.956 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:19.957 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:19.958 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:19.960 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:19.961 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:19.962 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:19.963 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:19.965 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:19.966 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:19.967 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:19.968 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:19.969 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:19.970 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:19.970 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:19.972 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:19.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:19.973 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:19.974 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:19.974 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:19.975 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:19.977 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:19.978 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:19.979 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:19.979 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:19.980 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:19.981 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:19.982 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:19.982 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:19.983 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:19.984 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:19.985 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:19.986 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:19.987 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:19.989 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:19.991 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:19.993 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 33.0725ms
2025-05-18 13:25:19.995 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:19.996 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 43.2447ms
2025-05-18 13:25:20.995 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:20.999 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.001 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.003 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.005 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.007 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.008 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.008 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.009 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.010 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.011 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.011 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.014 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.015 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.016 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.017 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.020 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.021 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.023 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.024 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.026 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.027 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.029 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.032 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.033 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.034 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.037 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 32.263ms
2025-05-18 13:25:21.040 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.042 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 47.6294ms
2025-05-18 13:25:21.048 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.050 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.051 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.052 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.055 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.056 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.057 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.058 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.060 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.061 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.062 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.064 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.064 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.065 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.066 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.067 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.068 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.069 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.069 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.070 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.071 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.071 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.072 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.072 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.073 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.074 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.075 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.076 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.077 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.078 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.079 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.080 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.082 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.084 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 29.1719ms
2025-05-18 13:25:21.085 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.086 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 38.3749ms
2025-05-18 13:25:21.174 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:21.177 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.179 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.182 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.185 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.188 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.190 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.191 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.192 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.193 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.195 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.196 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.197 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.199 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.201 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.202 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.203 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.204 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.206 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.207 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.207 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.208 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.208 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.210 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.210 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.211 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 26.6682ms
2025-05-18 13:25:21.212 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.213 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 39.374ms
2025-05-18 13:25:21.215 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.218 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.218 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.219 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.220 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.220 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.221 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.221 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.222 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.223 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.224 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.225 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.226 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.227 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.228 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.229 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.229 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.230 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.231 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.232 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.232 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.234 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.235 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.236 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.236 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.237 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.237 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.238 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.239 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.239 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.240 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.241 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.241 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.242 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.246 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.249 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.250 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 30.5808ms
2025-05-18 13:25:21.251 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.252 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 37.6469ms
2025-05-18 13:25:21.332 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:21.338 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.339 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.340 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.342 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.344 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.345 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.346 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.347 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.348 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.350 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.351 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.353 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.355 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.356 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.357 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.358 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.359 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.360 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.361 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.362 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.363 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.364 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.366 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.368 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.369 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.371 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 28.6513ms
2025-05-18 13:25:21.372 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.373 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 40.029ms
2025-05-18 13:25:21.374 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.376 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.377 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.377 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.379 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.380 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.380 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.381 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.383 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.384 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.386 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.387 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.388 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.388 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.389 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.390 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.391 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.392 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.393 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.394 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.397 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.398 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.398 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.399 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.402 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.403 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.404 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.405 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.406 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.406 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.408 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.411 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.412 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 33.1807ms
2025-05-18 13:25:21.413 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.413 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 38.9366ms
2025-05-18 13:25:21.489 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:21.491 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.492 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.493 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.494 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.495 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.496 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.496 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.497 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.498 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.498 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.499 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.500 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.500 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.501 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.501 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.502 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.503 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.504 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.505 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.505 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.506 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.506 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.508 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.508 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.509 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 15.6765ms
2025-05-18 13:25:21.510 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.511 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 21.2041ms
2025-05-18 13:25:21.513 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.514 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.515 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.515 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.517 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.518 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.519 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.519 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.520 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.521 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.522 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.523 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.523 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.524 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.525 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.525 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.526 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.526 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.527 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.528 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.529 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.530 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.531 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.532 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.533 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.535 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.536 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.536 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.537 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.538 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.538 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.539 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.541 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.543 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.544 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 27.6284ms
2025-05-18 13:25:21.545 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.546 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 33.3805ms
2025-05-18 13:25:21.670 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:21.673 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.674 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.675 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.677 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.678 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.678 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.679 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.679 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.680 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.680 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.681 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.682 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.682 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.683 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.685 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.686 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.687 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.687 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.688 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.688 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.689 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.689 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.691 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.692 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.692 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.693 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 16.627ms
2025-05-18 13:25:21.694 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.694 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 23.7498ms
2025-05-18 13:25:21.697 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.699 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.700 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.701 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.703 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.704 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.705 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.705 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.706 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.707 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.708 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.709 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.709 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.710 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.710 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.711 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.712 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.714 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.716 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.717 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.777 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.781 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.783 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.785 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.786 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.788 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.789 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.790 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.790 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.802 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.804 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.809 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.810 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 106.8897ms
2025-05-18 13:25:21.810 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.811 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 114.3ms
2025-05-18 13:25:21.844 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:21.848 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.849 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.850 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:21.852 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:21.853 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:21.854 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:21.855 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:21.855 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:21.856 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:21.857 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:21.857 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:21.858 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.858 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.859 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.859 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.860 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.861 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:21.862 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:21.863 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:21.864 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:21.865 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:21.865 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.867 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:21.868 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:21.869 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:21.870 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 18.0908ms
2025-05-18 13:25:21.870 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:21.871 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 27.2715ms
2025-05-18 13:25:21.873 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:21.875 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:21.875 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.876 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:21.877 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:21.878 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:21.878 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:21.879 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:21.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:21.881 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:21.882 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.883 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:21.883 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.884 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:21.884 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:21.885 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:21.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:21.886 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:21.887 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:21.887 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:21.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:21.888 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:21.889 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.890 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:21.890 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:21.891 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:21.891 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:21.892 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:21.892 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:21.893 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:21.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:21.894 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:21.895 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:21.896 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:21.899 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:21.901 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:21.902 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 24.9228ms
2025-05-18 13:25:21.903 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:21.903 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 30.2758ms
2025-05-18 13:25:22.072 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 13:25:22.078 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:22.079 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:22.081 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:22.084 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:22.085 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:22.086 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:25:22.087 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:25:22.088 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 13:25:22.088 +05:30 [INF] Age adjustments found: {}
2025-05-18 13:25:22.090 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:22.091 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:22.093 +05:30 [INF] Sub-allocations for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:22.095 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:22.097 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:22.098 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:22.100 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:22.101 +05:30 [INF] Added sub-assets for equity: {"Large Cap":15,"Mid Cap":20,"Small Cap":25}
2025-05-18 13:25:22.104 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}
2025-05-18 13:25:22.106 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:22.106 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:25:22.107 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 13:25:22.109 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:22.112 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:22.113 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"percentage":5,"subAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 13:25:22.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:22.116 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 32.4806ms
2025-05-18 13:25:22.117 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:22.119 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 46.701ms
2025-05-18 13:25:22.122 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 487
2025-05-18 13:25:22.124 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:22.125 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:22.126 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:22.129 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":15,"Mid Cap":20,"Small Cap":25}},"fixedIncome":{"Percentage":5,"SubAssets":{"Gov Bonds":0.83,"Corp Bonds":3.33,"Fixed Dep":0.83}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 13:25:22.131 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:22.132 +05:30 [INF] Investment Horizon: 10
2025-05-18 13:25:22.134 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:22.137 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.81, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 13:25:22.139 +05:30 [INF] Calculated investment amount: 301.11.
2025-05-18 13:25:22.140 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.19, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 13:25:22.140 +05:30 [INF] Calculated investment amount: 298.2.
2025-05-18 13:25:22.141 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.64, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 13:25:22.142 +05:30 [INF] Calculated investment amount: 327.65.
2025-05-18 13:25:22.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 13:25:22.145 +05:30 [INF] Calculated investment amount: 329.64.
2025-05-18 13:25:22.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.87, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 13:25:22.151 +05:30 [INF] Calculated investment amount: 347.16.
2025-05-18 13:25:22.151 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.13, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 13:25:22.152 +05:30 [INF] Calculated investment amount: 351.07.
2025-05-18 13:25:22.153 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 13:25:22.154 +05:30 [INF] Calculated investment amount: 25.78.
2025-05-18 13:25:22.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 13:25:22.155 +05:30 [INF] Calculated investment amount: 25.65.
2025-05-18 13:25:22.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 13:25:22.157 +05:30 [INF] Calculated investment amount: 84.43.
2025-05-18 13:25:22.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 13:25:22.159 +05:30 [INF] Calculated investment amount: 85.62.
2025-05-18 13:25:22.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.41, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 13:25:22.161 +05:30 [INF] Calculated investment amount: 24.
2025-05-18 13:25:22.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.42, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 13:25:22.164 +05:30 [INF] Calculated investment amount: 24.13.
2025-05-18 13:25:22.164 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:22.165 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:22.168 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:22.171 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:22.172 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 43.3902ms
2025-05-18 13:25:22.173 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:22.174 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 52.2093ms
2025-05-18 13:25:37.374 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:25:37.378 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:37.379 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.5992ms
2025-05-18 13:25:37.382 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 13:25:37.384 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:37.385 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:37.386 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:37.388 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:37.392 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:37.393 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:25:37.394 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:25:37.395 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:25:37.398 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:25:37.398 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:37.399 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:37.401 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:37.403 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:37.405 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:37.406 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:37.408 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:37.410 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:37.414 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:37.415 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:37.416 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:37.417 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:37.418 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:37.420 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:37.421 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:37.422 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:37.423 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 34.659ms
2025-05-18 13:25:37.424 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:37.425 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 42.7092ms
2025-05-18 13:25:37.429 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-18 13:25:37.430 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:37.431 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 2.1563ms
2025-05-18 13:25:37.433 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 483
2025-05-18 13:25:37.436 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:37.437 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:37.439 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:37.442 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}}
2025-05-18 13:25:37.443 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:37.443 +05:30 [INF] Investment Horizon: 30
2025-05-18 13:25:37.444 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:37.446 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 13:25:37.448 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-18 13:25:37.448 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:25:37.450 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-18 13:25:37.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 13:25:37.452 +05:30 [INF] Calculated investment amount: 23.3.
2025-05-18 13:25:37.452 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 13:25:37.453 +05:30 [INF] Calculated investment amount: 30.67.
2025-05-18 13:25:37.454 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 13:25:37.455 +05:30 [INF] Calculated investment amount: 15.15.
2025-05-18 13:25:37.456 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 13:25:37.456 +05:30 [INF] Calculated investment amount: 17.65.
2025-05-18 13:25:37.457 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:25:37.458 +05:30 [INF] Calculated investment amount: 53.22.
2025-05-18 13:25:37.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-18 13:25:37.459 +05:30 [INF] Calculated investment amount: 53.9.
2025-05-18 13:25:37.460 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-18 13:25:37.460 +05:30 [INF] Calculated investment amount: 40.85.
2025-05-18 13:25:37.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-18 13:25:37.463 +05:30 [INF] Calculated investment amount: 39.09.
2025-05-18 13:25:37.463 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-18 13:25:37.464 +05:30 [INF] Calculated investment amount: 44.34.
2025-05-18 13:25:37.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-18 13:25:37.466 +05:30 [INF] Calculated investment amount: 43.41.
2025-05-18 13:25:37.466 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:37.468 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:37.470 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:37.472 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:37.473 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 31.1436ms
2025-05-18 13:25:37.474 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:37.474 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 40.9597ms
2025-05-18 13:25:38.485 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 13:25:38.492 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.493 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.495 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:38.498 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:38.500 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:38.502 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:25:38.503 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:25:38.505 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:25:38.506 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:25:38.506 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:38.507 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:38.510 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.513 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.514 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.516 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.518 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.519 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.520 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.521 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.522 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.524 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.526 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.529 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:38.530 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:38.534 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 36.2029ms
2025-05-18 13:25:38.535 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.536 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 51.7472ms
2025-05-18 13:25:38.541 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 483
2025-05-18 13:25:38.544 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.545 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.546 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:38.552 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}}
2025-05-18 13:25:38.554 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:38.556 +05:30 [INF] Investment Horizon: 30
2025-05-18 13:25:38.559 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:38.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 13:25:38.561 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-18 13:25:38.562 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.563 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-18 13:25:38.564 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.565 +05:30 [INF] Calculated investment amount: 23.3.
2025-05-18 13:25:38.566 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 13:25:38.567 +05:30 [INF] Calculated investment amount: 30.67.
2025-05-18 13:25:38.568 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 13:25:38.568 +05:30 [INF] Calculated investment amount: 15.15.
2025-05-18 13:25:38.569 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.570 +05:30 [INF] Calculated investment amount: 17.65.
2025-05-18 13:25:38.570 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:25:38.572 +05:30 [INF] Calculated investment amount: 53.22.
2025-05-18 13:25:38.573 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.574 +05:30 [INF] Calculated investment amount: 53.9.
2025-05-18 13:25:38.574 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.575 +05:30 [INF] Calculated investment amount: 40.85.
2025-05-18 13:25:38.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-18 13:25:38.576 +05:30 [INF] Calculated investment amount: 39.09.
2025-05-18 13:25:38.577 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.578 +05:30 [INF] Calculated investment amount: 44.34.
2025-05-18 13:25:38.578 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-18 13:25:38.580 +05:30 [INF] Calculated investment amount: 43.41.
2025-05-18 13:25:38.580 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:38.581 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:38.583 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:38.585 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:38.586 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 33.8496ms
2025-05-18 13:25:38.586 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.587 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 45.6256ms
2025-05-18 13:25:38.650 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 13:25:38.658 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.659 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.659 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:38.661 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:38.664 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:38.665 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:25:38.665 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:25:38.666 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:25:38.666 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:25:38.667 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:38.667 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:38.668 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.670 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.671 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.673 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.675 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.676 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.676 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.677 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.677 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.678 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.679 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.681 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:38.682 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.683 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:38.683 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 23.1351ms
2025-05-18 13:25:38.684 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.685 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 34.6841ms
2025-05-18 13:25:38.687 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 483
2025-05-18 13:25:38.689 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.689 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.690 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:38.692 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}}
2025-05-18 13:25:38.692 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:38.693 +05:30 [INF] Investment Horizon: 30
2025-05-18 13:25:38.693 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:38.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 13:25:38.696 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-18 13:25:38.697 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.698 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-18 13:25:38.699 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.700 +05:30 [INF] Calculated investment amount: 23.3.
2025-05-18 13:25:38.700 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 13:25:38.701 +05:30 [INF] Calculated investment amount: 30.67.
2025-05-18 13:25:38.702 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 13:25:38.703 +05:30 [INF] Calculated investment amount: 15.15.
2025-05-18 13:25:38.703 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.704 +05:30 [INF] Calculated investment amount: 17.65.
2025-05-18 13:25:38.704 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:25:38.705 +05:30 [INF] Calculated investment amount: 53.22.
2025-05-18 13:25:38.706 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.707 +05:30 [INF] Calculated investment amount: 53.9.
2025-05-18 13:25:38.707 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.708 +05:30 [INF] Calculated investment amount: 40.85.
2025-05-18 13:25:38.708 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-18 13:25:38.709 +05:30 [INF] Calculated investment amount: 39.09.
2025-05-18 13:25:38.710 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.711 +05:30 [INF] Calculated investment amount: 44.34.
2025-05-18 13:25:38.711 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-18 13:25:38.712 +05:30 [INF] Calculated investment amount: 43.41.
2025-05-18 13:25:38.713 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:38.715 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:38.716 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:38.718 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:38.719 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 27.5749ms
2025-05-18 13:25:38.720 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.720 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 33.4135ms
2025-05-18 13:25:38.871 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 13:25:38.879 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.880 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.882 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:25:38.887 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:25:38.890 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:25:38.891 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:25:38.892 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:25:38.894 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:25:38.895 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:25:38.898 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:25:38.900 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:25:38.902 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.904 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.905 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.907 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.909 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.911 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 13:25:38.912 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 13:25:38.915 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 13:25:38.917 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 13:25:38.918 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 13:25:38.921 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.923 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:25:38.924 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 13:25:38.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:25:38.928 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 40.9052ms
2025-05-18 13:25:38.930 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:25:38.932 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 60.9158ms
2025-05-18 13:25:38.935 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 483
2025-05-18 13:25:38.938 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:25:38.940 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.941 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:25:38.944 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}}
2025-05-18 13:25:38.948 +05:30 [INF] Target Amount: 10000
2025-05-18 13:25:38.949 +05:30 [INF] Investment Horizon: 30
2025-05-18 13:25:38.950 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:25:38.952 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 13:25:38.954 +05:30 [INF] Calculated investment amount: 59.72.
2025-05-18 13:25:38.957 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.958 +05:30 [INF] Calculated investment amount: 68.34.
2025-05-18 13:25:38.958 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.959 +05:30 [INF] Calculated investment amount: 23.3.
2025-05-18 13:25:38.960 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 13:25:38.960 +05:30 [INF] Calculated investment amount: 30.67.
2025-05-18 13:25:38.961 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 13:25:38.962 +05:30 [INF] Calculated investment amount: 15.15.
2025-05-18 13:25:38.964 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 13:25:38.966 +05:30 [INF] Calculated investment amount: 17.65.
2025-05-18 13:25:38.967 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:25:38.968 +05:30 [INF] Calculated investment amount: 53.22.
2025-05-18 13:25:38.968 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.969 +05:30 [INF] Calculated investment amount: 53.9.
2025-05-18 13:25:38.969 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-18 13:25:38.970 +05:30 [INF] Calculated investment amount: 40.85.
2025-05-18 13:25:38.971 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-18 13:25:38.972 +05:30 [INF] Calculated investment amount: 39.09.
2025-05-18 13:25:38.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-18 13:25:38.973 +05:30 [INF] Calculated investment amount: 44.34.
2025-05-18 13:25:38.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-18 13:25:38.975 +05:30 [INF] Calculated investment amount: 43.41.
2025-05-18 13:25:38.976 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:25:38.978 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:25:38.985 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:25:38.988 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:25:38.988 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 44.8218ms
2025-05-18 13:25:38.989 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:25:38.990 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 54.9398ms
2025-05-18 13:26:02.548 +05:30 [INF] Application is shutting down...
2025-05-18 13:26:20.364 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 13:26:20.473 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 13:26:20.476 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 13:26:20.477 +05:30 [INF] Hosting environment: Development
2025-05-18 13:26:20.478 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 13:26:39.647 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:26:39.712 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:39.720 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 74.5774ms
2025-05-18 13:26:39.733 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 13:26:39.858 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:39.864 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:26:39.902 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:26:40.009 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:26:40.047 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:26:40.048 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:26:40.056 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:26:40.058 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:26:40.060 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:26:40.062 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:26:40.070 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:26:40.086 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 13:26:40.089 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 13:26:40.091 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 13:26:40.092 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:26:40.094 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 13:26:40.096 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 13:26:40.097 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 13:26:40.097 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 13:26:40.098 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:26:40.099 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 13:26:40.137 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 13:26:40.149 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:26:40.150 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 13:26:40.159 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:26:40.178 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 264.151ms
2025-05-18 13:26:40.182 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:26:40.185 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 451.7744ms
2025-05-18 13:26:40.191 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - null null
2025-05-18 13:26:40.196 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:40.197 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - 204 null null 5.7882ms
2025-05-18 13:26:40.199 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - application/json 525
2025-05-18 13:26:40.202 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:40.203 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:26:40.208 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:26:40.240 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":68.75,"SubAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"Percentage":-1.25,"SubAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"Percentage":-1.25,"SubAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-6.25,"SubAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}}
2025-05-18 13:26:40.243 +05:30 [INF] Target Amount: 50000
2025-05-18 13:26:40.245 +05:30 [INF] Investment Horizon: 8
2025-05-18 13:26:40.250 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:26:40.269 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.95, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 8.
2025-05-18 13:26:40.275 +05:30 [INF] Calculated investment amount: 2087.62.
2025-05-18 13:26:40.278 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.24, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 8.
2025-05-18 13:26:40.281 +05:30 [INF] Calculated investment amount: 2037.59.
2025-05-18 13:26:40.282 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.19, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 8.
2025-05-18 13:26:40.284 +05:30 [INF] Calculated investment amount: 2375.49.
2025-05-18 13:26:40.285 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.73, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 8.
2025-05-18 13:26:40.289 +05:30 [INF] Calculated investment amount: 2328.02.
2025-05-18 13:26:40.290 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.75, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 8.
2025-05-18 13:26:40.291 +05:30 [INF] Calculated investment amount: 2585.37.
2025-05-18 13:26:40.292 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.9, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 8.
2025-05-18 13:26:40.293 +05:30 [INF] Calculated investment amount: 2577.59.
2025-05-18 13:26:40.295 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:26:40.316 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:26:40.321 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:26:40.329 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:26:40.335 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 124.6701ms
2025-05-18 13:26:40.337 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:26:40.338 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - 500 null application/json; charset=utf-8 138.7063ms
2025-05-18 13:26:41.395 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 13:26:41.402 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:41.404 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:26:41.405 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:26:41.407 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:26:41.410 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:26:41.411 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 13:26:41.412 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 13:26:41.413 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:26:41.415 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:26:41.416 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 13:26:41.417 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 13:26:41.419 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 13:26:41.421 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 13:26:41.421 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 13:26:41.422 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:26:41.423 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 13:26:41.424 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 13:26:41.424 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 13:26:41.425 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 13:26:41.427 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 13:26:41.428 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 13:26:41.429 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 13:26:41.432 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:26:41.434 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 13:26:41.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:26:41.436 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 29.6675ms
2025-05-18 13:26:41.437 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:26:41.438 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 43.4481ms
2025-05-18 13:26:41.440 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - application/json 525
2025-05-18 13:26:41.442 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:41.442 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:26:41.444 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:26:41.447 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":68.75,"SubAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"Percentage":-1.25,"SubAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"Percentage":-1.25,"SubAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-6.25,"SubAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}}
2025-05-18 13:26:41.448 +05:30 [INF] Target Amount: 50000
2025-05-18 13:26:41.449 +05:30 [INF] Investment Horizon: 8
2025-05-18 13:26:41.450 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:26:41.453 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.95, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 8.
2025-05-18 13:26:41.454 +05:30 [INF] Calculated investment amount: 2087.62.
2025-05-18 13:26:41.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.24, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 8.
2025-05-18 13:26:41.456 +05:30 [INF] Calculated investment amount: 2037.59.
2025-05-18 13:26:41.457 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.19, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 8.
2025-05-18 13:26:41.458 +05:30 [INF] Calculated investment amount: 2375.49.
2025-05-18 13:26:41.458 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.73, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 8.
2025-05-18 13:26:41.460 +05:30 [INF] Calculated investment amount: 2328.02.
2025-05-18 13:26:41.462 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.75, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 8.
2025-05-18 13:26:41.463 +05:30 [INF] Calculated investment amount: 2585.37.
2025-05-18 13:26:41.464 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.9, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 8.
2025-05-18 13:26:41.465 +05:30 [INF] Calculated investment amount: 2577.59.
2025-05-18 13:26:41.466 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 13:26:41.466 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 13:26:41.468 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 13:26:41.471 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:26:41.472 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 26.4652ms
2025-05-18 13:26:41.472 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:26:41.473 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=8 - 500 null application/json; charset=utf-8 33.3013ms
2025-05-18 13:26:49.527 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 13:26:49.529 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:49.530 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 3.7975ms
2025-05-18 13:26:49.535 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 59
2025-05-18 13:26:49.540 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:49.542 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:26:49.547 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:26:49.672 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:26:49.674 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 125.1876ms
2025-05-18 13:26:49.675 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:26:49.677 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 401 null application/json; charset=utf-8 141.1034ms
2025-05-18 13:26:57.080 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 13:26:57.082 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:57.083 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 2.8769ms
2025-05-18 13:26:57.085 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 60
2025-05-18 13:26:57.090 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:26:57.090 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:26:57.091 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 13:26:57.226 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:26:57.230 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 136.5941ms
2025-05-18 13:26:57.231 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 13:26:57.232 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 146.7409ms
2025-05-18 13:27:28.095 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:27:28.096 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.097 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 2.6011ms
2025-05-18 13:27:28.100 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 108
2025-05-18 13:27:28.102 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.103 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:27:28.105 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:27:28.114 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:27:28.116 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:27:28.119 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 13:27:28.120 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 13:27:28.121 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 13:27:28.128 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 13:27:28.131 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 13:27:28.132 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 13:27:28.136 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 13:27:28.137 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 13:27:28.138 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:27:28.139 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 13:27:28.142 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:27:28.143 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 13:27:28.145 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 13:27:28.149 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 13:27:28.151 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 13:27:28.152 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 13:27:28.153 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:27:28.154 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:27:28.161 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 13:27:28.163 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:27:28.166 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.1484ms
2025-05-18 13:27:28.167 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:27:28.167 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 67.46ms
2025-05-18 13:27:28.169 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - null null
2025-05-18 13:27:28.171 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.171 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 204 null null 2.0706ms
2025-05-18 13:27:28.173 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 479
2025-05-18 13:27:28.177 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.179 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:27:28.180 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:27:28.183 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 13:27:28.183 +05:30 [INF] Target Amount: 10000
2025-05-18 13:27:28.184 +05:30 [INF] Investment Horizon: 20
2025-05-18 13:27:28.184 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:27:28.186 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 13:27:28.187 +05:30 [INF] Calculated investment amount: 123.82.
2025-05-18 13:27:28.189 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 13:27:28.192 +05:30 [INF] Calculated investment amount: 131.93.
2025-05-18 13:27:28.193 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 13:27:28.194 +05:30 [INF] Calculated investment amount: 60.5.
2025-05-18 13:27:28.195 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 13:27:28.196 +05:30 [INF] Calculated investment amount: 69.71.
2025-05-18 13:27:28.197 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 13:27:28.198 +05:30 [INF] Calculated investment amount: 44.97.
2025-05-18 13:27:28.198 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 13:27:28.199 +05:30 [INF] Calculated investment amount: 48.75.
2025-05-18 13:27:28.199 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 13:27:28.200 +05:30 [INF] Calculated investment amount: 230.66.
2025-05-18 13:27:28.200 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 13:27:28.201 +05:30 [INF] Calculated investment amount: 230.22.
2025-05-18 13:27:28.202 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 13:27:28.202 +05:30 [INF] Calculated investment amount: 210.06.
2025-05-18 13:27:28.203 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 13:27:28.204 +05:30 [INF] Calculated investment amount: 207.22.
2025-05-18 13:27:28.204 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 13:27:28.205 +05:30 [INF] Calculated investment amount: 201.87.
2025-05-18 13:27:28.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 13:27:28.207 +05:30 [INF] Calculated investment amount: 201.62.
2025-05-18 13:27:28.208 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 13:27:28.209 +05:30 [INF] Calculated investment amount: 49.21.
2025-05-18 13:27:28.210 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 13:27:28.212 +05:30 [INF] Calculated investment amount: 52.75.
2025-05-18 13:27:28.212 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 13:27:28.213 +05:30 [INF] Calculated investment amount: 24.43.
2025-05-18 13:27:28.214 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 13:27:28.214 +05:30 [INF] Calculated investment amount: 22.24.
2025-05-18 13:27:28.215 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 13:27:28.216 +05:30 [INF] Calculated investment amount: 32.28.
2025-05-18 13:27:28.216 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 13:27:28.217 +05:30 [INF] Calculated investment amount: 34.89.
2025-05-18 13:27:28.217 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 13:27:28.218 +05:30 [INF] Calculated investment amount: 27.57.
2025-05-18 13:27:28.219 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 13:27:28.220 +05:30 [INF] Calculated investment amount: 27.89.
2025-05-18 13:27:28.220 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 13:27:28.221 +05:30 [INF] Calculated investment amount: 35.18.
2025-05-18 13:27:28.221 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 13:27:28.222 +05:30 [INF] Calculated investment amount: 36.51.
2025-05-18 13:27:28.227 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 13:27:28.229 +05:30 [INF] Calculated investment amount: 35.87.
2025-05-18 13:27:28.230 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 13:27:28.231 +05:30 [INF] Calculated investment amount: 35.98.
2025-05-18 13:27:28.231 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 20.
2025-05-18 13:27:28.232 +05:30 [INF] Calculated investment amount: 16.54.
2025-05-18 13:27:28.232 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 20.
2025-05-18 13:27:28.233 +05:30 [INF] Calculated investment amount: 15.79.
2025-05-18 13:27:28.234 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 20.
2025-05-18 13:27:28.234 +05:30 [INF] Calculated investment amount: 16.4.
2025-05-18 13:27:28.235 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 20.
2025-05-18 13:27:28.236 +05:30 [INF] Calculated investment amount: 15.88.
2025-05-18 13:27:28.236 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 20.
2025-05-18 13:27:28.237 +05:30 [INF] Calculated investment amount: 13.76.
2025-05-18 13:27:28.237 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 20.
2025-05-18 13:27:28.238 +05:30 [INF] Calculated investment amount: 14.18.
2025-05-18 13:27:28.249 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 13:27:28.250 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:27:28.253 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 72.1793ms
2025-05-18 13:27:28.255 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:27:28.259 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 200 null application/json; charset=utf-8 85.2459ms
2025-05-18 13:27:28.272 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:27:28.274 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:27:28.277 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.280 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.280 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.5089ms
2025-05-18 13:27:28.281 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.8725ms
2025-05-18 13:27:28.283 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:27:28.284 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:27:28.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:28.296 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:27:28.297 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:27:28.300 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:27:28.301 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:27:28.303 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 13:27:28.304 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 13:27:28.306 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:27:28.309 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.2114ms
2025-05-18 13:27:28.309 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:27:28.311 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 27.8114ms
2025-05-18 13:27:28.311 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:27:28.318 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.6784ms
2025-05-18 13:27:28.397 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:27:28.398 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 114.5575ms
2025-05-18 13:27:48.304 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 13:27:48.307 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:48.309 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 5.154ms
2025-05-18 13:27:48.312 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 13:27:48.316 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:48.319 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:27:48.329 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 13:27:48.334 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 13:27:48.339 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 7.7737ms
2025-05-18 13:27:48.341 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:27:48.342 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 29.6216ms
2025-05-18 13:27:51.488 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 13:27:51.492 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:27:51.493 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:27:51.494 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 13:27:51.497 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 13:27:51.499 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.7497ms
2025-05-18 13:27:51.501 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 13:27:51.503 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 14.9394ms
2025-05-18 13:28:46.813 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 13:28:46.816 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.817 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.9513ms
2025-05-18 13:28:46.825 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-18 13:28:46.828 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.829 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:28:46.830 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:28:46.833 +05:30 [INF] Starting allocation calculation...
2025-05-18 13:28:46.835 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 13:28:46.836 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 13:28:46.847 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 13:28:46.849 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 13:28:46.850 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 13:28:46.850 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 13:28:46.851 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 13:28:46.860 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 13:28:46.863 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-18 13:28:46.863 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 13:28:46.864 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 13:28:46.865 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:28:46.865 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 13:28:46.866 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-18 13:28:46.866 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 13:28:46.867 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 13:28:46.868 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 13:28:46.869 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:28:46.874 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 13:28:46.877 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 13:28:46.878 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 13:28:46.879 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.808ms
2025-05-18 13:28:46.880 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 13:28:46.881 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 56.005ms
2025-05-18 13:28:46.883 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-18 13:28:46.884 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.884 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 1.9191ms
2025-05-18 13:28:46.886 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 486
2025-05-18 13:28:46.889 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.890 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:28:46.891 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:28:46.892 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-18 13:28:46.893 +05:30 [INF] Target Amount: 10000
2025-05-18 13:28:46.894 +05:30 [INF] Investment Horizon: 30
2025-05-18 13:28:46.894 +05:30 [INF] Starting product allocation calculation.
2025-05-18 13:28:46.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 13:28:46.898 +05:30 [INF] Calculated investment amount: 74.62.
2025-05-18 13:28:46.898 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:28:46.899 +05:30 [INF] Calculated investment amount: 85.46.
2025-05-18 13:28:46.900 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 13:28:46.900 +05:30 [INF] Calculated investment amount: 15.54.
2025-05-18 13:28:46.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 13:28:46.903 +05:30 [INF] Calculated investment amount: 20.44.
2025-05-18 13:28:46.903 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 13:28:46.905 +05:30 [INF] Calculated investment amount: 5.04.
2025-05-18 13:28:46.906 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 13:28:46.907 +05:30 [INF] Calculated investment amount: 5.89.
2025-05-18 13:28:46.908 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:28:46.910 +05:30 [INF] Calculated investment amount: 206.62.
2025-05-18 13:28:46.910 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 30.
2025-05-18 13:28:46.911 +05:30 [INF] Calculated investment amount: 209.96.
2025-05-18 13:28:46.912 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 30.
2025-05-18 13:28:46.913 +05:30 [INF] Calculated investment amount: 47.52.
2025-05-18 13:28:46.914 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 30.
2025-05-18 13:28:46.914 +05:30 [INF] Calculated investment amount: 45.73.
2025-05-18 13:28:46.915 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 30.
2025-05-18 13:28:46.916 +05:30 [INF] Calculated investment amount: 103.53.
2025-05-18 13:28:46.916 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 30.
2025-05-18 13:28:46.917 +05:30 [INF] Calculated investment amount: 101.23.
2025-05-18 13:28:46.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 30.
2025-05-18 13:28:46.918 +05:30 [INF] Calculated investment amount: 36.35.
2025-05-18 13:28:46.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 30.
2025-05-18 13:28:46.919 +05:30 [INF] Calculated investment amount: 44.63.
2025-05-18 13:28:46.920 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 13:28:46.921 +05:30 [INF] Calculated investment amount: 8.42.
2025-05-18 13:28:46.922 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 30.
2025-05-18 13:28:46.923 +05:30 [INF] Calculated investment amount: 6.97.
2025-05-18 13:28:46.924 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 30.
2025-05-18 13:28:46.925 +05:30 [INF] Calculated investment amount: 5.97.
2025-05-18 13:28:46.925 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 30.
2025-05-18 13:28:46.926 +05:30 [INF] Calculated investment amount: 7.36.
2025-05-18 13:28:46.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 30.
2025-05-18 13:28:46.927 +05:30 [INF] Calculated investment amount: 12.89.
2025-05-18 13:28:46.928 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 30.
2025-05-18 13:28:46.928 +05:30 [INF] Calculated investment amount: 12.96.
2025-05-18 13:28:46.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 30.
2025-05-18 13:28:46.929 +05:30 [INF] Calculated investment amount: 32.07.
2025-05-18 13:28:46.930 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 30.
2025-05-18 13:28:46.930 +05:30 [INF] Calculated investment amount: 31.45.
2025-05-18 13:28:46.931 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 30.
2025-05-18 13:28:46.932 +05:30 [INF] Calculated investment amount: 20.91.
2025-05-18 13:28:46.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 30.
2025-05-18 13:28:46.933 +05:30 [INF] Calculated investment amount: 20.44.
2025-05-18 13:28:46.933 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 30.
2025-05-18 13:28:46.934 +05:30 [INF] Calculated investment amount: 14.95.
2025-05-18 13:28:46.935 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 30.
2025-05-18 13:28:46.936 +05:30 [INF] Calculated investment amount: 13.6.
2025-05-18 13:28:46.937 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 30.
2025-05-18 13:28:46.939 +05:30 [INF] Calculated investment amount: 27.3.
2025-05-18 13:28:46.940 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 30.
2025-05-18 13:28:46.941 +05:30 [INF] Calculated investment amount: 25.24.
2025-05-18 13:28:46.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 30.
2025-05-18 13:28:46.943 +05:30 [INF] Calculated investment amount: 5.54.
2025-05-18 13:28:46.944 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 30.
2025-05-18 13:28:46.945 +05:30 [INF] Calculated investment amount: 5.93.
2025-05-18 13:28:46.947 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 13:28:46.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:28:46.949 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 57.0452ms
2025-05-18 13:28:46.949 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 13:28:46.950 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 200 null application/json; charset=utf-8 63.6743ms
2025-05-18 13:28:46.957 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:28:46.958 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:28:46.960 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.961 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.962 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.305ms
2025-05-18 13:28:46.962 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 3.9176ms
2025-05-18 13:28:46.964 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 13:28:46.966 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 13:28:46.967 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.973 +05:30 [INF] CORS policy execution successful.
2025-05-18 13:28:46.979 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:28:46.979 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:28:46.980 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 13:28:46.981 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 13:28:46.982 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 13:28:46.985 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 13:28:46.985 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:28:46.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 13:28:46.987 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.9645ms
2025-05-18 13:28:46.989 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.7904ms
2025-05-18 13:28:46.990 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 13:28:46.991 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 13:28:46.991 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 25.3913ms
2025-05-18 13:28:46.992 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 28.4112ms
2025-05-18 15:43:23.260 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 15:43:23.547 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 15:43:23.554 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 15:43:23.558 +05:30 [INF] Hosting environment: Development
2025-05-18 15:43:23.561 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 15:43:43.014 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 15:43:43.108 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:43:43.128 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 115.9523ms
2025-05-18 15:43:43.137 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 60
2025-05-18 15:43:43.215 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/18/2025 8:56:57 AM', Current time (UTC): '5/18/2025 10:13:43 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-18 15:43:43.229 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/18/2025 8:56:57 AM', Current time (UTC): '5/18/2025 10:13:43 AM'.
2025-05-18 15:43:43.231 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:43:43.238 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 15:43:43.270 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 15:43:43.510 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:43:43.568 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 290.0876ms
2025-05-18 15:43:43.571 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 15:43:43.575 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 438.9467ms
2025-05-18 15:44:52.407 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:44:52.412 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:44:52.413 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.5858ms
2025-05-18 15:44:52.416 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 15:44:52.446 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:44:52.449 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:44:52.524 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:44:52.612 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:44:52.653 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:44:52.655 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:44:52.666 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:44:52.677 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:44:52.679 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:44:52.681 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:44:52.698 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:44:52.729 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 15:44:52.732 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 15:44:52.734 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 15:44:52.735 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 15:44:52.737 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 15:44:52.742 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 15:44:52.744 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 15:44:52.746 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 15:44:52.748 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 15:44:52.750 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 15:44:52.799 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 15:44:52.817 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:44:52.819 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 15:44:52.826 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:44:52.836 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 291.4865ms
2025-05-18 15:44:52.842 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:44:52.846 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 429.6375ms
2025-05-18 15:44:52.851 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - null null
2025-05-18 15:44:52.856 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:44:52.859 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 204 null null 7.9044ms
2025-05-18 15:44:52.864 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - application/json 525
2025-05-18 15:44:52.869 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:44:52.871 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:44:52.886 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:44:52.947 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":68.75,"SubAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"Percentage":-1.25,"SubAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"Percentage":-1.25,"SubAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-6.25,"SubAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}}
2025-05-18 15:44:52.949 +05:30 [INF] Target Amount: 10000
2025-05-18 15:44:52.950 +05:30 [INF] Investment Horizon: 30
2025-05-18 15:44:52.956 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:44:52.983 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.95, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 30.
2025-05-18 15:44:52.986 +05:30 [INF] Calculated investment amount: 51.29.
2025-05-18 15:44:52.989 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.24, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 30.
2025-05-18 15:44:52.992 +05:30 [INF] Calculated investment amount: 58.78.
2025-05-18 15:44:52.995 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 30.
2025-05-18 15:44:52.997 +05:30 [INF] Calculated investment amount: 35.6.
2025-05-18 15:44:52.999 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.73, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 30.
2025-05-18 15:44:53.003 +05:30 [INF] Calculated investment amount: 46.87.
2025-05-18 15:44:53.006 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.75, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 30.
2025-05-18 15:44:53.009 +05:30 [INF] Calculated investment amount: 28.95.
2025-05-18 15:44:53.011 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.9, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 30.
2025-05-18 15:44:53.013 +05:30 [INF] Calculated investment amount: 33.7.
2025-05-18 15:44:53.015 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:44:53.057 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:44:53.063 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:44:53.076 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:44:53.082 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 193.4411ms
2025-05-18 15:44:53.087 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:44:53.090 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=30 - 500 null application/json; charset=utf-8 225.8339ms
2025-05-18 15:45:10.643 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:45:10.647 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:10.648 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.6732ms
2025-05-18 15:45:10.650 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-18 15:45:10.657 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:10.663 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:10.665 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:10.675 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:45:10.683 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:45:10.684 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:45:10.686 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:45:10.688 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:45:10.691 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:45:10.692 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:45:10.693 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:45:10.705 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:45:10.708 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:45:10.711 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:45:10.714 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:45:10.717 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:45:10.718 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:45:10.720 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:45:10.723 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:45:10.726 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:45:10.728 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:45:10.730 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:45:10.753 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:45:10.755 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:45:10.758 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:45:10.760 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 88.9685ms
2025-05-18 15:45:10.764 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:10.766 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 115.3666ms
2025-05-18 15:45:10.770 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - null null
2025-05-18 15:45:10.774 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:10.776 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 204 null null 5.9733ms
2025-05-18 15:45:10.779 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - application/json 513
2025-05-18 15:45:10.784 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:10.785 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:10.788 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:10.793 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-18 15:45:10.795 +05:30 [INF] Target Amount: 10000
2025-05-18 15:45:10.798 +05:30 [INF] Investment Horizon: 25
2025-05-18 15:45:10.799 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:45:10.803 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 25.
2025-05-18 15:45:10.805 +05:30 [INF] Calculated investment amount: 78.08.
2025-05-18 15:45:10.807 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:10.813 +05:30 [INF] Calculated investment amount: 86.29.
2025-05-18 15:45:10.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 25.
2025-05-18 15:45:10.816 +05:30 [INF] Calculated investment amount: 60.68.
2025-05-18 15:45:10.818 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 25.
2025-05-18 15:45:10.819 +05:30 [INF] Calculated investment amount: 74.64.
2025-05-18 15:45:10.821 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 25.
2025-05-18 15:45:10.824 +05:30 [INF] Calculated investment amount: 52.68.
2025-05-18 15:45:10.825 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 25.
2025-05-18 15:45:10.828 +05:30 [INF] Calculated investment amount: 59.22.
2025-05-18 15:45:10.830 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 25.
2025-05-18 15:45:10.833 +05:30 [INF] Calculated investment amount: 50.2.
2025-05-18 15:45:10.835 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 25.
2025-05-18 15:45:10.837 +05:30 [INF] Calculated investment amount: 50.48.
2025-05-18 15:45:10.839 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 25.
2025-05-18 15:45:10.843 +05:30 [INF] Calculated investment amount: 125.88.
2025-05-18 15:45:10.844 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 25.
2025-05-18 15:45:10.846 +05:30 [INF] Calculated investment amount: 122.58.
2025-05-18 15:45:10.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 25.
2025-05-18 15:45:10.850 +05:30 [INF] Calculated investment amount: 43.01.
2025-05-18 15:45:10.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 25.
2025-05-18 15:45:10.854 +05:30 [INF] Calculated investment amount: 42.27.
2025-05-18 15:45:10.856 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 25.
2025-05-18 15:45:10.858 +05:30 [INF] Calculated investment amount: 14.07.
2025-05-18 15:45:10.860 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 25.
2025-05-18 15:45:10.862 +05:30 [INF] Calculated investment amount: 16.28.
2025-05-18 15:45:10.863 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:10.866 +05:30 [INF] Calculated investment amount: 21.82.
2025-05-18 15:45:10.867 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 25.
2025-05-18 15:45:10.870 +05:30 [INF] Calculated investment amount: 18.97.
2025-05-18 15:45:10.874 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 25.
2025-05-18 15:45:10.876 +05:30 [INF] Calculated investment amount: 29.79.
2025-05-18 15:45:10.878 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 25.
2025-05-18 15:45:10.881 +05:30 [INF] Calculated investment amount: 34.64.
2025-05-18 15:45:10.882 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:45:10.886 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:45:10.891 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:45:10.898 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:10.900 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 109.0538ms
2025-05-18 15:45:10.901 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:10.903 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 500 null application/json; charset=utf-8 123.9783ms
2025-05-18 15:45:12.385 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-18 15:45:12.395 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:12.396 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:12.398 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:12.404 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:45:12.407 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:45:12.409 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:45:12.410 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:45:12.411 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:45:12.413 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:45:12.415 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:45:12.416 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:45:12.420 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:45:12.425 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:45:12.429 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:45:12.432 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:45:12.435 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:45:12.438 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:45:12.441 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:45:12.443 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:45:12.446 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:45:12.449 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:45:12.451 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:45:12.456 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:45:12.459 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:45:12.461 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:45:12.465 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 64.2897ms
2025-05-18 15:45:12.467 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:12.470 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 83.7663ms
2025-05-18 15:45:12.478 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - application/json 513
2025-05-18 15:45:12.484 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:12.486 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:12.489 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:12.496 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-18 15:45:12.498 +05:30 [INF] Target Amount: 10000
2025-05-18 15:45:12.500 +05:30 [INF] Investment Horizon: 25
2025-05-18 15:45:12.501 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:45:12.504 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 25.
2025-05-18 15:45:12.507 +05:30 [INF] Calculated investment amount: 78.08.
2025-05-18 15:45:12.509 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:12.512 +05:30 [INF] Calculated investment amount: 86.29.
2025-05-18 15:45:12.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 25.
2025-05-18 15:45:12.519 +05:30 [INF] Calculated investment amount: 60.68.
2025-05-18 15:45:12.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 25.
2025-05-18 15:45:12.524 +05:30 [INF] Calculated investment amount: 74.64.
2025-05-18 15:45:12.526 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 25.
2025-05-18 15:45:12.529 +05:30 [INF] Calculated investment amount: 52.68.
2025-05-18 15:45:12.531 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 25.
2025-05-18 15:45:12.533 +05:30 [INF] Calculated investment amount: 59.22.
2025-05-18 15:45:12.535 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 25.
2025-05-18 15:45:12.539 +05:30 [INF] Calculated investment amount: 50.2.
2025-05-18 15:45:12.542 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 25.
2025-05-18 15:45:12.544 +05:30 [INF] Calculated investment amount: 50.48.
2025-05-18 15:45:12.545 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 25.
2025-05-18 15:45:12.547 +05:30 [INF] Calculated investment amount: 125.88.
2025-05-18 15:45:12.548 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 25.
2025-05-18 15:45:12.552 +05:30 [INF] Calculated investment amount: 122.58.
2025-05-18 15:45:12.555 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 25.
2025-05-18 15:45:12.557 +05:30 [INF] Calculated investment amount: 43.01.
2025-05-18 15:45:12.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 25.
2025-05-18 15:45:12.563 +05:30 [INF] Calculated investment amount: 42.27.
2025-05-18 15:45:12.564 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 25.
2025-05-18 15:45:12.566 +05:30 [INF] Calculated investment amount: 14.07.
2025-05-18 15:45:12.567 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 25.
2025-05-18 15:45:12.570 +05:30 [INF] Calculated investment amount: 16.28.
2025-05-18 15:45:12.572 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:12.575 +05:30 [INF] Calculated investment amount: 21.82.
2025-05-18 15:45:12.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 25.
2025-05-18 15:45:12.578 +05:30 [INF] Calculated investment amount: 18.97.
2025-05-18 15:45:12.580 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 25.
2025-05-18 15:45:12.582 +05:30 [INF] Calculated investment amount: 29.79.
2025-05-18 15:45:12.583 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 25.
2025-05-18 15:45:12.587 +05:30 [INF] Calculated investment amount: 34.64.
2025-05-18 15:45:12.590 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:45:12.593 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:45:12.596 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:45:12.603 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:12.605 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 113.435ms
2025-05-18 15:45:12.608 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:12.609 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 500 null application/json; charset=utf-8 130.781ms
2025-05-18 15:45:37.546 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:45:37.550 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:37.551 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.4274ms
2025-05-18 15:45:37.556 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 15:45:37.563 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:37.566 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:37.570 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:37.575 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:45:37.582 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:45:37.585 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 15:45:37.588 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 15:45:37.590 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:45:37.593 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:45:37.597 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:45:37.598 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:45:37.601 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 15:45:37.604 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 15:45:37.606 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:45:37.609 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:45:37.612 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 15:45:37.614 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 15:45:37.617 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 15:45:37.622 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:45:37.661 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:45:37.684 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 15:45:37.686 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 15:45:37.711 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:45:37.714 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 15:45:37.720 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:45:37.722 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 148.2646ms
2025-05-18 15:45:37.727 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:37.730 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 173.8073ms
2025-05-18 15:45:37.739 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - null null
2025-05-18 15:45:37.743 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:37.744 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 204 null null 4.2222ms
2025-05-18 15:45:37.747 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - application/json 483
2025-05-18 15:45:37.752 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:37.753 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:37.755 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:37.758 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-18 15:45:37.759 +05:30 [INF] Target Amount: 10000
2025-05-18 15:45:37.760 +05:30 [INF] Investment Horizon: 25
2025-05-18 15:45:37.762 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:45:37.764 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 25.
2025-05-18 15:45:37.766 +05:30 [INF] Calculated investment amount: 86.57.
2025-05-18 15:45:37.768 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:37.770 +05:30 [INF] Calculated investment amount: 95.49.
2025-05-18 15:45:37.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 25.
2025-05-18 15:45:37.774 +05:30 [INF] Calculated investment amount: 37.78.
2025-05-18 15:45:37.775 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 25.
2025-05-18 15:45:37.777 +05:30 [INF] Calculated investment amount: 46.52.
2025-05-18 15:45:37.779 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 25.
2025-05-18 15:45:37.781 +05:30 [INF] Calculated investment amount: 26.26.
2025-05-18 15:45:37.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 25.
2025-05-18 15:45:37.785 +05:30 [INF] Calculated investment amount: 29.52.
2025-05-18 15:45:37.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 25.
2025-05-18 15:45:37.789 +05:30 [INF] Calculated investment amount: 158.28.
2025-05-18 15:45:37.790 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 25.
2025-05-18 15:45:37.792 +05:30 [INF] Calculated investment amount: 159.2.
2025-05-18 15:45:37.793 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 25.
2025-05-18 15:45:37.796 +05:30 [INF] Calculated investment amount: 132.25.
2025-05-18 15:45:37.797 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 25.
2025-05-18 15:45:37.800 +05:30 [INF] Calculated investment amount: 128.7.
2025-05-18 15:45:37.802 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 25.
2025-05-18 15:45:37.806 +05:30 [INF] Calculated investment amount: 135.31.
2025-05-18 15:45:37.807 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 25.
2025-05-18 15:45:37.809 +05:30 [INF] Calculated investment amount: 133.56.
2025-05-18 15:45:37.810 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 25.
2025-05-18 15:45:37.812 +05:30 [INF] Calculated investment amount: 33.8.
2025-05-18 15:45:37.813 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 25.
2025-05-18 15:45:37.817 +05:30 [INF] Calculated investment amount: 38.86.
2025-05-18 15:45:37.820 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:37.823 +05:30 [INF] Calculated investment amount: 15.73.
2025-05-18 15:45:37.824 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 25.
2025-05-18 15:45:37.826 +05:30 [INF] Calculated investment amount: 13.62.
2025-05-18 15:45:37.827 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 25.
2025-05-18 15:45:37.829 +05:30 [INF] Calculated investment amount: 21.47.
2025-05-18 15:45:37.831 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 25.
2025-05-18 15:45:37.833 +05:30 [INF] Calculated investment amount: 24.87.
2025-05-18 15:45:37.836 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:45:37.839 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:45:37.842 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:45:37.847 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:37.851 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 94.1574ms
2025-05-18 15:45:37.853 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:37.855 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 500 null application/json; charset=utf-8 107.4793ms
2025-05-18 15:45:39.575 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 15:45:39.583 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:39.584 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:39.586 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:39.589 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:45:39.592 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:45:39.594 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 15:45:39.595 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 15:45:39.597 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:45:39.599 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:45:39.600 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:45:39.603 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:45:39.606 +05:30 [INF] Sub-allocations for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 15:45:39.611 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 15:45:39.613 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:45:39.617 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:45:39.623 +05:30 [INF] Sub-allocations for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 15:45:39.625 +05:30 [INF] Added sub-assets for equity: {"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}
2025-05-18 15:45:39.628 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 15:45:39.630 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:45:39.631 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:45:39.634 +05:30 [INF] Added sub-assets for realEstate: {"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}
2025-05-18 15:45:39.636 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 15:45:39.640 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:45:39.642 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":45,"subAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":10,"subAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}
2025-05-18 15:45:39.645 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:45:39.647 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.6368ms
2025-05-18 15:45:39.654 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:39.655 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 80.7289ms
2025-05-18 15:45:39.664 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - application/json 483
2025-05-18 15:45:39.671 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:39.673 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:39.675 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:39.679 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":45,"SubAssets":{"Large Cap":18,"Mid Cap":13.5,"Small Cap":13.5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":3.75,"Residential Prop":2.5,"Commercial Prop":3.75}}}}
2025-05-18 15:45:39.680 +05:30 [INF] Target Amount: 10000
2025-05-18 15:45:39.681 +05:30 [INF] Investment Horizon: 25
2025-05-18 15:45:39.682 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:45:39.688 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.38, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 25.
2025-05-18 15:45:39.690 +05:30 [INF] Calculated investment amount: 86.57.
2025-05-18 15:45:39.691 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.62, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:39.694 +05:30 [INF] Calculated investment amount: 95.49.
2025-05-18 15:45:39.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 25.
2025-05-18 15:45:39.697 +05:30 [INF] Calculated investment amount: 37.78.
2025-05-18 15:45:39.698 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.32, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 25.
2025-05-18 15:45:39.702 +05:30 [INF] Calculated investment amount: 46.52.
2025-05-18 15:45:39.704 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.95, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 25.
2025-05-18 15:45:39.706 +05:30 [INF] Calculated investment amount: 26.26.
2025-05-18 15:45:39.708 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 25.
2025-05-18 15:45:39.710 +05:30 [INF] Calculated investment amount: 29.52.
2025-05-18 15:45:39.713 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 25.
2025-05-18 15:45:39.715 +05:30 [INF] Calculated investment amount: 158.28.
2025-05-18 15:45:39.717 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 25.
2025-05-18 15:45:39.720 +05:30 [INF] Calculated investment amount: 159.2.
2025-05-18 15:45:39.722 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 25.
2025-05-18 15:45:39.724 +05:30 [INF] Calculated investment amount: 132.25.
2025-05-18 15:45:39.726 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 25.
2025-05-18 15:45:39.728 +05:30 [INF] Calculated investment amount: 128.7.
2025-05-18 15:45:39.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 25.
2025-05-18 15:45:39.732 +05:30 [INF] Calculated investment amount: 135.31.
2025-05-18 15:45:39.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 25.
2025-05-18 15:45:39.737 +05:30 [INF] Calculated investment amount: 133.56.
2025-05-18 15:45:39.738 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 25.
2025-05-18 15:45:39.741 +05:30 [INF] Calculated investment amount: 33.8.
2025-05-18 15:45:39.743 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 25.
2025-05-18 15:45:39.745 +05:30 [INF] Calculated investment amount: 38.86.
2025-05-18 15:45:39.747 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 25.
2025-05-18 15:45:39.749 +05:30 [INF] Calculated investment amount: 15.73.
2025-05-18 15:45:39.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 25.
2025-05-18 15:45:39.755 +05:30 [INF] Calculated investment amount: 13.62.
2025-05-18 15:45:39.757 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 25.
2025-05-18 15:45:39.759 +05:30 [INF] Calculated investment amount: 21.47.
2025-05-18 15:45:39.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 25.
2025-05-18 15:45:39.763 +05:30 [INF] Calculated investment amount: 24.87.
2025-05-18 15:45:39.765 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:45:39.768 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:45:39.773 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:45:39.778 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:39.781 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 102.5202ms
2025-05-18 15:45:39.782 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:39.784 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=25 - 500 null application/json; charset=utf-8 119.6057ms
2025-05-18 15:45:54.802 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:45:54.805 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:54.806 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.2207ms
2025-05-18 15:45:54.809 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-18 15:45:54.813 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:54.815 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:54.819 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:54.822 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:45:54.830 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:45:54.835 +05:30 [INF] Looking up base allocation for key: Mid+Short
2025-05-18 15:45:54.836 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":40,"commodities":10,"cash":25,"realEstate":5}
2025-05-18 15:45:54.837 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 15:45:54.838 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 15:45:54.840 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:45:54.841 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:45:54.843 +05:30 [INF] Sub-allocations for equity: {"Large Cap":2.5,"Mid Cap":1.88,"Small Cap":1.88}
2025-05-18 15:45:54.845 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":13.88,"Corp Bonds":18.5,"Fixed Dep":13.88}
2025-05-18 15:45:54.848 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":2.5,"Energy":1.88,"Agriculture":1.88}
2025-05-18 15:45:54.851 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:45:54.852 +05:30 [INF] Sub-allocations for realEstate: {"REITs":0.47,"Residential Prop":0.31,"Commercial Prop":0.47}
2025-05-18 15:45:54.854 +05:30 [INF] Added sub-assets for equity: {"Large Cap":2.5,"Mid Cap":1.88,"Small Cap":1.88}
2025-05-18 15:45:54.857 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":13.88,"Corp Bonds":18.5,"Fixed Dep":13.88}
2025-05-18 15:45:54.862 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":2.5,"Energy":1.88,"Agriculture":1.88}
2025-05-18 15:45:54.865 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:45:54.867 +05:30 [INF] Added sub-assets for realEstate: {"REITs":0.47,"Residential Prop":0.31,"Commercial Prop":0.47}
2025-05-18 15:45:54.870 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":6.25,"subAssets":{"Large Cap":2.5,"Mid Cap":1.88,"Small Cap":1.88}},"fixedIncome":{"percentage":46.25,"subAssets":{"Gov Bonds":13.88,"Corp Bonds":18.5,"Fixed Dep":13.88}},"commodities":{"percentage":6.25,"subAssets":{"Precious Metals":2.5,"Energy":1.88,"Agriculture":1.88}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":1.25,"subAssets":{"REITs":0.47,"Residential Prop":0.31,"Commercial Prop":0.47}}}
2025-05-18 15:45:54.880 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:45:54.881 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":6.25,"subAssets":{"Large Cap":2.5,"Mid Cap":1.88,"Small Cap":1.88}},"fixedIncome":{"percentage":46.25,"subAssets":{"Gov Bonds":13.88,"Corp Bonds":18.5,"Fixed Dep":13.88}},"commodities":{"percentage":6.25,"subAssets":{"Precious Metals":2.5,"Energy":1.88,"Agriculture":1.88}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":1.25,"subAssets":{"REITs":0.47,"Residential Prop":0.31,"Commercial Prop":0.47}}}
2025-05-18 15:45:54.884 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:45:54.887 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 65.979ms
2025-05-18 15:45:54.889 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:45:54.891 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.1653ms
2025-05-18 15:45:54.898 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - null null
2025-05-18 15:45:54.902 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:54.903 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 204 null null 5.3385ms
2025-05-18 15:45:54.907 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - application/json 510
2025-05-18 15:45:54.911 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:54.913 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:54.914 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:54.918 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":6.25,"SubAssets":{"Large Cap":2.5,"Mid Cap":1.88,"Small Cap":1.88}},"fixedIncome":{"Percentage":46.25,"SubAssets":{"Gov Bonds":13.88,"Corp Bonds":18.5,"Fixed Dep":13.88}},"commodities":{"Percentage":6.25,"SubAssets":{"Precious Metals":2.5,"Energy":1.88,"Agriculture":1.88}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":1.25,"SubAssets":{"REITs":0.47,"Residential Prop":0.31,"Commercial Prop":0.47}}}}
2025-05-18 15:45:54.920 +05:30 [INF] Target Amount: 10000
2025-05-18 15:45:54.922 +05:30 [INF] Investment Horizon: 2
2025-05-18 15:45:54.924 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:45:54.926 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 2.
2025-05-18 15:45:54.928 +05:30 [INF] Calculated investment amount: 107.44.
2025-05-18 15:45:54.929 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.2, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-18 15:45:54.931 +05:30 [INF] Calculated investment amount: 100.63.
2025-05-18 15:45:54.932 +05:30 [INF] Calculating investment amount with PercentageSplit: 1, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 2.
2025-05-18 15:45:54.934 +05:30 [INF] Calculated investment amount: 79.01.
2025-05-18 15:45:54.936 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 2.
2025-05-18 15:45:54.938 +05:30 [INF] Calculated investment amount: 71.42.
2025-05-18 15:45:54.940 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 2.
2025-05-18 15:45:54.942 +05:30 [INF] Calculated investment amount: 74.64.
2025-05-18 15:45:54.943 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 2.
2025-05-18 15:45:54.945 +05:30 [INF] Calculated investment amount: 71.01.
2025-05-18 15:45:54.946 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.08, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-18 15:45:54.948 +05:30 [INF] Calculated investment amount: 642.18.
2025-05-18 15:45:54.948 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.8, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 2.
2025-05-18 15:45:54.950 +05:30 [INF] Calculated investment amount: 619.14.
2025-05-18 15:45:54.952 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.05, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 2.
2025-05-18 15:45:54.954 +05:30 [INF] Calculated investment amount: 793.43.
2025-05-18 15:45:54.955 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.45, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 2.
2025-05-18 15:45:54.958 +05:30 [INF] Calculated investment amount: 823.86.
2025-05-18 15:45:54.960 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 2.
2025-05-18 15:45:54.962 +05:30 [INF] Calculated investment amount: 612.74.
2025-05-18 15:45:54.964 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.06, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 2.
2025-05-18 15:45:54.965 +05:30 [INF] Calculated investment amount: 631.91.
2025-05-18 15:45:54.966 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.38, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 2.
2025-05-18 15:45:54.969 +05:30 [INF] Calculated investment amount: 118.75.
2025-05-18 15:45:54.973 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.12, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 2.
2025-05-18 15:45:54.975 +05:30 [INF] Calculated investment amount: 99.12.
2025-05-18 15:45:54.976 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.89, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 2.
2025-05-18 15:45:54.978 +05:30 [INF] Calculated investment amount: 74.64.
2025-05-18 15:45:54.980 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 2.
2025-05-18 15:45:54.984 +05:30 [INF] Calculated investment amount: 81.37.
2025-05-18 15:45:54.985 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 2.
2025-05-18 15:45:54.988 +05:30 [INF] Calculated investment amount: 87.49.
2025-05-18 15:45:54.990 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 2.
2025-05-18 15:45:54.992 +05:30 [INF] Calculated investment amount: 74.24.
2025-05-18 15:45:54.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 2.
2025-05-18 15:45:54.995 +05:30 [INF] Calculated investment amount: 552.99.
2025-05-18 15:45:54.996 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 2.
2025-05-18 15:45:54.998 +05:30 [INF] Calculated investment amount: 533.33.
2025-05-18 15:45:54.999 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 2.
2025-05-18 15:45:55.003 +05:30 [INF] Calculated investment amount: 522.77.
2025-05-18 15:45:55.005 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 2.
2025-05-18 15:45:55.007 +05:30 [INF] Calculated investment amount: 591.72.
2025-05-18 15:45:55.008 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 2.
2025-05-18 15:45:55.010 +05:30 [INF] Calculated investment amount: 703.42.
2025-05-18 15:45:55.012 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 2.
2025-05-18 15:45:55.013 +05:30 [INF] Calculated investment amount: 740.83.
2025-05-18 15:45:55.017 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.23, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 2.
2025-05-18 15:45:55.020 +05:30 [INF] Calculated investment amount: 19.39.
2025-05-18 15:45:55.022 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.24, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 2.
2025-05-18 15:45:55.024 +05:30 [INF] Calculated investment amount: 20.02.
2025-05-18 15:45:55.025 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.15, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 2.
2025-05-18 15:45:55.028 +05:30 [INF] Calculated investment amount: 13.18.
2025-05-18 15:45:55.029 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.16, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 2.
2025-05-18 15:45:55.031 +05:30 [INF] Calculated investment amount: 13.9.
2025-05-18 15:45:55.033 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.24, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 2.
2025-05-18 15:45:55.035 +05:30 [INF] Calculated investment amount: 19.76.
2025-05-18 15:45:55.037 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.23, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 2.
2025-05-18 15:45:55.039 +05:30 [INF] Calculated investment amount: 19.08.
2025-05-18 15:45:55.058 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:45:55.060 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:55.064 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 148.1061ms
2025-05-18 15:45:55.067 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:45:55.069 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=2 - 200 null application/json; charset=utf-8 162.6292ms
2025-05-18 15:45:55.083 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:45:55.084 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:45:55.087 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:55.089 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:55.090 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.549ms
2025-05-18 15:45:55.090 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.0872ms
2025-05-18 15:45:55.092 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:45:55.095 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:45:55.107 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:55.107 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:45:55.108 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:45:55.109 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:45:55.117 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:45:55.117 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:45:55.123 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:45:55.125 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:45:55.127 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:55.131 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.3691ms
2025-05-18 15:45:55.132 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:45:55.133 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:45:55.134 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 41.8433ms
2025-05-18 15:45:55.142 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 19.6892ms
2025-05-18 15:45:55.146 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:45:55.148 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 52.6283ms
2025-05-18 15:46:16.254 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:46:16.256 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.257 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 2.8943ms
2025-05-18 15:46:16.259 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 110
2025-05-18 15:46:16.262 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.269 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:16.270 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:16.273 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:16.277 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:16.279 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 15:46:16.287 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 15:46:16.289 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 15:46:16.290 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 15:46:16.293 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:46:16.295 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:46:16.307 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 15:46:16.311 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 15:46:16.312 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:46:16.317 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 15:46:16.321 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 15:46:16.323 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 15:46:16.326 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}
2025-05-18 15:46:16.329 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:46:16.331 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 15:46:16.335 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 15:46:16.336 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 15:46:16.344 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:16.346 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 15:46:16.353 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:16.355 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 82.5372ms
2025-05-18 15:46:16.357 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:16.358 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 99.4657ms
2025-05-18 15:46:16.360 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=23 - null null
2025-05-18 15:46:16.364 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.365 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=23 - 204 null null 4.1665ms
2025-05-18 15:46:16.369 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=23 - application/json 479
2025-05-18 15:46:16.373 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.374 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:16.375 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:16.378 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":12,"Corp Bonds":16,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 15:46:16.380 +05:30 [INF] Target Amount: 1000000
2025-05-18 15:46:16.381 +05:30 [INF] Investment Horizon: 23
2025-05-18 15:46:16.383 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:16.386 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 1000000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-18 15:46:16.388 +05:30 [INF] Calculated investment amount: 9302.79.
2025-05-18 15:46:16.389 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:46:16.391 +05:30 [INF] Calculated investment amount: 10131.52.
2025-05-18 15:46:16.392 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 1000000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-18 15:46:16.394 +05:30 [INF] Calculated investment amount: 4249.25.
2025-05-18 15:46:16.395 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 1000000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-18 15:46:16.398 +05:30 [INF] Calculated investment amount: 5096.92.
2025-05-18 15:46:16.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 1000000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-18 15:46:16.403 +05:30 [INF] Calculated investment amount: 3035.13.
2025-05-18 15:46:16.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 1000000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-18 15:46:16.406 +05:30 [INF] Calculated investment amount: 3360.9.
2025-05-18 15:46:16.408 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 1000000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-18 15:46:16.410 +05:30 [INF] Calculated investment amount: 19924.96.
2025-05-18 15:46:16.411 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 1000000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-18 15:46:16.413 +05:30 [INF] Calculated investment amount: 20001.74.
2025-05-18 15:46:16.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.83, TargetAmount: 1000000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-18 15:46:16.419 +05:30 [INF] Calculated investment amount: 17243.4.
2025-05-18 15:46:16.420 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.17, TargetAmount: 1000000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-18 15:46:16.421 +05:30 [INF] Calculated investment amount: 16868.02.
2025-05-18 15:46:16.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 1000000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-18 15:46:16.423 +05:30 [INF] Calculated investment amount: 17191.3.
2025-05-18 15:46:16.425 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 1000000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-18 15:46:16.427 +05:30 [INF] Calculated investment amount: 17073.26.
2025-05-18 15:46:16.428 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 1000000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-18 15:46:16.430 +05:30 [INF] Calculated investment amount: 3927.9.
2025-05-18 15:46:16.432 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 1000000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-18 15:46:16.434 +05:30 [INF] Calculated investment amount: 4391.25.
2025-05-18 15:46:16.436 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:46:16.438 +05:30 [INF] Calculated investment amount: 1875.72.
2025-05-18 15:46:16.439 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 1000000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-18 15:46:16.441 +05:30 [INF] Calculated investment amount: 1657.37.
2025-05-18 15:46:16.442 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 1000000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-18 15:46:16.444 +05:30 [INF] Calculated investment amount: 2526.97.
2025-05-18 15:46:16.445 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 1000000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-18 15:46:16.448 +05:30 [INF] Calculated investment amount: 2847.78.
2025-05-18 15:46:16.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 1000000, AnnualReturn: 5.2, InvestmentHorizon: 23.
2025-05-18 15:46:16.454 +05:30 [INF] Calculated investment amount: 2368.38.
2025-05-18 15:46:16.455 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 1000000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-18 15:46:16.456 +05:30 [INF] Calculated investment amount: 2409.23.
2025-05-18 15:46:16.457 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 1000000, AnnualReturn: 3.5, InvestmentHorizon: 23.
2025-05-18 15:46:16.460 +05:30 [INF] Calculated investment amount: 3173.
2025-05-18 15:46:16.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 1000000, AnnualReturn: 4, InvestmentHorizon: 23.
2025-05-18 15:46:16.463 +05:30 [INF] Calculated investment amount: 3245.81.
2025-05-18 15:46:16.467 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 1000000, AnnualReturn: 5.1, InvestmentHorizon: 23.
2025-05-18 15:46:16.470 +05:30 [INF] Calculated investment amount: 3089.65.
2025-05-18 15:46:16.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 1000000, AnnualReturn: 5.4, InvestmentHorizon: 23.
2025-05-18 15:46:16.473 +05:30 [INF] Calculated investment amount: 3072.58.
2025-05-18 15:46:16.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 1000000, AnnualReturn: 8.9, InvestmentHorizon: 23.
2025-05-18 15:46:16.477 +05:30 [INF] Calculated investment amount: 1280.56.
2025-05-18 15:46:16.478 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 1000000, AnnualReturn: 9.5, InvestmentHorizon: 23.
2025-05-18 15:46:16.480 +05:30 [INF] Calculated investment amount: 1202.95.
2025-05-18 15:46:16.485 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 1000000, AnnualReturn: 6.7, InvestmentHorizon: 23.
2025-05-18 15:46:16.487 +05:30 [INF] Calculated investment amount: 1350.11.
2025-05-18 15:46:16.488 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 1000000, AnnualReturn: 7.3, InvestmentHorizon: 23.
2025-05-18 15:46:16.490 +05:30 [INF] Calculated investment amount: 1285.64.
2025-05-18 15:46:16.492 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 1000000, AnnualReturn: 10.2, InvestmentHorizon: 23.
2025-05-18 15:46:16.494 +05:30 [INF] Calculated investment amount: 1028.24.
2025-05-18 15:46:16.495 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 1000000, AnnualReturn: 9.8, InvestmentHorizon: 23.
2025-05-18 15:46:16.498 +05:30 [INF] Calculated investment amount: 1071.36.
2025-05-18 15:46:16.506 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:46:16.507 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:16.510 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 132.4632ms
2025-05-18 15:46:16.512 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:16.520 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=23 - 200 null application/json; charset=utf-8 150.3846ms
2025-05-18 15:46:16.527 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:46:16.528 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:46:16.535 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.537 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.538 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.0451ms
2025-05-18 15:46:16.538 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.7323ms
2025-05-18 15:46:16.541 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:46:16.543 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:46:16.549 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.554 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:46:16.554 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:16.555 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:16.555 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:46:16.557 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:46:16.559 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:16.560 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:46:16.565 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:16.565 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:16.568 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.7657ms
2025-05-18 15:46:16.570 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.8377ms
2025-05-18 15:46:16.571 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:46:16.573 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:46:16.574 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.6576ms
2025-05-18 15:46:16.575 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 31.6817ms
2025-05-18 15:46:33.938 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:46:33.942 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:33.943 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.7225ms
2025-05-18 15:46:33.945 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-18 15:46:33.948 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:33.951 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:33.962 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:33.965 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:33.972 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:33.973 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:46:33.974 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:46:33.975 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:33.978 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:33.980 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:46:33.981 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:46:33.988 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:46:33.992 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:46:33.994 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:33.996 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:33.996 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:46:33.998 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:46:34.000 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:46:34.003 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:34.004 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:34.006 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:46:34.008 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:46:34.016 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:34.019 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:46:34.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:34.024 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.0834ms
2025-05-18 15:46:34.026 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:34.028 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.9026ms
2025-05-18 15:46:34.031 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - null null
2025-05-18 15:46:34.034 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:34.036 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 204 null null 5.1493ms
2025-05-18 15:46:34.122 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 513
2025-05-18 15:46:34.127 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:34.128 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:34.130 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:34.133 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-18 15:46:34.142 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:34.143 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:34.145 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:34.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:34.154 +05:30 [INF] Calculated investment amount: 1257.53.
2025-05-18 15:46:34.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:34.157 +05:30 [INF] Calculated investment amount: 1339.94.
2025-05-18 15:46:34.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:34.162 +05:30 [INF] Calculated investment amount: 1093.4.
2025-05-18 15:46:34.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:34.164 +05:30 [INF] Calculated investment amount: 1257.7.
2025-05-18 15:46:34.166 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:34.167 +05:30 [INF] Calculated investment amount: 1014.3.
2025-05-18 15:46:34.168 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:34.171 +05:30 [INF] Calculated investment amount: 1100.69.
2025-05-18 15:46:34.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:34.174 +05:30 [INF] Calculated investment amount: 640.71.
2025-05-18 15:46:34.175 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:34.178 +05:30 [INF] Calculated investment amount: 638.21.
2025-05-18 15:46:34.180 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:34.182 +05:30 [INF] Calculated investment amount: 1749.13.
2025-05-18 15:46:34.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:34.186 +05:30 [INF] Calculated investment amount: 1727.26.
2025-05-18 15:46:34.188 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:34.190 +05:30 [INF] Calculated investment amount: 562.08.
2025-05-18 15:46:34.192 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:34.194 +05:30 [INF] Calculated investment amount: 557.68.
2025-05-18 15:46:34.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:34.202 +05:30 [INF] Calculated investment amount: 204.84.
2025-05-18 15:46:34.203 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:34.205 +05:30 [INF] Calculated investment amount: 221.
2025-05-18 15:46:34.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:34.209 +05:30 [INF] Calculated investment amount: 338.85.
2025-05-18 15:46:34.211 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:34.212 +05:30 [INF] Calculated investment amount: 309.68.
2025-05-18 15:46:34.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:34.216 +05:30 [INF] Calculated investment amount: 447.96.
2025-05-18 15:46:34.218 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:34.221 +05:30 [INF] Calculated investment amount: 485.83.
2025-05-18 15:46:34.222 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:46:34.224 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:46:34.228 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:46:34.236 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:34.238 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 106.4301ms
2025-05-18 15:46:34.240 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:34.241 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 500 null application/json; charset=utf-8 118.7478ms
2025-05-18 15:46:35.180 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 98
2025-05-18 15:46:35.187 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:35.191 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:35.194 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:35.199 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:35.203 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:35.205 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:46:35.207 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:46:35.209 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:35.210 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:35.212 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:46:35.214 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:46:35.218 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:46:35.219 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:46:35.222 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:35.224 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:35.229 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:46:35.232 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:46:35.233 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:46:35.238 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:35.242 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:35.243 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:46:35.245 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:46:35.250 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:35.253 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:46:35.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:35.255 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.1387ms
2025-05-18 15:46:35.257 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:35.261 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.4924ms
2025-05-18 15:46:35.266 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 513
2025-05-18 15:46:35.271 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:35.272 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:35.275 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:35.278 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-18 15:46:35.280 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:35.282 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:35.286 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:35.289 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:35.291 +05:30 [INF] Calculated investment amount: 1257.53.
2025-05-18 15:46:35.293 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:35.296 +05:30 [INF] Calculated investment amount: 1339.94.
2025-05-18 15:46:35.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:35.302 +05:30 [INF] Calculated investment amount: 1093.4.
2025-05-18 15:46:35.304 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:35.306 +05:30 [INF] Calculated investment amount: 1257.7.
2025-05-18 15:46:35.309 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:35.311 +05:30 [INF] Calculated investment amount: 1014.3.
2025-05-18 15:46:35.313 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:35.318 +05:30 [INF] Calculated investment amount: 1100.69.
2025-05-18 15:46:35.320 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:35.324 +05:30 [INF] Calculated investment amount: 640.71.
2025-05-18 15:46:35.325 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:35.328 +05:30 [INF] Calculated investment amount: 638.21.
2025-05-18 15:46:35.330 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:35.334 +05:30 [INF] Calculated investment amount: 1749.13.
2025-05-18 15:46:35.336 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:35.339 +05:30 [INF] Calculated investment amount: 1727.26.
2025-05-18 15:46:35.340 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:35.343 +05:30 [INF] Calculated investment amount: 562.08.
2025-05-18 15:46:35.345 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:35.352 +05:30 [INF] Calculated investment amount: 557.68.
2025-05-18 15:46:35.354 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:35.357 +05:30 [INF] Calculated investment amount: 204.84.
2025-05-18 15:46:35.358 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:35.360 +05:30 [INF] Calculated investment amount: 221.
2025-05-18 15:46:35.362 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:35.364 +05:30 [INF] Calculated investment amount: 338.85.
2025-05-18 15:46:35.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:35.368 +05:30 [INF] Calculated investment amount: 309.68.
2025-05-18 15:46:35.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:35.372 +05:30 [INF] Calculated investment amount: 447.96.
2025-05-18 15:46:35.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:35.376 +05:30 [INF] Calculated investment amount: 485.83.
2025-05-18 15:46:35.377 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:46:35.382 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:46:35.386 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:46:35.392 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:35.394 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 116.3201ms
2025-05-18 15:46:35.396 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:35.399 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 500 null application/json; charset=utf-8 133.0218ms
2025-05-18 15:46:42.856 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:46:42.863 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:42.864 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.6047ms
2025-05-18 15:46:42.869 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-18 15:46:42.874 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:42.877 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:42.879 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:42.884 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:42.888 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:42.889 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:46:42.891 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:46:42.892 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:42.893 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:42.896 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:46:42.898 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:46:42.902 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:46:42.906 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:46:42.909 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:42.912 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:42.916 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:46:42.919 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:46:42.921 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:46:42.922 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:42.924 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:42.926 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:46:42.929 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:46:42.933 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:42.936 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:46:42.938 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:42.941 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 56.7135ms
2025-05-18 15:46:42.944 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:42.946 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 77.2082ms
2025-05-18 15:46:42.954 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - null null
2025-05-18 15:46:42.958 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:42.959 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 204 null null 5.2663ms
2025-05-18 15:46:42.964 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 508
2025-05-18 15:46:42.971 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:42.972 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:42.974 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:42.976 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-18 15:46:42.978 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:42.982 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:42.983 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:42.984 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:42.987 +05:30 [INF] Calculated investment amount: 1548.87.
2025-05-18 15:46:42.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:42.991 +05:30 [INF] Calculated investment amount: 1647.83.
2025-05-18 15:46:42.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:42.996 +05:30 [INF] Calculated investment amount: 1345.65.
2025-05-18 15:46:42.997 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:43.000 +05:30 [INF] Calculated investment amount: 1547.94.
2025-05-18 15:46:43.002 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:43.004 +05:30 [INF] Calculated investment amount: 1248.59.
2025-05-18 15:46:43.005 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:43.008 +05:30 [INF] Calculated investment amount: 1354.51.
2025-05-18 15:46:43.011 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:43.015 +05:30 [INF] Calculated investment amount: 320.36.
2025-05-18 15:46:43.017 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:43.019 +05:30 [INF] Calculated investment amount: 321.06.
2025-05-18 15:46:43.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:43.023 +05:30 [INF] Calculated investment amount: 874.57.
2025-05-18 15:46:43.025 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:43.027 +05:30 [INF] Calculated investment amount: 864.9.
2025-05-18 15:46:43.029 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:43.031 +05:30 [INF] Calculated investment amount: 281.04.
2025-05-18 15:46:43.032 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:43.035 +05:30 [INF] Calculated investment amount: 280.49.
2025-05-18 15:46:43.036 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:43.038 +05:30 [INF] Calculated investment amount: 204.84.
2025-05-18 15:46:43.040 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:43.042 +05:30 [INF] Calculated investment amount: 221.
2025-05-18 15:46:43.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:43.045 +05:30 [INF] Calculated investment amount: 338.85.
2025-05-18 15:46:43.046 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:43.048 +05:30 [INF] Calculated investment amount: 309.68.
2025-05-18 15:46:43.049 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:43.052 +05:30 [INF] Calculated investment amount: 447.96.
2025-05-18 15:46:43.053 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:43.055 +05:30 [INF] Calculated investment amount: 485.83.
2025-05-18 15:46:43.057 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:46:43.060 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:46:43.064 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:46:43.070 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:43.072 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 95.8116ms
2025-05-18 15:46:43.073 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:43.075 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 500 null application/json; charset=utf-8 110.2926ms
2025-05-18 15:46:44.089 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 107
2025-05-18 15:46:44.097 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:44.099 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:44.102 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:44.106 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:44.109 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:44.110 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:46:44.112 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:46:44.113 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:44.114 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:44.115 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:46:44.117 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:46:44.120 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:46:44.122 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:46:44.128 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:44.130 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:44.135 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:46:44.138 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:46:44.140 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:46:44.145 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:46:44.146 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:46:44.148 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:46:44.151 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:46:44.155 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:44.157 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:46:44.159 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:44.162 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 56.9604ms
2025-05-18 15:46:44.167 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:44.169 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 79.9428ms
2025-05-18 15:46:44.175 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 508
2025-05-18 15:46:44.180 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:44.184 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:44.187 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:44.192 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-18 15:46:44.194 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:44.196 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:44.197 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:44.199 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:44.203 +05:30 [INF] Calculated investment amount: 1548.87.
2025-05-18 15:46:44.205 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:44.206 +05:30 [INF] Calculated investment amount: 1647.83.
2025-05-18 15:46:44.208 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:44.209 +05:30 [INF] Calculated investment amount: 1345.65.
2025-05-18 15:46:44.211 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:44.218 +05:30 [INF] Calculated investment amount: 1547.94.
2025-05-18 15:46:44.220 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:44.222 +05:30 [INF] Calculated investment amount: 1248.59.
2025-05-18 15:46:44.223 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:44.226 +05:30 [INF] Calculated investment amount: 1354.51.
2025-05-18 15:46:44.228 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:44.229 +05:30 [INF] Calculated investment amount: 320.36.
2025-05-18 15:46:44.231 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:44.235 +05:30 [INF] Calculated investment amount: 321.06.
2025-05-18 15:46:44.236 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:44.238 +05:30 [INF] Calculated investment amount: 874.57.
2025-05-18 15:46:44.240 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:44.243 +05:30 [INF] Calculated investment amount: 864.9.
2025-05-18 15:46:44.245 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:44.247 +05:30 [INF] Calculated investment amount: 281.04.
2025-05-18 15:46:44.250 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:44.252 +05:30 [INF] Calculated investment amount: 280.49.
2025-05-18 15:46:44.254 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:44.255 +05:30 [INF] Calculated investment amount: 204.84.
2025-05-18 15:46:44.257 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:44.259 +05:30 [INF] Calculated investment amount: 221.
2025-05-18 15:46:44.261 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:44.263 +05:30 [INF] Calculated investment amount: 338.85.
2025-05-18 15:46:44.264 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:44.267 +05:30 [INF] Calculated investment amount: 309.68.
2025-05-18 15:46:44.269 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:44.271 +05:30 [INF] Calculated investment amount: 447.96.
2025-05-18 15:46:44.273 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:44.275 +05:30 [INF] Calculated investment amount: 485.83.
2025-05-18 15:46:44.276 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:46:44.279 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:46:44.282 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:46:44.288 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:44.290 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 98.3658ms
2025-05-18 15:46:44.291 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:44.293 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 500 null application/json; charset=utf-8 117.6202ms
2025-05-18 15:46:49.235 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:46:49.246 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:49.248 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 12.233ms
2025-05-18 15:46:49.251 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 109
2025-05-18 15:46:49.255 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:49.256 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:49.259 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:49.268 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:49.270 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:49.272 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 15:46:49.274 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 15:46:49.275 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:49.276 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:49.278 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:46:49.279 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:46:49.282 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 15:46:49.284 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 15:46:49.287 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:46:49.294 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:46:49.296 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 15:46:49.298 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 15:46:49.302 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 15:46:49.308 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 15:46:49.310 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 15:46:49.312 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 15:46:49.314 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 15:46:49.317 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:49.320 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 15:46:49.323 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:49.326 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.4433ms
2025-05-18 15:46:49.328 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:49.329 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 77.708ms
2025-05-18 15:46:49.333 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - null null
2025-05-18 15:46:49.341 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:49.342 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 204 null null 8.9805ms
2025-05-18 15:46:49.350 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 477
2025-05-18 15:46:49.356 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:49.357 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:49.359 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:49.362 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 15:46:49.364 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:49.365 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:49.367 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:49.369 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:49.372 +05:30 [INF] Calculated investment amount: 1858.05.
2025-05-18 15:46:49.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:49.376 +05:30 [INF] Calculated investment amount: 1978.09.
2025-05-18 15:46:49.378 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:49.380 +05:30 [INF] Calculated investment amount: 907.53.
2025-05-18 15:46:49.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:49.384 +05:30 [INF] Calculated investment amount: 1045.61.
2025-05-18 15:46:49.385 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:49.388 +05:30 [INF] Calculated investment amount: 673.77.
2025-05-18 15:46:49.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:49.393 +05:30 [INF] Calculated investment amount: 732.12.
2025-05-18 15:46:49.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:49.396 +05:30 [INF] Calculated investment amount: 1443.49.
2025-05-18 15:46:49.398 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:49.401 +05:30 [INF] Calculated investment amount: 1436.95.
2025-05-18 15:46:49.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:49.406 +05:30 [INF] Calculated investment amount: 1311.85.
2025-05-18 15:46:49.408 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:49.410 +05:30 [INF] Calculated investment amount: 1296.08.
2025-05-18 15:46:49.412 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:49.415 +05:30 [INF] Calculated investment amount: 1261.24.
2025-05-18 15:46:49.417 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:49.420 +05:30 [INF] Calculated investment amount: 1260.56.
2025-05-18 15:46:49.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:49.423 +05:30 [INF] Calculated investment amount: 492.06.
2025-05-18 15:46:49.425 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:49.427 +05:30 [INF] Calculated investment amount: 527.46.
2025-05-18 15:46:49.428 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:49.431 +05:30 [INF] Calculated investment amount: 244.25.
2025-05-18 15:46:49.433 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:49.436 +05:30 [INF] Calculated investment amount: 222.41.
2025-05-18 15:46:49.437 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:49.439 +05:30 [INF] Calculated investment amount: 322.77.
2025-05-18 15:46:49.440 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:49.442 +05:30 [INF] Calculated investment amount: 348.87.
2025-05-18 15:46:49.444 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:46:49.446 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:46:49.453 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:46:49.460 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:49.462 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 100.143ms
2025-05-18 15:46:49.466 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:49.468 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 500 null application/json; charset=utf-8 117.7435ms
2025-05-18 15:46:53.137 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-18 15:46:53.147 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.149 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:53.151 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:53.229 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:46:53.231 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:46:53.233 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 15:46:53.235 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:46:53.237 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:46:53.239 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:46:53.242 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:46:53.244 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:46:53.253 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:46:53.255 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 15:46:53.257 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:46:53.263 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:46:53.266 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 15:46:53.268 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:46:53.270 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 15:46:53.272 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:46:53.274 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:46:53.276 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 15:46:53.278 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 15:46:53.282 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:46:53.285 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 15:46:53.287 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:46:53.289 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.9333ms
2025-05-18 15:46:53.290 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:46:53.291 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 154.6203ms
2025-05-18 15:46:53.295 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - application/json 481
2025-05-18 15:46:53.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:53.302 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:53.305 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}}
2025-05-18 15:46:53.306 +05:30 [INF] Target Amount: 100000
2025-05-18 15:46:53.307 +05:30 [INF] Investment Horizon: 20
2025-05-18 15:46:53.309 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:46:53.311 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 15:46:53.312 +05:30 [INF] Calculated investment amount: 1935.34.
2025-05-18 15:46:53.314 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:53.317 +05:30 [INF] Calculated investment amount: 2060.65.
2025-05-18 15:46:53.319 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 15:46:53.321 +05:30 [INF] Calculated investment amount: 504.5.
2025-05-18 15:46:53.322 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 15:46:53.324 +05:30 [INF] Calculated investment amount: 580.48.
2025-05-18 15:46:53.325 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 15:46:53.327 +05:30 [INF] Calculated investment amount: 187.
2025-05-18 15:46:53.328 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 15:46:53.330 +05:30 [INF] Calculated investment amount: 203.55.
2025-05-18 15:46:53.332 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:53.334 +05:30 [INF] Calculated investment amount: 3844.27.
2025-05-18 15:46:53.336 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 15:46:53.338 +05:30 [INF] Calculated investment amount: 3837.08.
2025-05-18 15:46:53.340 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 15:46:53.341 +05:30 [INF] Calculated investment amount: 1048.94.
2025-05-18 15:46:53.343 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.09, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 15:46:53.350 +05:30 [INF] Calculated investment amount: 1037.37.
2025-05-18 15:46:53.351 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 15:46:53.365 +05:30 [INF] Calculated investment amount: 2018.67.
2025-05-18 15:46:53.366 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 15:46:53.374 +05:30 [INF] Calculated investment amount: 2016.24.
2025-05-18 15:46:53.382 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 15:46:53.387 +05:30 [INF] Calculated investment amount: 770.37.
2025-05-18 15:46:53.391 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 15:46:53.428 +05:30 [INF] Calculated investment amount: 822.13.
2025-05-18 15:46:53.429 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 15:46:53.433 +05:30 [INF] Calculated investment amount: 202.97.
2025-05-18 15:46:53.435 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 15:46:53.437 +05:30 [INF] Calculated investment amount: 185.81.
2025-05-18 15:46:53.438 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 15:46:53.440 +05:30 [INF] Calculated investment amount: 134.98.
2025-05-18 15:46:53.442 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 15:46:53.459 +05:30 [INF] Calculated investment amount: 144.71.
2025-05-18 15:46:53.461 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 15:46:53.463 +05:30 [INF] Calculated investment amount: 214.06.
2025-05-18 15:46:53.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 15:46:53.467 +05:30 [INF] Calculated investment amount: 211.06.
2025-05-18 15:46:53.468 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 15:46:53.470 +05:30 [INF] Calculated investment amount: 452.31.
2025-05-18 15:46:53.471 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 15:46:53.474 +05:30 [INF] Calculated investment amount: 465.51.
2025-05-18 15:46:53.476 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 15:46:53.478 +05:30 [INF] Calculated investment amount: 343.9.
2025-05-18 15:46:53.479 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 15:46:53.482 +05:30 [INF] Calculated investment amount: 345.8.
2025-05-18 15:46:53.484 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 20.
2025-05-18 15:46:53.486 +05:30 [INF] Calculated investment amount: 176.28.
2025-05-18 15:46:53.487 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 20.
2025-05-18 15:46:53.490 +05:30 [INF] Calculated investment amount: 167.71.
2025-05-18 15:46:53.491 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 20.
2025-05-18 15:46:53.493 +05:30 [INF] Calculated investment amount: 262.41.
2025-05-18 15:46:53.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.04, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 20.
2025-05-18 15:46:53.498 +05:30 [INF] Calculated investment amount: 254.12.
2025-05-18 15:46:53.500 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.51, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 20.
2025-05-18 15:46:53.502 +05:30 [INF] Calculated investment amount: 73.1.
2025-05-18 15:46:53.503 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 20.
2025-05-18 15:46:53.505 +05:30 [INF] Calculated investment amount: 75.54.
2025-05-18 15:46:53.516 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:46:53.518 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:53.521 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 216.185ms
2025-05-18 15:46:53.522 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:46:53.523 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=20 - 200 null application/json; charset=utf-8 228.1556ms
2025-05-18 15:46:53.533 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:46:53.534 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:46:53.535 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.537 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.538 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.7765ms
2025-05-18 15:46:53.539 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.5928ms
2025-05-18 15:46:53.542 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:46:53.544 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:46:53.554 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.557 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:46:53.557 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:46:53.557 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:46:53.558 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:46:53.559 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:46:53.566 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:46:53.567 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:53.568 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:46:53.570 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.5056ms
2025-05-18 15:46:53.570 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:46:53.571 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:46:53.572 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.1837ms
2025-05-18 15:46:53.573 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 29.1105ms
2025-05-18 15:46:53.575 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:46:53.579 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 36.8818ms
2025-05-18 15:47:52.645 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:47:52.648 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:52.649 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.6067ms
2025-05-18 15:47:52.651 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 97
2025-05-18 15:47:52.655 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:52.656 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:47:52.660 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:47:52.669 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:47:52.672 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:47:52.673 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:47:52.674 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:47:52.675 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:47:52.676 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:47:52.677 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:47:52.678 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:47:52.682 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:47:52.684 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:47:52.687 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:47:52.688 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:47:52.692 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:47:52.693 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}
2025-05-18 15:47:52.695 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}
2025-05-18 15:47:52.697 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:47:52.699 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:47:52.701 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}
2025-05-18 15:47:52.702 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:47:52.709 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:47:52.711 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":65,"subAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"percentage":20,"subAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":10,"subAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}
2025-05-18 15:47:52.714 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:47:52.717 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 53.1626ms
2025-05-18 15:47:52.719 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:47:52.720 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 68.5665ms
2025-05-18 15:47:52.726 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - null null
2025-05-18 15:47:52.731 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:52.732 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 204 null null 5.5669ms
2025-05-18 15:47:52.735 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 513
2025-05-18 15:47:52.738 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:52.739 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:47:52.741 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:47:52.744 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":65,"SubAssets":{"Large Cap":16.25,"Mid Cap":21.67,"Small Cap":27.08}},"fixedIncome":{"Percentage":20,"SubAssets":{"Gov Bonds":3.33,"Corp Bonds":13.33,"Fixed Dep":3.33}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":2.22,"Residential Prop":2.22,"Commercial Prop":5.56}}}}
2025-05-18 15:47:52.746 +05:30 [INF] Target Amount: 10000
2025-05-18 15:47:52.748 +05:30 [INF] Investment Horizon: 23
2025-05-18 15:47:52.750 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:47:52.754 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.46, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-18 15:47:52.757 +05:30 [INF] Calculated investment amount: 94.48.
2025-05-18 15:47:52.758 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.79, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:47:52.760 +05:30 [INF] Calculated investment amount: 102.9.
2025-05-18 15:47:52.761 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.53, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-18 15:47:52.764 +05:30 [INF] Calculated investment amount: 76.79.
2025-05-18 15:47:52.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.14, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-18 15:47:52.768 +05:30 [INF] Calculated investment amount: 91.96.
2025-05-18 15:47:52.769 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.94, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-18 15:47:52.771 +05:30 [INF] Calculated investment amount: 68.46.
2025-05-18 15:47:52.773 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.14, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-18 15:47:52.775 +05:30 [INF] Calculated investment amount: 75.88.
2025-05-18 15:47:52.776 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.7, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-18 15:47:52.778 +05:30 [INF] Calculated investment amount: 55.35.
2025-05-18 15:47:52.780 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-18 15:47:52.782 +05:30 [INF] Calculated investment amount: 55.45.
2025-05-18 15:47:52.784 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.52, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-18 15:47:52.785 +05:30 [INF] Calculated investment amount: 143.58.
2025-05-18 15:47:52.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.81, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-18 15:47:52.789 +05:30 [INF] Calculated investment amount: 140.6.
2025-05-18 15:47:52.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.64, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-18 15:47:52.793 +05:30 [INF] Calculated investment amount: 47.87.
2025-05-18 15:47:52.794 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.69, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-18 15:47:52.796 +05:30 [INF] Calculated investment amount: 47.22.
2025-05-18 15:47:52.799 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-18 15:47:52.801 +05:30 [INF] Calculated investment amount: 16.35.
2025-05-18 15:47:52.803 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-18 15:47:52.804 +05:30 [INF] Calculated investment amount: 18.4.
2025-05-18 15:47:52.806 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:47:52.808 +05:30 [INF] Calculated investment amount: 26.02.
2025-05-18 15:47:52.809 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-18 15:47:52.813 +05:30 [INF] Calculated investment amount: 23.08.
2025-05-18 15:47:52.814 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-18 15:47:52.817 +05:30 [INF] Calculated investment amount: 35.07.
2025-05-18 15:47:52.818 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-18 15:47:52.820 +05:30 [INF] Calculated investment amount: 39.66.
2025-05-18 15:47:52.822 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:47:52.824 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:47:52.828 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:47:52.834 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:47:52.836 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 92.0914ms
2025-05-18 15:47:52.837 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:47:52.838 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 500 null application/json; charset=utf-8 103.1428ms
2025-05-18 15:47:56.985 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 96
2025-05-18 15:47:56.989 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:56.990 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:47:56.991 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:47:56.997 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:47:56.999 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:47:57.000 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 15:47:57.001 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:47:57.003 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:47:57.005 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:47:57.006 +05:30 [INF] Looking up goal tuning for goal: Retirement
2025-05-18 15:47:57.007 +05:30 [INF] Goal tuning found: {"fixedIncome_boost":10,"realEstate_boost":5}
2025-05-18 15:47:57.019 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:47:57.021 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-18 15:47:57.024 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:47:57.026 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:47:57.028 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 15:47:57.033 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:47:57.035 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}
2025-05-18 15:47:57.037 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:47:57.039 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:47:57.041 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4,"Residential Prop":4,"Commercial Prop":2}
2025-05-18 15:47:57.043 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 15:47:57.046 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:47:57.048 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":10,"subAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}
2025-05-18 15:47:57.051 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:47:57.053 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 56.4661ms
2025-05-18 15:47:57.054 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:47:57.055 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 69.9765ms
2025-05-18 15:47:57.058 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - application/json 486
2025-05-18 15:47:57.062 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:57.063 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:47:57.066 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:47:57.069 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":17.5,"Corp Bonds":7,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":10,"SubAssets":{"REITs":4,"Residential Prop":4,"Commercial Prop":2}}}}
2025-05-18 15:47:57.070 +05:30 [INF] Target Amount: 10000
2025-05-18 15:47:57.071 +05:30 [INF] Investment Horizon: 23
2025-05-18 15:47:57.071 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:47:57.073 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 23.
2025-05-18 15:47:57.075 +05:30 [INF] Calculated investment amount: 145.4.
2025-05-18 15:47:57.076 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:47:57.082 +05:30 [INF] Calculated investment amount: 158.25.
2025-05-18 15:47:57.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 23.
2025-05-18 15:47:57.086 +05:30 [INF] Calculated investment amount: 35.43.
2025-05-18 15:47:57.088 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 23.
2025-05-18 15:47:57.090 +05:30 [INF] Calculated investment amount: 42.44.
2025-05-18 15:47:57.091 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 23.
2025-05-18 15:47:57.095 +05:30 [INF] Calculated investment amount: 12.62.
2025-05-18 15:47:57.097 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 23.
2025-05-18 15:47:57.099 +05:30 [INF] Calculated investment amount: 14.03.
2025-05-18 15:47:57.101 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.93, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-18 15:47:57.103 +05:30 [INF] Calculated investment amount: 290.74.
2025-05-18 15:47:57.105 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.57, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 23.
2025-05-18 15:47:57.107 +05:30 [INF] Calculated investment amount: 291.52.
2025-05-18 15:47:57.109 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.42, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 23.
2025-05-18 15:47:57.116 +05:30 [INF] Calculated investment amount: 75.32.
2025-05-18 15:47:57.118 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.58, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 23.
2025-05-18 15:47:57.121 +05:30 [INF] Calculated investment amount: 73.91.
2025-05-18 15:47:57.122 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 23.
2025-05-18 15:47:57.124 +05:30 [INF] Calculated investment amount: 150.61.
2025-05-18 15:47:57.126 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 23.
2025-05-18 15:47:57.127 +05:30 [INF] Calculated investment amount: 149.22.
2025-05-18 15:47:57.128 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 23.
2025-05-18 15:47:57.131 +05:30 [INF] Calculated investment amount: 61.5.
2025-05-18 15:47:57.133 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 23.
2025-05-18 15:47:57.135 +05:30 [INF] Calculated investment amount: 68.44.
2025-05-18 15:47:57.137 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 23.
2025-05-18 15:47:57.139 +05:30 [INF] Calculated investment amount: 15.59.
2025-05-18 15:47:57.141 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 23.
2025-05-18 15:47:57.142 +05:30 [INF] Calculated investment amount: 13.85.
2025-05-18 15:47:57.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 23.
2025-05-18 15:47:57.147 +05:30 [INF] Calculated investment amount: 10.57.
2025-05-18 15:47:57.149 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 23.
2025-05-18 15:47:57.151 +05:30 [INF] Calculated investment amount: 11.81.
2025-05-18 15:47:57.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 23.
2025-05-18 15:47:57.154 +05:30 [INF] Calculated investment amount: 18.39.
2025-05-18 15:47:57.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 23.
2025-05-18 15:47:57.157 +05:30 [INF] Calculated investment amount: 18.23.
2025-05-18 15:47:57.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 23.
2025-05-18 15:47:57.160 +05:30 [INF] Calculated investment amount: 40.8.
2025-05-18 15:47:57.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 23.
2025-05-18 15:47:57.166 +05:30 [INF] Calculated investment amount: 41.38.
2025-05-18 15:47:57.167 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 23.
2025-05-18 15:47:57.170 +05:30 [INF] Calculated investment amount: 29.62.
2025-05-18 15:47:57.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 23.
2025-05-18 15:47:57.174 +05:30 [INF] Calculated investment amount: 29.53.
2025-05-18 15:47:57.175 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.93, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 23.
2025-05-18 15:47:57.176 +05:30 [INF] Calculated investment amount: 27.16.
2025-05-18 15:47:57.180 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.07, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 23.
2025-05-18 15:47:57.183 +05:30 [INF] Calculated investment amount: 25.67.
2025-05-18 15:47:57.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 23.
2025-05-18 15:47:57.186 +05:30 [INF] Calculated investment amount: 42.98.
2025-05-18 15:47:57.189 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.09, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 23.
2025-05-18 15:47:57.190 +05:30 [INF] Calculated investment amount: 41.34.
2025-05-18 15:47:57.192 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 23.
2025-05-18 15:47:57.194 +05:30 [INF] Calculated investment amount: 10.93.
2025-05-18 15:47:57.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.98, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 23.
2025-05-18 15:47:57.198 +05:30 [INF] Calculated investment amount: 11.41.
2025-05-18 15:47:57.205 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:47:57.207 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:47:57.210 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 141.2944ms
2025-05-18 15:47:57.212 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:47:57.214 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=23 - 200 null application/json; charset=utf-8 156.1745ms
2025-05-18 15:47:57.223 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:47:57.224 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:47:57.227 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:57.228 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.4253ms
2025-05-18 15:47:57.225 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:57.234 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:47:57.237 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 14.1903ms
2025-05-18 15:47:57.245 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:57.250 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:47:57.250 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:47:57.255 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:47:57.253 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:47:57.258 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:47:57.259 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:47:57.260 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:47:57.267 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:47:57.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:47:57.272 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:47:57.273 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.695ms
2025-05-18 15:47:57.276 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.0972ms
2025-05-18 15:47:57.281 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:47:57.278 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:47:57.283 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 33.5068ms
2025-05-18 15:47:57.284 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 50.6028ms
2025-05-18 15:48:15.679 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:48:15.683 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.683 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.6853ms
2025-05-18 15:48:15.687 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-18 15:48:15.689 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.690 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:48:15.691 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:48:15.697 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:48:15.700 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:48:15.701 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 15:48:15.702 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:48:15.704 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:48:15.706 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:48:15.707 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-18 15:48:15.707 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-18 15:48:15.715 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 15:48:15.717 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 15:48:15.719 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 15:48:15.721 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 15:48:15.723 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 15:48:15.724 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 15:48:15.727 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 15:48:15.730 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 15:48:15.732 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 15:48:15.734 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 15:48:15.736 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 15:48:15.739 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:48:15.741 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 15:48:15.742 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:48:15.745 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.7895ms
2025-05-18 15:48:15.747 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:48:15.749 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 61.9217ms
2025-05-18 15:48:15.753 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=5 - null null
2025-05-18 15:48:15.756 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.757 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=5 - 204 null null 4.1742ms
2025-05-18 15:48:15.761 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=5 - application/json 492
2025-05-18 15:48:15.765 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.766 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:48:15.768 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:48:15.772 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":16.67,"SubAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"Percentage":11.67,"SubAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"Percentage":11.67,"SubAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}}
2025-05-18 15:48:15.773 +05:30 [INF] Target Amount: 1000000
2025-05-18 15:48:15.774 +05:30 [INF] Investment Horizon: 5
2025-05-18 15:48:15.775 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:48:15.777 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 1000000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-18 15:48:15.780 +05:30 [INF] Calculated investment amount: 38807.58.
2025-05-18 15:48:15.782 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:48:15.783 +05:30 [INF] Calculated investment amount: 37030.08.
2025-05-18 15:48:15.785 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 1000000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-18 15:48:15.787 +05:30 [INF] Calculated investment amount: 26581.1.
2025-05-18 15:48:15.788 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 1000000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-18 15:48:15.790 +05:30 [INF] Calculated investment amount: 24984.3.
2025-05-18 15:48:15.792 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 1000000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-18 15:48:15.795 +05:30 [INF] Calculated investment amount: 24046.77.
2025-05-18 15:48:15.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 1000000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-18 15:48:15.799 +05:30 [INF] Calculated investment amount: 23509.82.
2025-05-18 15:48:15.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 1000000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:48:15.803 +05:30 [INF] Calculated investment amount: 35963.85.
2025-05-18 15:48:15.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 1000000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-18 15:48:15.806 +05:30 [INF] Calculated investment amount: 34884.47.
2025-05-18 15:48:15.807 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 1000000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-18 15:48:15.810 +05:30 [INF] Calculated investment amount: 42245.63.
2025-05-18 15:48:15.811 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 1000000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-18 15:48:15.814 +05:30 [INF] Calculated investment amount: 43502.39.
2025-05-18 15:48:15.815 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 1000000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-18 15:48:15.817 +05:30 [INF] Calculated investment amount: 33818.94.
2025-05-18 15:48:15.818 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 1000000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-18 15:48:15.821 +05:30 [INF] Calculated investment amount: 34712.87.
2025-05-18 15:48:15.822 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.69, TargetAmount: 1000000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-18 15:48:15.824 +05:30 [INF] Calculated investment amount: 25347.35.
2025-05-18 15:48:15.825 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.98, TargetAmount: 1000000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-18 15:48:15.827 +05:30 [INF] Calculated investment amount: 21955.83.
2025-05-18 15:48:15.830 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.36, TargetAmount: 1000000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:48:15.832 +05:30 [INF] Calculated investment amount: 15198.43.
2025-05-18 15:48:15.834 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.64, TargetAmount: 1000000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-18 15:48:15.836 +05:30 [INF] Calculated investment amount: 16170.61.
2025-05-18 15:48:15.837 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.74, TargetAmount: 1000000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-18 15:48:15.839 +05:30 [INF] Calculated investment amount: 18222.24.
2025-05-18 15:48:15.841 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 1000000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-18 15:48:15.844 +05:30 [INF] Calculated investment amount: 16113.49.
2025-05-18 15:48:15.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.78, TargetAmount: 1000000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-18 15:48:15.849 +05:30 [INF] Calculated investment amount: 13814.7.
2025-05-18 15:48:15.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.72, TargetAmount: 1000000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:48:15.853 +05:30 [INF] Calculated investment amount: 13476.65.
2025-05-18 15:48:15.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 1000000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-18 15:48:15.856 +05:30 [INF] Calculated investment amount: 13724.16.
2025-05-18 15:48:15.857 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 1000000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-18 15:48:15.859 +05:30 [INF] Calculated investment amount: 15370.04.
2025-05-18 15:48:15.861 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.27, TargetAmount: 1000000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-18 15:48:15.864 +05:30 [INF] Calculated investment amount: 17701.59.
2025-05-18 15:48:15.865 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.4, TargetAmount: 1000000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-18 15:48:15.867 +05:30 [INF] Calculated investment amount: 18450.5.
2025-05-18 15:48:15.868 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 1000000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-18 15:48:15.870 +05:30 [INF] Calculated investment amount: 13841.92.
2025-05-18 15:48:15.871 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 1000000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-18 15:48:15.873 +05:30 [INF] Calculated investment amount: 14356.15.
2025-05-18 15:48:15.875 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.4, TargetAmount: 1000000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-18 15:48:15.880 +05:30 [INF] Calculated investment amount: 10122.92.
2025-05-18 15:48:15.882 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.52, TargetAmount: 1000000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-18 15:48:15.884 +05:30 [INF] Calculated investment amount: 10686.73.
2025-05-18 15:48:15.885 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 1000000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-18 15:48:15.887 +05:30 [INF] Calculated investment amount: 13721.35.
2025-05-18 15:48:15.888 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.15, TargetAmount: 1000000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-18 15:48:15.890 +05:30 [INF] Calculated investment amount: 13471.84.
2025-05-18 15:48:15.896 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:48:15.898 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:48:15.901 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 130.235ms
2025-05-18 15:48:15.903 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:48:15.904 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=1000000&investmentHorizon=5 - 200 null application/json; charset=utf-8 143.1972ms
2025-05-18 15:48:15.916 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:48:15.917 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:48:15.918 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.921 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.921 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.2069ms
2025-05-18 15:48:15.922 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.6879ms
2025-05-18 15:48:15.924 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:48:15.931 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:48:15.933 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.935 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:48:15.935 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:48:15.936 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:48:15.937 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:48:15.939 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:48:15.940 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:48:15.943 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:48:15.944 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:48:15.947 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.4999ms
2025-05-18 15:48:15.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:48:15.949 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:48:15.951 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.2218ms
2025-05-18 15:48:15.953 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 21.933ms
2025-05-18 15:48:15.954 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:48:15.957 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.234ms
2025-05-18 15:49:51.983 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 15:49:51.987 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:49:51.987 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 4.0067ms
2025-05-18 15:49:51.990 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 15:49:51.993 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:49:51.998 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 15:49:51.999 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 15:49:52.086 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:49:52.091 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 90.1915ms
2025-05-18 15:49:52.094 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 15:49:52.095 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 104.3794ms
2025-05-18 15:52:34.468 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:52:34.470 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:34.471 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.0257ms
2025-05-18 15:52:34.473 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 102
2025-05-18 15:52:34.475 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:34.476 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:34.478 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:34.480 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:34.487 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:34.488 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 15:52:34.489 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:52:34.490 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:34.491 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:34.493 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:34.494 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:34.496 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 15:52:34.498 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 15:52:34.500 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 15:52:34.502 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:52:34.504 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 15:52:34.506 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}
2025-05-18 15:52:34.508 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}
2025-05-18 15:52:34.510 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 15:52:34.514 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:52:34.515 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 15:52:34.519 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 15:52:34.528 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:34.530 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":41.25,"subAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"percentage":21.25,"subAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 15:52:34.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:34.535 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.3365ms
2025-05-18 15:52:34.539 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:34.541 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 68.5473ms
2025-05-18 15:52:34.547 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - null null
2025-05-18 15:52:34.553 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:34.555 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 204 null null 7.7256ms
2025-05-18 15:52:34.559 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - application/json 515
2025-05-18 15:52:34.563 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:34.563 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:34.565 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:34.568 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":41.25,"SubAssets":{"Large Cap":16.5,"Mid Cap":12.38,"Small Cap":12.38}},"fixedIncome":{"Percentage":21.25,"SubAssets":{"Gov Bonds":6.38,"Corp Bonds":8.5,"Fixed Dep":6.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}}
2025-05-18 15:52:34.570 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:34.571 +05:30 [INF] Investment Horizon: 5
2025-05-18 15:52:34.573 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:34.576 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-18 15:52:34.579 +05:30 [INF] Calculated investment amount: 533.37.
2025-05-18 15:52:34.581 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:52:34.583 +05:30 [INF] Calculated investment amount: 509.41.
2025-05-18 15:52:34.584 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.59, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-18 15:52:34.586 +05:30 [INF] Calculated investment amount: 365.7.
2025-05-18 15:52:34.587 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.79, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-18 15:52:34.590 +05:30 [INF] Calculated investment amount: 343.61.
2025-05-18 15:52:34.592 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.37, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-18 15:52:34.595 +05:30 [INF] Calculated investment amount: 330.84.
2025-05-18 15:52:34.597 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.01, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-18 15:52:34.598 +05:30 [INF] Calculated investment amount: 323.33.
2025-05-18 15:52:34.600 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:52:34.602 +05:30 [INF] Calculated investment amount: 255.43.
2025-05-18 15:52:34.603 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.12, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-18 15:52:34.606 +05:30 [INF] Calculated investment amount: 246.8.
2025-05-18 15:52:34.608 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.16, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-18 15:52:34.610 +05:30 [INF] Calculated investment amount: 299.39.
2025-05-18 15:52:34.611 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.34, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-18 15:52:34.615 +05:30 [INF] Calculated investment amount: 307.99.
2025-05-18 15:52:34.617 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.13, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-18 15:52:34.622 +05:30 [INF] Calculated investment amount: 239.49.
2025-05-18 15:52:34.623 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.25, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-18 15:52:34.627 +05:30 [INF] Calculated investment amount: 246.32.
2025-05-18 15:52:34.629 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-18 15:52:34.633 +05:30 [INF] Calculated investment amount: 19.23.
2025-05-18 15:52:34.635 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-18 15:52:34.637 +05:30 [INF] Calculated investment amount: 16.21.
2025-05-18 15:52:34.639 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:52:34.642 +05:30 [INF] Calculated investment amount: 11.59.
2025-05-18 15:52:34.646 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-18 15:52:34.650 +05:30 [INF] Calculated investment amount: 12.25.
2025-05-18 15:52:34.652 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-18 15:52:34.655 +05:30 [INF] Calculated investment amount: 13.97.
2025-05-18 15:52:34.656 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-18 15:52:34.658 +05:30 [INF] Calculated investment amount: 12.12.
2025-05-18 15:52:34.660 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-18 15:52:34.662 +05:30 [INF] Calculated investment amount: 474.98.
2025-05-18 15:52:34.664 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:52:34.667 +05:30 [INF] Calculated investment amount: 460.71.
2025-05-18 15:52:34.670 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-18 15:52:34.672 +05:30 [INF] Calculated investment amount: 471.5.
2025-05-18 15:52:34.674 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-18 15:52:34.676 +05:30 [INF] Calculated investment amount: 526.03.
2025-05-18 15:52:34.677 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-18 15:52:34.680 +05:30 [INF] Calculated investment amount: 605.91.
2025-05-18 15:52:34.681 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-18 15:52:34.683 +05:30 [INF] Calculated investment amount: 632.7.
2025-05-18 15:52:34.685 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:34.687 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:34.691 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:34.696 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:34.700 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 132.7996ms
2025-05-18 15:52:34.703 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:34.705 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 500 null application/json; charset=utf-8 146.1914ms
2025-05-18 15:52:38.872 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 15:52:38.879 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:38.880 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:38.881 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:38.886 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:38.891 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:38.893 +05:30 [INF] Looking up base allocation for key: Low+Mod
2025-05-18 15:52:38.895 +05:30 [INF] Base allocation found: {"equity":20,"fixedIncome":50,"commodities":10,"cash":15,"realEstate":5}
2025-05-18 15:52:38.896 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:38.897 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:38.899 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:38.901 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:38.902 +05:30 [INF] Sub-allocations for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 15:52:38.908 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 15:52:38.911 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 15:52:38.913 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:38.914 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 15:52:38.915 +05:30 [INF] Added sub-assets for equity: {"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}
2025-05-18 15:52:38.917 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}
2025-05-18 15:52:38.919 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 15:52:38.922 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:38.923 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 15:52:38.925 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 15:52:38.928 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:38.929 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":22.5,"subAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"percentage":37.5,"subAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 15:52:38.931 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:38.936 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.9891ms
2025-05-18 15:52:38.942 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:38.946 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 73.7606ms
2025-05-18 15:52:38.952 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - application/json 514
2025-05-18 15:52:38.957 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:38.958 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:38.960 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:38.963 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":22.5,"SubAssets":{"Large Cap":14.06,"Mid Cap":5.62,"Small Cap":2.81}},"fixedIncome":{"Percentage":37.5,"SubAssets":{"Gov Bonds":18.75,"Corp Bonds":7.5,"Fixed Dep":11.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 15:52:38.965 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:38.967 +05:30 [INF] Investment Horizon: 5
2025-05-18 15:52:38.968 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:38.970 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.32, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-18 15:52:38.973 +05:30 [INF] Calculated investment amount: 454.51.
2025-05-18 15:52:38.974 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:52:38.977 +05:30 [INF] Calculated investment amount: 434.06.
2025-05-18 15:52:38.979 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-18 15:52:38.982 +05:30 [INF] Calculated investment amount: 165.92.
2025-05-18 15:52:38.984 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-18 15:52:38.986 +05:30 [INF] Calculated investment amount: 156.08.
2025-05-18 15:52:38.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-18 15:52:38.991 +05:30 [INF] Calculated investment amount: 75.31.
2025-05-18 15:52:38.993 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.36, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-18 15:52:38.996 +05:30 [INF] Calculated investment amount: 73.17.
2025-05-18 15:52:38.997 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:52:39.000 +05:30 [INF] Calculated investment amount: 749.83.
2025-05-18 15:52:39.001 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.18, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-18 15:52:39.004 +05:30 [INF] Calculated investment amount: 726.17.
2025-05-18 15:52:39.006 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-18 15:52:39.009 +05:30 [INF] Calculated investment amount: 264.13.
2025-05-18 15:52:39.011 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-18 15:52:39.014 +05:30 [INF] Calculated investment amount: 271.8.
2025-05-18 15:52:39.016 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.52, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-18 15:52:39.018 +05:30 [INF] Calculated investment amount: 422.35.
2025-05-18 15:52:39.020 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.73, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-18 15:52:39.022 +05:30 [INF] Calculated investment amount: 434.29.
2025-05-18 15:52:39.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-18 15:52:39.026 +05:30 [INF] Calculated investment amount: 59.08.
2025-05-18 15:52:39.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-18 15:52:39.030 +05:30 [INF] Calculated investment amount: 51.57.
2025-05-18 15:52:39.031 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 15:52:39.033 +05:30 [INF] Calculated investment amount: 18.68.
2025-05-18 15:52:39.035 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-18 15:52:39.037 +05:30 [INF] Calculated investment amount: 20.21.
2025-05-18 15:52:39.039 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-18 15:52:39.041 +05:30 [INF] Calculated investment amount: 11.31.
2025-05-18 15:52:39.042 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-18 15:52:39.045 +05:30 [INF] Calculated investment amount: 9.98.
2025-05-18 15:52:39.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-18 15:52:39.049 +05:30 [INF] Calculated investment amount: 365.55.
2025-05-18 15:52:39.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 15:52:39.054 +05:30 [INF] Calculated investment amount: 354.15.
2025-05-18 15:52:39.055 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-18 15:52:39.058 +05:30 [INF] Calculated investment amount: 604.54.
2025-05-18 15:52:39.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-18 15:52:39.061 +05:30 [INF] Calculated investment amount: 673.98.
2025-05-18 15:52:39.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-18 15:52:39.065 +05:30 [INF] Calculated investment amount: 582.51.
2025-05-18 15:52:39.066 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-18 15:52:39.068 +05:30 [INF] Calculated investment amount: 608.1.
2025-05-18 15:52:39.070 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:39.072 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:39.075 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:39.080 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:39.082 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 119.7249ms
2025-05-18 15:52:39.084 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:39.086 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=5 - 500 null application/json; charset=utf-8 134.2301ms
2025-05-18 15:52:45.165 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:52:45.170 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:45.173 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.8401ms
2025-05-18 15:52:45.178 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 15:52:45.180 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:45.181 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:45.183 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:45.186 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:45.188 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:45.190 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 15:52:45.194 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:52:45.196 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:45.197 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:45.199 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:45.200 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:45.203 +05:30 [INF] Sub-allocations for equity: {"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}
2025-05-18 15:52:45.205 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}
2025-05-18 15:52:45.208 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}
2025-05-18 15:52:45.208 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:45.209 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}
2025-05-18 15:52:45.212 +05:30 [INF] Added sub-assets for equity: {"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}
2025-05-18 15:52:45.214 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}
2025-05-18 15:52:45.216 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}
2025-05-18 15:52:45.221 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:45.223 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}
2025-05-18 15:52:45.224 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}
2025-05-18 15:52:45.227 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:45.229 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}
2025-05-18 15:52:45.232 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:45.235 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.339ms
2025-05-18 15:52:45.237 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:45.239 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 61.2107ms
2025-05-18 15:52:45.242 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - null null
2025-05-18 15:52:45.249 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:45.251 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 204 null null 9.5148ms
2025-05-18 15:52:45.258 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 523
2025-05-18 15:52:45.264 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:45.267 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:45.269 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:45.273 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":31.25,"SubAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"Percentage":31.25,"SubAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}}
2025-05-18 15:52:45.275 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:45.278 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:52:45.279 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:45.282 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.17, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:52:45.286 +05:30 [INF] Calculated investment amount: 243.46.
2025-05-18 15:52:45.288 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:45.290 +05:30 [INF] Calculated investment amount: 250.
2025-05-18 15:52:45.293 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.15, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:52:45.298 +05:30 [INF] Calculated investment amount: 70.92.
2025-05-18 15:52:45.301 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.66, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:52:45.310 +05:30 [INF] Calculated investment amount: 76.5.
2025-05-18 15:52:45.312 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:52:45.316 +05:30 [INF] Calculated investment amount: 28.16.
2025-05-18 15:52:45.318 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.9, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:52:45.322 +05:30 [INF] Calculated investment amount: 29.58.
2025-05-18 15:52:45.326 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:52:45.330 +05:30 [INF] Calculated investment amount: 383.37.
2025-05-18 15:52:45.333 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 15.
2025-05-18 15:52:45.341 +05:30 [INF] Calculated investment amount: 378.65.
2025-05-18 15:52:45.343 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 15.
2025-05-18 15:52:45.346 +05:30 [INF] Calculated investment amount: 114.07.
2025-05-18 15:52:45.347 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.19, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 15.
2025-05-18 15:52:45.349 +05:30 [INF] Calculated investment amount: 114.01.
2025-05-18 15:52:45.350 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.61, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 15.
2025-05-18 15:52:45.352 +05:30 [INF] Calculated investment amount: 206.5.
2025-05-18 15:52:45.355 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.77, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 15.
2025-05-18 15:52:45.357 +05:30 [INF] Calculated investment amount: 207.68.
2025-05-18 15:52:45.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.43, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 15.
2025-05-18 15:52:45.361 +05:30 [INF] Calculated investment amount: 13.94.
2025-05-18 15:52:45.362 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.35, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 15.
2025-05-18 15:52:45.368 +05:30 [INF] Calculated investment amount: 14.
2025-05-18 15:52:45.371 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.15, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:45.376 +05:30 [INF] Calculated investment amount: 4.01.
2025-05-18 15:52:45.378 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.16, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 15.
2025-05-18 15:52:45.380 +05:30 [INF] Calculated investment amount: 3.68.
2025-05-18 15:52:45.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.09, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 15.
2025-05-18 15:52:45.384 +05:30 [INF] Calculated investment amount: 2.65.
2025-05-18 15:52:45.386 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.07, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 15.
2025-05-18 15:52:45.388 +05:30 [INF] Calculated investment amount: 2.54.
2025-05-18 15:52:45.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 15.
2025-05-18 15:52:45.392 +05:30 [INF] Calculated investment amount: 220.18.
2025-05-18 15:52:45.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:52:45.398 +05:30 [INF] Calculated investment amount: 217.42.
2025-05-18 15:52:45.402 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 15.
2025-05-18 15:52:45.407 +05:30 [INF] Calculated investment amount: 428.57.
2025-05-18 15:52:45.409 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 15.
2025-05-18 15:52:45.411 +05:30 [INF] Calculated investment amount: 455.32.
2025-05-18 15:52:45.413 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 15.
2025-05-18 15:52:45.415 +05:30 [INF] Calculated investment amount: 354.23.
2025-05-18 15:52:45.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 15.
2025-05-18 15:52:45.420 +05:30 [INF] Calculated investment amount: 359.39.
2025-05-18 15:52:45.422 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:45.425 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:45.429 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:45.435 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:45.439 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 165.7477ms
2025-05-18 15:52:45.441 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:45.442 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 500 null application/json; charset=utf-8 183.604ms
2025-05-18 15:52:50.063 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 15:52:50.067 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:50.069 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:50.070 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:50.075 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:50.077 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:50.077 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 15:52:50.079 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:52:50.080 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:50.081 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:50.082 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:50.087 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:50.090 +05:30 [INF] Sub-allocations for equity: {"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}
2025-05-18 15:52:50.092 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}
2025-05-18 15:52:50.093 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}
2025-05-18 15:52:50.097 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:50.099 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}
2025-05-18 15:52:50.104 +05:30 [INF] Added sub-assets for equity: {"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}
2025-05-18 15:52:50.107 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}
2025-05-18 15:52:50.109 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}
2025-05-18 15:52:50.110 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 15:52:50.114 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}
2025-05-18 15:52:50.116 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}
2025-05-18 15:52:50.122 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:50.124 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}
2025-05-18 15:52:50.125 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:50.128 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 53.4158ms
2025-05-18 15:52:50.131 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:50.135 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 70.511ms
2025-05-18 15:52:50.141 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 523
2025-05-18 15:52:50.150 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:50.152 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:50.154 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:50.160 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":31.25,"SubAssets":{"Large Cap":19.53,"Mid Cap":7.81,"Small Cap":3.91}},"fixedIncome":{"Percentage":31.25,"SubAssets":{"Gov Bonds":15.62,"Corp Bonds":6.25,"Fixed Dep":9.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.78,"Energy":0.31,"Agriculture":0.16}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.5,"Residential Prop":-1.5,"Commercial Prop":-0.75}}}}
2025-05-18 15:52:50.164 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:50.168 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:52:50.169 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:50.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.17, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:52:50.180 +05:30 [INF] Calculated investment amount: 243.46.
2025-05-18 15:52:50.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.36, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:50.186 +05:30 [INF] Calculated investment amount: 250.
2025-05-18 15:52:50.187 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.15, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:52:50.191 +05:30 [INF] Calculated investment amount: 70.92.
2025-05-18 15:52:50.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.66, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:52:50.202 +05:30 [INF] Calculated investment amount: 76.5.
2025-05-18 15:52:50.205 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.01, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:52:50.208 +05:30 [INF] Calculated investment amount: 28.16.
2025-05-18 15:52:50.210 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.9, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:52:50.215 +05:30 [INF] Calculated investment amount: 29.58.
2025-05-18 15:52:50.220 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.97, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:52:50.228 +05:30 [INF] Calculated investment amount: 383.37.
2025-05-18 15:52:50.231 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.65, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 15.
2025-05-18 15:52:50.238 +05:30 [INF] Calculated investment amount: 378.65.
2025-05-18 15:52:50.241 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 15.
2025-05-18 15:52:50.245 +05:30 [INF] Calculated investment amount: 114.07.
2025-05-18 15:52:50.248 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.19, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 15.
2025-05-18 15:52:50.257 +05:30 [INF] Calculated investment amount: 114.01.
2025-05-18 15:52:50.260 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.61, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 15.
2025-05-18 15:52:50.264 +05:30 [INF] Calculated investment amount: 206.5.
2025-05-18 15:52:50.268 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.77, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 15.
2025-05-18 15:52:50.274 +05:30 [INF] Calculated investment amount: 207.68.
2025-05-18 15:52:50.278 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.43, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 15.
2025-05-18 15:52:50.283 +05:30 [INF] Calculated investment amount: 13.94.
2025-05-18 15:52:50.286 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.35, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 15.
2025-05-18 15:52:50.289 +05:30 [INF] Calculated investment amount: 14.
2025-05-18 15:52:50.291 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.15, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:50.295 +05:30 [INF] Calculated investment amount: 4.01.
2025-05-18 15:52:50.298 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.16, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 15.
2025-05-18 15:52:50.303 +05:30 [INF] Calculated investment amount: 3.68.
2025-05-18 15:52:50.306 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.09, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 15.
2025-05-18 15:52:50.309 +05:30 [INF] Calculated investment amount: 2.65.
2025-05-18 15:52:50.311 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.07, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 15.
2025-05-18 15:52:50.315 +05:30 [INF] Calculated investment amount: 2.54.
2025-05-18 15:52:50.319 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 15.
2025-05-18 15:52:50.326 +05:30 [INF] Calculated investment amount: 220.18.
2025-05-18 15:52:50.328 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:52:50.331 +05:30 [INF] Calculated investment amount: 217.42.
2025-05-18 15:52:50.334 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 15.
2025-05-18 15:52:50.343 +05:30 [INF] Calculated investment amount: 428.57.
2025-05-18 15:52:50.346 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 15.
2025-05-18 15:52:50.349 +05:30 [INF] Calculated investment amount: 455.32.
2025-05-18 15:52:50.353 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 15.
2025-05-18 15:52:50.358 +05:30 [INF] Calculated investment amount: 354.23.
2025-05-18 15:52:50.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 15.
2025-05-18 15:52:50.365 +05:30 [INF] Calculated investment amount: 359.39.
2025-05-18 15:52:50.367 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:50.371 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:50.379 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:50.389 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:50.392 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 232.0969ms
2025-05-18 15:52:50.396 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:50.399 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 500 null application/json; charset=utf-8 257.8487ms
2025-05-18 15:52:52.778 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:52:52.785 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:52.788 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 10.0967ms
2025-05-18 15:52:52.794 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 15:52:52.872 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:52.873 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:52.875 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:52.881 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:52.884 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:52.893 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 15:52:52.894 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 15:52:52.895 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:52.897 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:52.898 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:52.899 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:52.902 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 15:52:52.905 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 15:52:52.908 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 15:52:52.910 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:52:52.912 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 15:52:52.914 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 15:52:52.916 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}
2025-05-18 15:52:52.918 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 15:52:52.921 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 15:52:52.923 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}
2025-05-18 15:52:52.924 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 15:52:52.927 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:52.928 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}
2025-05-18 15:52:52.930 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:52.932 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 51.6107ms
2025-05-18 15:52:52.934 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:52.935 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 141.2548ms
2025-05-18 15:52:52.939 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - null null
2025-05-18 15:52:52.942 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:52.943 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 204 null null 4.4431ms
2025-05-18 15:52:52.948 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 483
2025-05-18 15:52:52.952 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:52.953 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:52.954 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:52.957 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":4.5,"Corp Bonds":6,"Fixed Dep":4.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.88,"Residential Prop":-1.25,"Commercial Prop":-1.88}}}}
2025-05-18 15:52:52.959 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:52.960 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:52:52.962 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:52.964 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:52:52.966 +05:30 [INF] Calculated investment amount: 249.45.
2025-05-18 15:52:52.967 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:52.970 +05:30 [INF] Calculated investment amount: 255.87.
2025-05-18 15:52:52.971 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:52:52.973 +05:30 [INF] Calculated investment amount: 136.37.
2025-05-18 15:52:52.974 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:52:52.977 +05:30 [INF] Calculated investment amount: 146.72.
2025-05-18 15:52:52.978 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:52:52.981 +05:30 [INF] Calculated investment amount: 108.15.
2025-05-18 15:52:52.983 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:52:52.986 +05:30 [INF] Calculated investment amount: 113.35.
2025-05-18 15:52:52.987 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.3, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:52:52.989 +05:30 [INF] Calculated investment amount: 110.63.
2025-05-18 15:52:52.990 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 15.
2025-05-18 15:52:52.993 +05:30 [INF] Calculated investment amount: 108.89.
2025-05-18 15:52:52.994 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.94, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 15.
2025-05-18 15:52:52.996 +05:30 [INF] Calculated investment amount: 109.59.
2025-05-18 15:52:52.997 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.06, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 15.
2025-05-18 15:52:52.999 +05:30 [INF] Calculated investment amount: 109.37.
2025-05-18 15:52:53.000 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 15.
2025-05-18 15:52:53.003 +05:30 [INF] Calculated investment amount: 98.99.
2025-05-18 15:52:53.004 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 15.
2025-05-18 15:52:53.006 +05:30 [INF] Calculated investment amount: 99.7.
2025-05-18 15:52:53.008 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:53.010 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:53.014 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:53.020 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:53.023 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 66.0821ms
2025-05-18 15:52:53.024 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:53.026 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 500 null application/json; charset=utf-8 78.0558ms
2025-05-18 15:52:55.612 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 15:52:55.617 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:55.619 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:55.621 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:52:55.625 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:52:55.627 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:52:55.628 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:52:55.630 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:52:55.632 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:52:55.635 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:52:55.637 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 15:52:55.639 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 15:52:55.642 +05:30 [INF] Sub-allocations for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 15:52:55.645 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 15:52:55.648 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 15:52:55.649 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 15:52:55.651 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 15:52:55.654 +05:30 [INF] Added sub-assets for equity: {"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}
2025-05-18 15:52:55.657 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}
2025-05-18 15:52:55.663 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}
2025-05-18 15:52:55.665 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 15:52:55.668 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}
2025-05-18 15:52:55.672 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 15:52:55.675 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:52:55.677 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":68.75,"subAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"percentage":-1.25,"subAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"percentage":-1.25,"subAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-6.25,"subAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}
2025-05-18 15:52:55.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:52:55.681 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 56.4696ms
2025-05-18 15:52:55.684 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:52:55.686 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.4396ms
2025-05-18 15:52:55.694 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 525
2025-05-18 15:52:55.702 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:52:55.705 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:55.709 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:52:55.714 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":68.75,"SubAssets":{"Large Cap":17.19,"Mid Cap":22.92,"Small Cap":28.65}},"fixedIncome":{"Percentage":-1.25,"SubAssets":{"Gov Bonds":-0.21,"Corp Bonds":-0.83,"Fixed Dep":-0.21}},"commodities":{"Percentage":-1.25,"SubAssets":{"Precious Metals":-0.21,"Energy":-0.52,"Agriculture":-0.52}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-6.25,"SubAssets":{"REITs":-1.39,"Residential Prop":-1.39,"Commercial Prop":-3.47}}}}
2025-05-18 15:52:55.717 +05:30 [INF] Target Amount: 10000
2025-05-18 15:52:55.719 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:52:55.720 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:52:55.723 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.95, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:52:55.730 +05:30 [INF] Calculated investment amount: 214.26.
2025-05-18 15:52:55.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.24, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:52:55.738 +05:30 [INF] Calculated investment amount: 220.08.
2025-05-18 15:52:55.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:52:55.742 +05:30 [INF] Calculated investment amount: 208.31.
2025-05-18 15:52:55.744 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.73, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:52:55.747 +05:30 [INF] Calculated investment amount: 224.26.
2025-05-18 15:52:55.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.75, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:52:55.752 +05:30 [INF] Calculated investment amount: 206.64.
2025-05-18 15:52:55.753 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.9, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:52:55.755 +05:30 [INF] Calculated investment amount: 216.43.
2025-05-18 15:52:55.757 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:52:55.759 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:52:55.764 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:52:55.772 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:52:55.774 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 60.4085ms
2025-05-18 15:52:55.775 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:52:55.777 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 500 null application/json; charset=utf-8 83.0243ms
2025-05-18 15:53:00.951 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 15:53:00.954 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:00.956 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.863ms
2025-05-18 15:53:00.963 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-18 15:53:00.970 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:00.972 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:53:00.975 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:53:00.979 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:53:00.982 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:53:00.984 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 15:53:00.986 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 15:53:00.988 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:53:00.989 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:53:00.995 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:53:00.998 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:53:01.002 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:53:01.006 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:53:01.008 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:53:01.010 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:53:01.013 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:53:01.015 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}
2025-05-18 15:53:01.017 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}
2025-05-18 15:53:01.022 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}
2025-05-18 15:53:01.025 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}
2025-05-18 15:53:01.027 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}
2025-05-18 15:53:01.030 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:53:01.033 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:53:01.035 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":80,"subAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"percentage":10,"subAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"percentage":-5,"subAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}
2025-05-18 15:53:01.037 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:53:01.039 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.658ms
2025-05-18 15:53:01.042 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:53:01.045 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.6812ms
2025-05-18 15:53:01.049 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - null null
2025-05-18 15:53:01.056 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:01.060 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 204 null null 10.6822ms
2025-05-18 15:53:01.065 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 508
2025-05-18 15:53:01.070 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:01.071 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:53:01.073 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:53:01.077 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":80,"SubAssets":{"Large Cap":20,"Mid Cap":26.67,"Small Cap":33.33}},"fixedIncome":{"Percentage":10,"SubAssets":{"Gov Bonds":1.67,"Corp Bonds":6.67,"Fixed Dep":1.67}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":1.67,"Energy":4.17,"Agriculture":4.17}},"cash":{"Percentage":-5,"SubAssets":{"Liquid Mutual Funds":-2.5,"Savings Acc":-1.25,"T. Bill":-1.25}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.11,"Residential Prop":1.11,"Commercial Prop":2.78}}}}
2025-05-18 15:53:01.078 +05:30 [INF] Target Amount: 10000
2025-05-18 15:53:01.080 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:53:01.081 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:53:01.084 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:53:01.086 +05:30 [INF] Calculated investment amount: 249.45.
2025-05-18 15:53:01.087 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:53:01.090 +05:30 [INF] Calculated investment amount: 255.87.
2025-05-18 15:53:01.091 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.19, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:53:01.094 +05:30 [INF] Calculated investment amount: 242.49.
2025-05-18 15:53:01.096 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.48, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:53:01.098 +05:30 [INF] Calculated investment amount: 260.84.
2025-05-18 15:53:01.100 +05:30 [INF] Calculating investment amount with PercentageSplit: 17.16, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:53:01.103 +05:30 [INF] Calculated investment amount: 240.41.
2025-05-18 15:53:01.105 +05:30 [INF] Calculating investment amount with PercentageSplit: 16.17, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:53:01.107 +05:30 [INF] Calculated investment amount: 251.78.
2025-05-18 15:53:01.109 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:53:01.111 +05:30 [INF] Calculated investment amount: 40.89.
2025-05-18 15:53:01.115 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 15.
2025-05-18 15:53:01.119 +05:30 [INF] Calculated investment amount: 40.59.
2025-05-18 15:53:01.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.26, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 15.
2025-05-18 15:53:01.126 +05:30 [INF] Calculated investment amount: 121.52.
2025-05-18 15:53:01.129 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.41, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 15.
2025-05-18 15:53:01.134 +05:30 [INF] Calculated investment amount: 121.87.
2025-05-18 15:53:01.137 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.82, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 15.
2025-05-18 15:53:01.142 +05:30 [INF] Calculated investment amount: 36.73.
2025-05-18 15:53:01.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.85, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 15.
2025-05-18 15:53:01.148 +05:30 [INF] Calculated investment amount: 37.01.
2025-05-18 15:53:01.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 15.
2025-05-18 15:53:01.153 +05:30 [INF] Calculated investment amount: 29.82.
2025-05-18 15:53:01.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.75, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 15.
2025-05-18 15:53:01.157 +05:30 [INF] Calculated investment amount: 30.
2025-05-18 15:53:01.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.97, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:53:01.162 +05:30 [INF] Calculated investment amount: 52.62.
2025-05-18 15:53:01.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 15.
2025-05-18 15:53:01.166 +05:30 [INF] Calculated investment amount: 50.56.
2025-05-18 15:53:01.168 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.29, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 15.
2025-05-18 15:53:01.171 +05:30 [INF] Calculated investment amount: 67.36.
2025-05-18 15:53:01.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.88, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 15.
2025-05-18 15:53:01.176 +05:30 [INF] Calculated investment amount: 68.14.
2025-05-18 15:53:01.179 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 15:53:01.183 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 15:53:01.187 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 15:53:01.193 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:01.195 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 118.4849ms
2025-05-18 15:53:01.196 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:53:01.198 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 500 null application/json; charset=utf-8 132.0044ms
2025-05-18 15:53:03.715 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-18 15:53:03.723 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:03.726 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:53:03.728 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:53:03.732 +05:30 [INF] Starting allocation calculation...
2025-05-18 15:53:03.734 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 15:53:03.735 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 15:53:03.736 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 15:53:03.737 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 15:53:03.742 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 15:53:03.743 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 15:53:03.746 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 15:53:03.748 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:53:03.752 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 15:53:03.757 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:53:03.759 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:53:03.761 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 15:53:03.763 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 15:53:03.765 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 15:53:03.768 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 15:53:03.771 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 15:53:03.774 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 15:53:03.777 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 15:53:03.781 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 15:53:03.785 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 15:53:03.789 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 15:53:03.792 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 59.8578ms
2025-05-18 15:53:03.796 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 15:53:03.798 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 82.6774ms
2025-05-18 15:53:03.804 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - application/json 481
2025-05-18 15:53:03.812 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:03.813 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:53:03.815 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:53:03.819 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}}
2025-05-18 15:53:03.821 +05:30 [INF] Target Amount: 10000
2025-05-18 15:53:03.822 +05:30 [INF] Investment Horizon: 15
2025-05-18 15:53:03.825 +05:30 [INF] Starting product allocation calculation.
2025-05-18 15:53:03.828 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 15.
2025-05-18 15:53:03.831 +05:30 [INF] Calculated investment amount: 311.69.
2025-05-18 15:53:03.832 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:53:03.835 +05:30 [INF] Calculated investment amount: 319.98.
2025-05-18 15:53:03.837 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 15.
2025-05-18 15:53:03.839 +05:30 [INF] Calculated investment amount: 90.91.
2025-05-18 15:53:03.842 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 15.
2025-05-18 15:53:03.846 +05:30 [INF] Calculated investment amount: 97.81.
2025-05-18 15:53:03.847 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 15.
2025-05-18 15:53:03.850 +05:30 [INF] Calculated investment amount: 36.
2025-05-18 15:53:03.851 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 15.
2025-05-18 15:53:03.854 +05:30 [INF] Calculated investment amount: 37.84.
2025-05-18 15:53:03.856 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:53:03.858 +05:30 [INF] Calculated investment amount: 490.64.
2025-05-18 15:53:03.860 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 15.
2025-05-18 15:53:03.863 +05:30 [INF] Calculated investment amount: 485.07.
2025-05-18 15:53:03.866 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 15.
2025-05-18 15:53:03.870 +05:30 [INF] Calculated investment amount: 145.75.
2025-05-18 15:53:03.873 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.09, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 15.
2025-05-18 15:53:03.878 +05:30 [INF] Calculated investment amount: 146.18.
2025-05-18 15:53:03.880 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 15.
2025-05-18 15:53:03.885 +05:30 [INF] Calculated investment amount: 263.83.
2025-05-18 15:53:03.886 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 15.
2025-05-18 15:53:03.889 +05:30 [INF] Calculated investment amount: 266.02.
2025-05-18 15:53:03.891 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 15.
2025-05-18 15:53:03.894 +05:30 [INF] Calculated investment amount: 112.15.
2025-05-18 15:53:03.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 15.
2025-05-18 15:53:03.898 +05:30 [INF] Calculated investment amount: 111.58.
2025-05-18 15:53:03.901 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 15.
2025-05-18 15:53:03.905 +05:30 [INF] Calculated investment amount: 31.52.
2025-05-18 15:53:03.906 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 15.
2025-05-18 15:53:03.910 +05:30 [INF] Calculated investment amount: 30.33.
2025-05-18 15:53:03.912 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 15.
2025-05-18 15:53:03.915 +05:30 [INF] Calculated investment amount: 20.3.
2025-05-18 15:53:03.917 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 15.
2025-05-18 15:53:03.920 +05:30 [INF] Calculated investment amount: 20.3.
2025-05-18 15:53:03.922 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 15.
2025-05-18 15:53:03.928 +05:30 [INF] Calculated investment amount: 27.58.
2025-05-18 15:53:03.930 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 15.
2025-05-18 15:53:03.935 +05:30 [INF] Calculated investment amount: 26.94.
2025-05-18 15:53:03.940 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 15.
2025-05-18 15:53:03.944 +05:30 [INF] Calculated investment amount: 53.72.
2025-05-18 15:53:03.946 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 15.
2025-05-18 15:53:03.951 +05:30 [INF] Calculated investment amount: 56.64.
2025-05-18 15:53:03.955 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 15.
2025-05-18 15:53:03.957 +05:30 [INF] Calculated investment amount: 44.1.
2025-05-18 15:53:03.959 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 15.
2025-05-18 15:53:03.961 +05:30 [INF] Calculated investment amount: 44.98.
2025-05-18 15:53:03.963 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 10000, AnnualReturn: 8.9, InvestmentHorizon: 15.
2025-05-18 15:53:03.965 +05:30 [INF] Calculated investment amount: 27.
2025-05-18 15:53:03.966 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 10000, AnnualReturn: 9.5, InvestmentHorizon: 15.
2025-05-18 15:53:03.970 +05:30 [INF] Calculated investment amount: 26.4.
2025-05-18 15:53:03.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 10000, AnnualReturn: 6.7, InvestmentHorizon: 15.
2025-05-18 15:53:03.974 +05:30 [INF] Calculated investment amount: 36.29.
2025-05-18 15:53:03.975 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.04, TargetAmount: 10000, AnnualReturn: 7.3, InvestmentHorizon: 15.
2025-05-18 15:53:03.977 +05:30 [INF] Calculated investment amount: 36.14.
2025-05-18 15:53:03.979 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.51, TargetAmount: 10000, AnnualReturn: 10.2, InvestmentHorizon: 15.
2025-05-18 15:53:03.982 +05:30 [INF] Calculated investment amount: 11.88.
2025-05-18 15:53:03.984 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.8, InvestmentHorizon: 15.
2025-05-18 15:53:03.987 +05:30 [INF] Calculated investment amount: 12.05.
2025-05-18 15:53:03.993 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 15:53:03.996 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:03.999 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 180.1756ms
2025-05-18 15:53:04.001 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 15:53:04.003 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=15 - 200 null application/json; charset=utf-8 198.5686ms
2025-05-18 15:53:04.011 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:53:04.012 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:53:04.016 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:04.018 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:04.019 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.6209ms
2025-05-18 15:53:04.020 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.3453ms
2025-05-18 15:53:04.023 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:53:04.027 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:53:04.030 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:04.032 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:04.032 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:04.033 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:04.034 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:53:04.037 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:53:04.035 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:53:04.040 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:53:04.044 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:04.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:04.047 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.8667ms
2025-05-18 15:53:04.048 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.9213ms
2025-05-18 15:53:04.054 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:04.050 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:04.056 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 32.8991ms
2025-05-18 15:53:04.057 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 30.2826ms
2025-05-18 15:53:35.905 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:53:35.905 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:53:35.908 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:35.909 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:35.910 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.9633ms
2025-05-18 15:53:35.955 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 50.0891ms
2025-05-18 15:53:35.958 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:53:35.960 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:53:35.968 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:35.971 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:35.971 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:35.972 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:53:35.973 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:35.974 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:53:35.975 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:35.976 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:53:35.977 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.1105ms
2025-05-18 15:53:35.992 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:53:35.992 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:35.993 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:35.993 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 35.5863ms
2025-05-18 15:53:36.004 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 28.5577ms
2025-05-18 15:53:36.006 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:36.007 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 47.1711ms
2025-05-18 15:53:37.745 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:53:37.745 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:53:37.748 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:37.750 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:53:37.751 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:37.751 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:37.752 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:53:37.753 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:53:37.756 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:53:37.756 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:37.759 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:53:37.760 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.7123ms
2025-05-18 15:53:37.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:53:37.770 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:53:37.771 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.6606ms
2025-05-18 15:53:37.772 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 27.2072ms
2025-05-18 15:53:37.773 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:53:37.777 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 32.1325ms
2025-05-18 15:55:26.942 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:26.942 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:26.947 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:26.950 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:26.951 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 9.4198ms
2025-05-18 15:55:26.950 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.7477ms
2025-05-18 15:55:26.961 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:26.965 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:26.969 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:26.982 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:26.983 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:26.983 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:26.985 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:55:26.986 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:55:26.988 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:55:26.990 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:55:26.991 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:26.991 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:26.992 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.3221ms
2025-05-18 15:55:26.994 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.057ms
2025-05-18 15:55:26.997 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:26.998 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:27.002 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 40.9222ms
2025-05-18 15:55:27.003 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 37.7085ms
2025-05-18 15:55:27.323 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:27.323 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:27.326 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:27.328 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:27.328 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:27.329 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:27.329 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:55:27.330 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:55:27.331 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:55:27.332 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:27.332 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:55:27.333 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.6953ms
2025-05-18 15:55:27.334 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:27.334 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:27.337 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 14.1497ms
2025-05-18 15:55:27.336 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.3871ms
2025-05-18 15:55:27.341 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:27.348 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 24.631ms
2025-05-18 15:55:52.260 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:52.261 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:52.262 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:52.263 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:52.263 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 2.8376ms
2025-05-18 15:55:52.263 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 2.3135ms
2025-05-18 15:55:52.265 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:52.266 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:52.268 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:52.269 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:52.269 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:52.271 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:55:52.270 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:52.277 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:55:52.273 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:55:52.278 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:55:52.279 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:52.279 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:52.281 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.4604ms
2025-05-18 15:55:52.282 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.2358ms
2025-05-18 15:55:52.282 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:52.283 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:52.283 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 18.2334ms
2025-05-18 15:55:52.284 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 17.5962ms
2025-05-18 15:55:54.283 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:55:54.283 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:55:54.287 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:54.289 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:54.291 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:55:54.289 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:55:54.294 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:54.294 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:54.294 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:55:54.296 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.3478ms
2025-05-18 15:55:54.297 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:55:54.298 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:55:54.299 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:55:54.299 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 16.6289ms
2025-05-18 15:55:54.300 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:55:54.302 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.693ms
2025-05-18 15:55:54.302 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:55:54.303 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 19.5823ms
2025-05-18 15:56:33.747 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:33.747 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:33.749 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.748 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.750 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 3.5022ms
2025-05-18 15:56:33.753 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.0857ms
2025-05-18 15:56:33.756 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:33.759 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:33.761 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.763 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.767 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:33.769 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:56:33.763 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:33.775 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:33.779 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:56:33.780 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 6.4269ms
2025-05-18 15:56:33.782 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:56:33.783 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:33.788 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.8475ms
2025-05-18 15:56:33.786 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:56:33.794 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:33.811 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 28.4122ms
2025-05-18 15:56:33.812 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:33.814 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 57.2496ms
2025-05-18 15:56:33.887 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:33.887 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:33.888 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.889 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:33.889 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:33.890 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:33.890 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:56:33.891 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:56:33.893 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:56:33.895 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:33.895 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:56:33.902 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:33.902 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 9.5779ms
2025-05-18 15:56:33.903 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.4598ms
2025-05-18 15:56:33.906 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:33.905 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:33.910 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 22.879ms
2025-05-18 15:56:33.919 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 32.1153ms
2025-05-18 15:56:37.328 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:37.328 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:37.329 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:37.330 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:37.330 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:37.331 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:37.331 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:56:37.332 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:56:37.333 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:37.333 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:56:37.334 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.8034ms
2025-05-18 15:56:37.335 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:56:37.336 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:37.338 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:37.349 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 20.7413ms
2025-05-18 15:56:37.350 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.8011ms
2025-05-18 15:56:37.353 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:37.354 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 25.5212ms
2025-05-18 15:56:49.286 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:49.288 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:49.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:49.296 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:49.297 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.2956ms
2025-05-18 15:56:49.300 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 12.4263ms
2025-05-18 15:56:49.303 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:56:49.306 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:56:49.309 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:49.310 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:56:49.311 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:49.312 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:49.313 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:56:49.314 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:56:49.317 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:49.317 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:56:49.318 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.9145ms
2025-05-18 15:56:49.320 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:56:49.321 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:56:49.321 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:56:49.322 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 19.0907ms
2025-05-18 15:56:49.323 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.2011ms
2025-05-18 15:56:49.325 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:56:49.326 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 19.7198ms
2025-05-18 15:57:03.287 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:03.289 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:03.291 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:03.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:03.293 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.5707ms
2025-05-18 15:57:03.294 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.2752ms
2025-05-18 15:57:03.296 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:03.297 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:03.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:03.299 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:03.299 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:03.299 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:03.300 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:03.300 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:03.301 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:03.308 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:03.309 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:03.310 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.1931ms
2025-05-18 15:57:03.310 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:03.311 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:03.312 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 10.5725ms
2025-05-18 15:57:03.312 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 15.6877ms
2025-05-18 15:57:03.313 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:03.315 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 19.3225ms
2025-05-18 15:57:05.296 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:05.297 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:05.300 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:05.303 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:05.305 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:05.304 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:05.308 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:05.309 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:05.310 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:05.311 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:05.311 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:05.312 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:05.313 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.9972ms
2025-05-18 15:57:05.314 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 3.6036ms
2025-05-18 15:57:05.314 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:05.315 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:05.315 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 19.5706ms
2025-05-18 15:57:05.316 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 18.7669ms
2025-05-18 15:57:09.236 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:09.237 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:09.240 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:09.241 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:09.242 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.3291ms
2025-05-18 15:57:09.242 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.9424ms
2025-05-18 15:57:09.244 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:09.246 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:09.247 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:09.248 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:09.249 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:09.249 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:09.249 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:09.250 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:09.251 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:09.253 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:09.255 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:09.255 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:09.257 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.5394ms
2025-05-18 15:57:09.257 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.9216ms
2025-05-18 15:57:09.258 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:09.259 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:09.259 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 13.0507ms
2025-05-18 15:57:09.260 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 15.5468ms
2025-05-18 15:57:11.293 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:11.293 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:11.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:11.299 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:11.299 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:11.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:11.300 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:11.301 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:11.303 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:11.303 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:11.305 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.3045ms
2025-05-18 15:57:11.306 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:11.307 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:11.309 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:11.310 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 16.4532ms
2025-05-18 15:57:11.317 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.7719ms
2025-05-18 15:57:11.323 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:11.325 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 31.9454ms
2025-05-18 15:57:17.229 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:17.230 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:17.233 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:17.234 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:17.235 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.206ms
2025-05-18 15:57:17.236 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.2758ms
2025-05-18 15:57:17.239 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:17.241 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:17.242 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:17.243 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:17.243 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:17.244 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:17.244 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:17.245 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:17.246 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:17.247 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:17.248 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:17.248 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:17.249 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.7455ms
2025-05-18 15:57:17.249 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 3.6631ms
2025-05-18 15:57:17.250 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:17.251 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:17.256 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 16.6661ms
2025-05-18 15:57:17.252 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.8717ms
2025-05-18 15:57:18.975 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:18.975 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:18.976 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:18.977 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:18.978 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:18.978 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:18.978 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:18.979 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:18.980 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:18.986 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:18.989 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:18.989 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:18.991 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 9.845ms
2025-05-18 15:57:18.992 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.8032ms
2025-05-18 15:57:18.993 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:18.995 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 20.4255ms
2025-05-18 15:57:18.994 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:19.001 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 26.0152ms
2025-05-18 15:57:26.954 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:26.954 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:26.957 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:26.961 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:26.962 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.1381ms
2025-05-18 15:57:26.963 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 9.1521ms
2025-05-18 15:57:26.967 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:26.972 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:26.986 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:26.993 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:26.993 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:26.994 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:26.995 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:26.996 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:26.999 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:26.999 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:27.003 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:27.005 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.1345ms
2025-05-18 15:57:27.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:27.006 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:27.007 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.2044ms
2025-05-18 15:57:27.008 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 40.2551ms
2025-05-18 15:57:27.008 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:27.010 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 38.4623ms
2025-05-18 15:57:33.274 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:33.275 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:33.276 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:33.276 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 1.7901ms
2025-05-18 15:57:33.277 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:33.278 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:33.279 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 2.9744ms
2025-05-18 15:57:33.280 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:33.281 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:33.281 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:33.283 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:33.283 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:33.283 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:33.286 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:33.287 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:33.288 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.8012ms
2025-05-18 15:57:33.289 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:33.290 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:33.291 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:33.291 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 12.5651ms
2025-05-18 15:57:33.291 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:33.293 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.1138ms
2025-05-18 15:57:33.294 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:33.295 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 13.4194ms
2025-05-18 15:57:34.254 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:34.258 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:34.258 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:34.260 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:34.261 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:34.261 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:34.262 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:34.262 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:34.264 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:34.264 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:34.265 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.8486ms
2025-05-18 15:57:34.265 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:34.266 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:34.266 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:34.267 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 12.6283ms
2025-05-18 15:57:34.268 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.2427ms
2025-05-18 15:57:34.271 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:34.271 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 13.8346ms
2025-05-18 15:57:35.678 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:35.678 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:35.680 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:35.681 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:35.682 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:35.682 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:35.682 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:35.683 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:35.684 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:35.685 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:35.686 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.6571ms
2025-05-18 15:57:35.687 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:35.688 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:35.688 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:35.689 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.7566ms
2025-05-18 15:57:35.689 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.6392ms
2025-05-18 15:57:35.692 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:35.693 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 14.9371ms
2025-05-18 15:57:44.295 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:44.295 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:44.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.300 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.300 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.0697ms
2025-05-18 15:57:44.301 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 5.2438ms
2025-05-18 15:57:44.303 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:44.306 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:44.308 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.309 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.309 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:44.309 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:44.310 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:44.310 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:44.311 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:44.319 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:44.321 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:44.326 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 12.6057ms
2025-05-18 15:57:44.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:44.327 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:44.329 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 17.1424ms
2025-05-18 15:57:44.329 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 22.6783ms
2025-05-18 15:57:44.330 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:44.333 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.95ms
2025-05-18 15:57:44.480 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:44.491 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:44.495 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.497 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:44.497 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:44.498 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:44.498 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:44.499 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:44.506 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:44.511 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:44.513 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 10.0632ms
2025-05-18 15:57:44.514 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:44.514 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 33.8929ms
2025-05-18 15:57:44.516 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:44.517 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:44.518 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.884ms
2025-05-18 15:57:44.519 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:44.519 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 27.8722ms
2025-05-18 15:57:53.299 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:53.300 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:53.301 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:53.305 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:53.305 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.3627ms
2025-05-18 15:57:53.305 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 5.2908ms
2025-05-18 15:57:53.307 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:53.308 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:53.309 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:53.310 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:53.311 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:53.311 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:53.312 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:53.312 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:53.313 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:53.315 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:53.315 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:53.316 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:53.318 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.7213ms
2025-05-18 15:57:53.320 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.4578ms
2025-05-18 15:57:53.321 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:53.322 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:53.324 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 15.114ms
2025-05-18 15:57:53.324 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 16.9217ms
2025-05-18 15:57:54.229 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:54.230 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:54.232 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:54.234 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:54.235 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:54.236 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:54.236 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:54.237 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:54.240 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:54.240 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:54.241 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.4495ms
2025-05-18 15:57:54.243 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:54.243 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:54.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:54.244 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 15.2321ms
2025-05-18 15:57:54.245 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.4959ms
2025-05-18 15:57:54.247 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:54.249 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 18.848ms
2025-05-18 15:57:56.237 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:57:56.237 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:57:56.241 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:56.243 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:57:56.244 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:56.244 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:56.245 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:57:56.245 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:57:56.247 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:56.248 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:57:56.249 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.649ms
2025-05-18 15:57:56.250 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:57:56.251 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:57:56.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:57:56.254 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 17.7935ms
2025-05-18 15:57:56.256 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.298ms
2025-05-18 15:57:56.258 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:57:56.259 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 22.1031ms
2025-05-18 15:58:00.295 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:58:00.296 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:00.296 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:58:00.298 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 2.7774ms
2025-05-18 15:58:00.304 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:00.307 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:58:00.307 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.878ms
2025-05-18 15:58:00.309 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:00.310 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:58:00.310 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:00.312 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:00.312 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:58:00.313 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:00.314 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:58:00.314 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:00.315 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:58:00.318 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.4622ms
2025-05-18 15:58:00.320 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:58:00.322 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:00.323 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:00.323 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 16.7541ms
2025-05-18 15:58:00.324 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.8034ms
2025-05-18 15:58:00.327 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:00.328 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 17.3982ms
2025-05-18 15:58:01.282 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:58:01.288 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:58:01.292 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:01.294 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:01.295 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:01.296 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:01.297 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:58:01.298 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:58:01.303 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:01.304 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:58:01.305 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.539ms
2025-05-18 15:58:01.306 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:58:01.307 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:01.307 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:01.308 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 26.3511ms
2025-05-18 15:58:01.309 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.061ms
2025-05-18 15:58:01.311 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:01.312 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 23.3768ms
2025-05-18 15:58:05.797 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:58:05.797 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:58:05.799 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:05.801 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:05.801 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 3.8959ms
2025-05-18 15:58:05.801 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.058ms
2025-05-18 15:58:05.803 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:58:05.804 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:58:05.806 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:05.807 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:58:05.807 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:05.807 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:05.808 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:58:05.808 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:58:05.809 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:58:05.811 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:05.816 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.3468ms
2025-05-18 15:58:05.813 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:58:05.827 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:58:05.827 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:58:05.828 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 23.6655ms
2025-05-18 15:58:05.829 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 19.4349ms
2025-05-18 15:58:05.831 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:58:05.832 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.2157ms
2025-05-18 15:59:11.126 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:11.126 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:11.129 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:11.130 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:11.131 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 5.2177ms
2025-05-18 15:59:11.136 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:11.141 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:11.143 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:11.144 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:11.131 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.9595ms
2025-05-18 15:59:11.154 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:11.154 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:11.156 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 10.6311ms
2025-05-18 15:59:11.158 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:11.159 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 22.5036ms
2025-05-18 15:59:11.157 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:11.184 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:11.186 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:11.190 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:11.193 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:11.198 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:11.204 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.4608ms
2025-05-18 15:59:11.205 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:11.206 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 52.0809ms
2025-05-18 15:59:34.534 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:34.536 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:34.537 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:34.538 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:34.538 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.1203ms
2025-05-18 15:59:34.539 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 3.0576ms
2025-05-18 15:59:34.541 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:34.544 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:34.547 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:34.549 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:34.550 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:34.551 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:34.552 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:34.553 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:34.555 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:34.557 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:34.557 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:34.558 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:34.560 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.455ms
2025-05-18 15:59:34.561 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.9591ms
2025-05-18 15:59:34.563 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:34.564 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:34.567 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 22.1873ms
2025-05-18 15:59:34.571 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.423ms
2025-05-18 15:59:41.231 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:41.232 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:41.235 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:41.237 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:41.238 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.4735ms
2025-05-18 15:59:41.238 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.4334ms
2025-05-18 15:59:41.240 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:41.242 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:41.244 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:41.245 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:41.245 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:41.245 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:41.247 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:41.246 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:41.250 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:41.250 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:41.252 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.976ms
2025-05-18 15:59:41.253 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:41.253 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:41.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:41.254 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 12.2548ms
2025-05-18 15:59:41.255 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.7901ms
2025-05-18 15:59:41.257 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:41.257 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 17.086ms
2025-05-18 15:59:43.677 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:43.677 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:43.679 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:43.680 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:43.681 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:43.681 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:43.682 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:43.682 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:43.685 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:43.685 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:43.686 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.6616ms
2025-05-18 15:59:43.687 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:43.687 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:43.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:43.688 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.4708ms
2025-05-18 15:59:43.688 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 3.6222ms
2025-05-18 15:59:43.691 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:43.697 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 19.6548ms
2025-05-18 15:59:44.159 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:44.159 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:44.161 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:44.164 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:44.165 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:44.166 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:44.166 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:44.167 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:44.169 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:44.169 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:44.170 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.3462ms
2025-05-18 15:59:44.171 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:44.171 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:44.172 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:44.177 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.2663ms
2025-05-18 15:59:44.173 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 13.8227ms
2025-05-18 15:59:44.191 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:44.194 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 34.5908ms
2025-05-18 15:59:44.763 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 15:59:44.763 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 15:59:44.768 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:44.772 +05:30 [INF] CORS policy execution successful.
2025-05-18 15:59:44.772 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:44.774 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 15:59:44.773 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:44.778 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 15:59:44.778 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:44.781 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 15:59:44.783 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.0523ms
2025-05-18 15:59:44.785 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 15:59:44.785 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 15:59:44.786 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 15:59:44.792 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.5864ms
2025-05-18 15:59:44.793 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.7019ms
2025-05-18 15:59:44.803 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 15:59:44.804 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 40.2969ms
2025-05-18 16:00:26.222 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:00:26.222 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:00:26.225 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:00:26.228 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:00:26.229 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.7425ms
2025-05-18 16:00:26.230 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.6073ms
2025-05-18 16:00:26.233 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:00:26.235 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:00:26.237 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:00:26.238 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:00:26.238 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:00:26.238 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:00:26.239 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:00:26.239 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:00:26.240 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:00:26.241 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:00:26.242 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:00:26.243 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.8621ms
2025-05-18 16:00:26.243 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:00:26.244 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:00:26.245 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.5357ms
2025-05-18 16:00:26.245 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 9.5205ms
2025-05-18 16:00:26.246 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:00:26.247 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 13.7406ms
2025-05-18 16:01:09.714 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:09.716 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:09.717 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:09.718 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:09.719 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 4.4303ms
2025-05-18 16:01:09.720 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.1155ms
2025-05-18 16:01:09.724 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:09.728 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:09.730 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:09.732 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:09.733 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:09.733 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:09.734 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:09.739 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:09.745 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:09.751 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:09.751 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:09.753 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.9834ms
2025-05-18 16:01:09.754 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:09.756 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:09.756 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.3565ms
2025-05-18 16:01:09.757 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.8645ms
2025-05-18 16:01:09.758 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:09.761 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 36.9588ms
2025-05-18 16:01:10.962 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:10.962 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:10.963 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:10.965 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:10.965 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:10.966 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:10.966 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:10.967 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:10.968 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:10.968 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:10.970 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.1227ms
2025-05-18 16:01:10.971 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:10.971 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:10.971 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:10.972 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.3662ms
2025-05-18 16:01:10.974 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.3463ms
2025-05-18 16:01:10.981 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:10.982 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 20.5607ms
2025-05-18 16:01:27.274 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:27.282 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:27.289 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:27.292 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 17.8826ms
2025-05-18 16:01:27.296 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:27.290 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:27.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:27.298 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 15.9448ms
2025-05-18 16:01:27.299 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:27.301 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:27.302 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:27.303 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:27.304 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:27.305 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:27.305 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:27.306 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.5979ms
2025-05-18 16:01:27.307 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:27.307 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:27.310 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:27.311 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 15.0829ms
2025-05-18 16:01:27.312 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:27.315 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.3675ms
2025-05-18 16:01:27.317 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:27.318 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 16.474ms
2025-05-18 16:01:28.234 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:28.235 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:28.236 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:28.239 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:28.239 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:28.242 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:28.240 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:28.249 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:28.249 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:28.253 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:28.251 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.8093ms
2025-05-18 16:01:28.255 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:28.256 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:28.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:28.257 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 22.5881ms
2025-05-18 16:01:28.259 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.8362ms
2025-05-18 16:01:28.263 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:28.264 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.0622ms
2025-05-18 16:01:29.296 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:29.298 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:29.299 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:29.301 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:29.301 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:29.302 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:29.303 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:29.305 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:29.307 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:29.307 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:29.310 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.8169ms
2025-05-18 16:01:29.311 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:29.311 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:29.312 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 16.2454ms
2025-05-18 16:01:29.314 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:29.318 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.3823ms
2025-05-18 16:01:29.320 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:29.321 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 22.5033ms
2025-05-18 16:01:32.688 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:32.688 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:32.691 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:32.692 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:32.694 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 5.6078ms
2025-05-18 16:01:32.694 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 5.9942ms
2025-05-18 16:01:32.696 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:32.697 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:32.699 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:32.700 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:32.700 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:32.701 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:32.701 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:32.702 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:32.703 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:32.705 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:32.705 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:32.707 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:32.708 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.2579ms
2025-05-18 16:01:32.709 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 6.2309ms
2025-05-18 16:01:32.711 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:32.712 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:32.713 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 15.7974ms
2025-05-18 16:01:32.716 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 20.1163ms
2025-05-18 16:01:33.369 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:33.369 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:33.371 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:33.372 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:33.372 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:33.373 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:33.373 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:33.374 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:33.376 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:33.381 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:33.381 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:33.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:33.383 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.2857ms
2025-05-18 16:01:33.384 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 8.1609ms
2025-05-18 16:01:33.385 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:33.386 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:33.387 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 17.5532ms
2025-05-18 16:01:33.389 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 19.3664ms
2025-05-18 16:01:49.249 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:49.249 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:49.252 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:49.255 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:49.256 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.5288ms
2025-05-18 16:01:49.257 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.0439ms
2025-05-18 16:01:49.263 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:49.266 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:49.269 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:49.269 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:49.270 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:49.270 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:49.271 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:49.272 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:49.273 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:49.275 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:49.275 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:49.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:49.280 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.2476ms
2025-05-18 16:01:49.281 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.2644ms
2025-05-18 16:01:49.282 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:49.283 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:49.284 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 18.2768ms
2025-05-18 16:01:49.284 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 21.3271ms
2025-05-18 16:01:52.230 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:52.231 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:52.234 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:52.239 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:52.240 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:52.241 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:52.242 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:52.244 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:52.247 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:52.249 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:52.252 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.7104ms
2025-05-18 16:01:52.253 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:52.253 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:52.255 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:52.255 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 25.132ms
2025-05-18 16:01:52.256 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 7.6438ms
2025-05-18 16:01:52.260 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:52.260 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.6324ms
2025-05-18 16:01:53.339 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:53.339 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:53.341 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:53.342 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:53.343 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:53.343 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:53.343 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:53.344 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:53.345 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:53.346 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:53.347 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:53.347 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:53.347 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 2.9561ms
2025-05-18 16:01:53.348 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.043ms
2025-05-18 16:01:53.349 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:53.350 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:53.351 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 12.4473ms
2025-05-18 16:01:53.351 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 11.847ms
2025-05-18 16:01:54.369 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:54.369 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:54.371 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:54.372 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:54.373 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 3.7522ms
2025-05-18 16:01:54.374 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 4.7902ms
2025-05-18 16:01:54.377 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:01:54.379 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:01:54.381 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:54.382 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:01:54.382 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:54.382 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:54.383 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:01:54.384 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:01:54.389 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:01:54.387 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:54.397 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:01:54.402 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 15.9259ms
2025-05-18 16:01:54.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:01:54.404 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:01:54.405 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.9433ms
2025-05-18 16:01:54.405 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.6076ms
2025-05-18 16:01:54.409 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:01:54.412 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.1457ms
2025-05-18 16:02:05.244 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:05.245 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:05.248 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:05.252 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:05.252 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.0581ms
2025-05-18 16:02:05.253 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.1211ms
2025-05-18 16:02:05.255 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:05.257 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:05.259 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:05.259 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:05.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:05.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:05.261 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:02:05.261 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:02:05.262 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:02:05.264 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:05.264 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:02:05.265 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 1.7633ms
2025-05-18 16:02:05.266 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:05.266 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:05.267 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.6068ms
2025-05-18 16:02:05.267 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.1498ms
2025-05-18 16:02:05.268 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:05.270 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 14.5298ms
2025-05-18 16:02:07.210 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:07.211 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:07.216 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:07.219 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:07.219 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:07.220 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:02:07.220 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:07.222 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:07.222 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:02:07.224 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.3244ms
2025-05-18 16:02:07.225 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:02:07.226 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:07.227 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:02:07.228 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 18.1465ms
2025-05-18 16:02:07.228 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:07.231 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 5.6261ms
2025-05-18 16:02:07.232 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:07.232 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 21.2241ms
2025-05-18 16:02:30.306 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:30.306 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:30.308 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:30.311 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:30.312 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.0331ms
2025-05-18 16:02:30.313 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 6.9744ms
2025-05-18 16:02:30.315 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:30.316 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:30.317 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:30.318 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:30.318 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:30.319 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:30.319 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:02:30.320 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:02:30.320 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:02:30.322 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:30.322 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:02:30.324 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:30.324 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.5761ms
2025-05-18 16:02:30.325 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.6354ms
2025-05-18 16:02:30.326 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:30.326 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:30.327 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 10.4712ms
2025-05-18 16:02:30.327 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 12.3042ms
2025-05-18 16:02:34.753 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:02:34.753 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:02:34.758 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:34.760 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:02:34.760 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:34.761 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:34.761 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:02:34.762 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:02:34.764 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:34.765 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:02:34.767 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.2489ms
2025-05-18 16:02:34.769 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:02:34.769 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:02:34.773 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 19.6868ms
2025-05-18 16:02:34.770 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:02:34.781 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 15.8374ms
2025-05-18 16:02:34.784 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:02:34.785 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 32.5608ms
2025-05-18 16:04:26.339 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:04:26.341 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:04:26.342 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.0922ms
2025-05-18 16:04:26.348 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:04:26.353 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:04:26.356 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:04:26.371 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:04:26.381 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:04:26.388 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 13.475ms
2025-05-18 16:04:26.390 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:04:26.391 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 43.4161ms
2025-05-18 16:09:52.068 +05:30 [INF] User profile is available. Using 'C:\Users\Bhavya Bansal\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-18 16:09:52.238 +05:30 [INF] Now listening on: http://localhost:5251
2025-05-18 16:09:52.241 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-18 16:09:52.242 +05:30 [INF] Hosting environment: Development
2025-05-18 16:09:52.242 +05:30 [INF] Content root path: C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements
2025-05-18 16:11:13.398 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:11:13.537 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:11:13.552 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 158.5921ms
2025-05-18 16:11:13.571 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 61
2025-05-18 16:11:13.585 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:11:13.598 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:13.654 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:11:14.074 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:11:14.138 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 476.6897ms
2025-05-18 16:11:14.139 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:14.141 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 401 null application/json; charset=utf-8 570.171ms
2025-05-18 16:11:16.012 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 61
2025-05-18 16:11:16.026 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:11:16.028 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:16.029 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:11:16.249 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:11:16.252 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 218.9917ms
2025-05-18 16:11:16.253 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:16.254 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 401 null application/json; charset=utf-8 242.6708ms
2025-05-18 16:11:21.169 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:11:21.175 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:11:21.176 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 7.3918ms
2025-05-18 16:11:21.180 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 16:11:21.184 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:11:21.186 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:21.191 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:11:21.456 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:11:21.462 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 267.7043ms
2025-05-18 16:11:21.464 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:11:21.466 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 286.7201ms
2025-05-18 16:13:23.472 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:13:23.480 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:13:23.482 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 9.71ms
2025-05-18 16:13:23.486 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 16:13:23.489 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:13:23.490 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:13:23.493 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:13:23.698 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:13:23.699 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 201.5334ms
2025-05-18 16:13:23.700 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:13:23.702 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 216.0032ms
2025-05-18 16:13:35.830 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:13:35.835 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:13:35.836 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 6.5146ms
2025-05-18 16:13:35.842 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 58
2025-05-18 16:13:35.845 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:13:35.850 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:13:35.851 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:13:35.858 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:13:35.864 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 9.4356ms
2025-05-18 16:13:35.868 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:13:35.869 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 401 null application/json; charset=utf-8 27.3911ms
2025-05-18 16:14:21.790 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - null null
2025-05-18 16:14:21.799 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:21.800 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - 204 null null 10.6744ms
2025-05-18 16:14:21.804 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Auth/register - application/json 104
2025-05-18 16:14:21.810 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:21.810 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:14:21.823 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(UserRegisterRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:14:22.060 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:14:22.063 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Register (WisVest) in 236.8425ms
2025-05-18 16:14:22.065 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:14:22.066 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Auth/register - 200 null application/json; charset=utf-8 262.501ms
2025-05-18 16:14:30.468 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:14:30.474 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:30.477 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 9.7274ms
2025-05-18 16:14:30.482 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 63
2025-05-18 16:14:30.485 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:30.485 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:14:30.486 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:14:30.709 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:14:30.711 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 223.2454ms
2025-05-18 16:14:30.712 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:14:30.714 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 231.8273ms
2025-05-18 16:14:34.653 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:14:34.656 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:34.658 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 5.4259ms
2025-05-18 16:14:34.663 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:14:34.838 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:14:34.839 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:14:34.856 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:14:34.923 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:14:34.940 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 79.6374ms
2025-05-18 16:14:34.942 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:14:34.946 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 283.1439ms
2025-05-18 16:15:52.435 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:15:52.439 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:52.442 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.7516ms
2025-05-18 16:15:52.446 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 109
2025-05-18 16:15:52.458 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:52.466 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:15:52.481 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:15:52.532 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:15:52.560 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:15:52.563 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:15:52.569 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:15:52.573 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 16:15:52.575 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 16:15:52.578 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 16:15:52.600 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 16:15:52.638 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 16:15:52.641 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 16:15:52.644 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:15:52.647 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 16:15:52.649 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:15:52.651 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 16:15:52.653 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 16:15:52.656 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:15:52.662 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 16:15:52.665 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:15:52.719 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:15:52.745 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:15:52.748 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:15:52.752 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:15:52.763 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 278.1706ms
2025-05-18 16:15:52.765 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:15:52.767 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 320.4058ms
2025-05-18 16:15:52.771 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=10 - null null
2025-05-18 16:15:52.776 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:52.781 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=10 - 204 null null 9.6421ms
2025-05-18 16:15:52.785 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=10 - application/json 477
2025-05-18 16:15:52.795 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:52.798 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:15:52.814 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:15:52.868 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:15:52.870 +05:30 [INF] Target Amount: 200000
2025-05-18 16:15:52.872 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:15:52.877 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:15:52.894 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:15:52.897 +05:30 [INF] Calculated investment amount: 9638.58.
2025-05-18 16:15:52.899 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:15:52.901 +05:30 [INF] Calculated investment amount: 9538.97.
2025-05-18 16:15:52.903 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:15:52.905 +05:30 [INF] Calculated investment amount: 5894.09.
2025-05-18 16:15:52.907 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:15:52.912 +05:30 [INF] Calculated investment amount: 5937.83.
2025-05-18 16:15:52.915 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:15:52.916 +05:30 [INF] Calculated investment amount: 4995.66.
2025-05-18 16:15:52.918 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:15:52.920 +05:30 [INF] Calculated investment amount: 5059.15.
2025-05-18 16:15:52.921 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:15:52.924 +05:30 [INF] Calculated investment amount: 4702.58.
2025-05-18 16:15:52.927 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:15:52.929 +05:30 [INF] Calculated investment amount: 4592.86.
2025-05-18 16:15:52.931 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:15:52.932 +05:30 [INF] Calculated investment amount: 5065.55.
2025-05-18 16:15:52.933 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:15:52.939 +05:30 [INF] Calculated investment amount: 5147.02.
2025-05-18 16:15:52.941 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:15:52.947 +05:30 [INF] Calculated investment amount: 4308.77.
2025-05-18 16:15:52.948 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:15:52.950 +05:30 [INF] Calculated investment amount: 4388.78.
2025-05-18 16:15:52.952 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:15:52.956 +05:30 [INF] Calculated investment amount: 2085.62.
2025-05-18 16:15:52.960 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:15:52.962 +05:30 [INF] Calculated investment amount: 1943.35.
2025-05-18 16:15:52.963 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:15:52.965 +05:30 [INF] Calculated investment amount: 1177.86.
2025-05-18 16:15:52.966 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:15:52.968 +05:30 [INF] Calculated investment amount: 1185.58.
2025-05-18 16:15:52.970 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:15:52.973 +05:30 [INF] Calculated investment amount: 1459.54.
2025-05-18 16:15:52.976 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:15:52.981 +05:30 [INF] Calculated investment amount: 1372.54.
2025-05-18 16:15:52.984 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:15:53.032 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:15:53.036 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:15:53.048 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:15:53.053 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 236.1064ms
2025-05-18 16:15:53.054 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:15:53.056 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=10 - 500 null application/json; charset=utf-8 270.7878ms
2025-05-18 16:15:58.371 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:15:58.375 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:58.376 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.053ms
2025-05-18 16:15:58.379 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 109
2025-05-18 16:15:58.386 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:58.387 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:15:58.389 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:15:58.396 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:15:58.404 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:15:58.409 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:15:58.411 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:15:58.414 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 16:15:58.416 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 16:15:58.418 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 16:15:58.419 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 16:15:58.425 +05:30 [INF] Sub-allocations for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 16:15:58.428 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 16:15:58.431 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:15:58.434 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 16:15:58.435 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:15:58.437 +05:30 [INF] Added sub-assets for equity: {"Large Cap":24,"Mid Cap":18,"Small Cap":18}
2025-05-18 16:15:58.438 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}
2025-05-18 16:15:58.443 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:15:58.445 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}
2025-05-18 16:15:58.448 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:15:58.449 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:15:58.455 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:15:58.458 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":60,"subAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"percentage":25,"subAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":0,"subAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:15:58.461 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:15:58.465 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 72.8666ms
2025-05-18 16:15:58.467 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:15:58.468 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 88.8852ms
2025-05-18 16:15:58.471 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - null null
2025-05-18 16:15:58.477 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:58.479 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 204 null null 7.815ms
2025-05-18 16:15:58.485 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - application/json 477
2025-05-18 16:15:58.489 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:15:58.490 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:15:58.493 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:15:58.498 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":60,"SubAssets":{"Large Cap":24,"Mid Cap":18,"Small Cap":18}},"fixedIncome":{"Percentage":25,"SubAssets":{"Gov Bonds":7.5,"Corp Bonds":10,"Fixed Dep":7.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":0,"SubAssets":{"Liquid Mutual Funds":0,"Savings Acc":0,"T. Bill":0}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:15:58.500 +05:30 [INF] Target Amount: 200000
2025-05-18 16:15:58.502 +05:30 [INF] Investment Horizon: 11
2025-05-18 16:15:58.503 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:15:58.508 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.5, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-18 16:15:58.512 +05:30 [INF] Calculated investment amount: 8762.35.
2025-05-18 16:15:58.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.5, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 16:15:58.516 +05:30 [INF] Calculated investment amount: 8735.32.
2025-05-18 16:15:58.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.57, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-18 16:15:58.520 +05:30 [INF] Calculated investment amount: 5239.19.
2025-05-18 16:15:58.522 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.43, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-18 16:15:58.525 +05:30 [INF] Calculated investment amount: 5349.4.
2025-05-18 16:15:58.527 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.26, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-18 16:15:58.529 +05:30 [INF] Calculated investment amount: 4382.15.
2025-05-18 16:15:58.531 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.74, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-18 16:15:58.534 +05:30 [INF] Calculated investment amount: 4469.21.
2025-05-18 16:15:58.535 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.83, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 16:15:58.542 +05:30 [INF] Calculated investment amount: 4478.64.
2025-05-18 16:15:58.544 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.67, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-18 16:15:58.547 +05:30 [INF] Calculated investment amount: 4382.5.
2025-05-18 16:15:58.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-18 16:15:58.552 +05:30 [INF] Calculated investment amount: 4743.02.
2025-05-18 16:15:58.553 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-18 16:15:58.556 +05:30 [INF] Calculated investment amount: 4805.81.
2025-05-18 16:15:58.559 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.68, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-18 16:15:58.562 +05:30 [INF] Calculated investment amount: 4084.14.
2025-05-18 16:15:58.564 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.82, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-18 16:15:58.567 +05:30 [INF] Calculated investment amount: 4152.11.
2025-05-18 16:15:58.568 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-18 16:15:58.570 +05:30 [INF] Calculated investment amount: 1934.71.
2025-05-18 16:15:58.573 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-18 16:15:58.578 +05:30 [INF] Calculated investment amount: 1828.17.
2025-05-18 16:15:58.580 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 16:15:58.582 +05:30 [INF] Calculated investment amount: 1078.62.
2025-05-18 16:15:58.584 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-18 16:15:58.586 +05:30 [INF] Calculated investment amount: 1074.87.
2025-05-18 16:15:58.587 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-18 16:15:58.591 +05:30 [INF] Calculated investment amount: 1345.2.
2025-05-18 16:15:58.592 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-18 16:15:58.595 +05:30 [INF] Calculated investment amount: 1282.75.
2025-05-18 16:15:58.596 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:15:58.599 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:15:58.603 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:15:58.705 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:15:58.728 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 232.2907ms
2025-05-18 16:15:58.730 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:15:58.731 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 500 null application/json; charset=utf-8 246.7406ms
2025-05-18 16:16:02.250 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-18 16:16:02.255 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.258 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:16:02.259 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:16:02.267 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:16:02.269 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:16:02.271 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:16:02.272 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:16:02.274 +05:30 [INF] Looking up age adjustment rules for key: <30
2025-05-18 16:16:02.275 +05:30 [INF] Age adjustments found: {"equity":10,"fixedIncome":-5,"cash":-5}
2025-05-18 16:16:02.277 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 16:16:02.279 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 16:16:02.281 +05:30 [INF] Sub-allocations for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 16:16:02.283 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 16:16:02.284 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:16:02.286 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 16:16:02.291 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:16:02.295 +05:30 [INF] Added sub-assets for equity: {"Large Cap":25,"Mid Cap":10,"Small Cap":5}
2025-05-18 16:16:02.298 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}
2025-05-18 16:16:02.301 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:16:02.303 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}
2025-05-18 16:16:02.306 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:16:02.310 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:16:02.314 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:16:02.316 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"percentage":40,"subAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:16:02.319 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:16:02.323 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 60.2474ms
2025-05-18 16:16:02.330 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:16:02.332 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 81.2522ms
2025-05-18 16:16:02.336 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - application/json 481
2025-05-18 16:16:02.341 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.342 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:16:02.345 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:16:02.352 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":25,"Mid Cap":10,"Small Cap":5}},"fixedIncome":{"Percentage":40,"SubAssets":{"Gov Bonds":20,"Corp Bonds":8,"Fixed Dep":12}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.15,"Savings Acc":1.92,"T. Bill":1.92}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}}
2025-05-18 16:16:02.358 +05:30 [INF] Target Amount: 200000
2025-05-18 16:16:02.360 +05:30 [INF] Investment Horizon: 11
2025-05-18 16:16:02.365 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:16:02.368 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.02, TargetAmount: 200000, AnnualReturn: 10, InvestmentHorizon: 11.
2025-05-18 16:16:02.370 +05:30 [INF] Calculated investment amount: 9126.86.
2025-05-18 16:16:02.372 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.98, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 16:16:02.375 +05:30 [INF] Calculated investment amount: 9099.92.
2025-05-18 16:16:02.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 200000, AnnualReturn: 12.5, InvestmentHorizon: 11.
2025-05-18 16:16:02.379 +05:30 [INF] Calculated investment amount: 2912.49.
2025-05-18 16:16:02.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 200000, AnnualReturn: 11, InvestmentHorizon: 11.
2025-05-18 16:16:02.384 +05:30 [INF] Calculated investment amount: 2969.77.
2025-05-18 16:16:02.385 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.57, TargetAmount: 200000, AnnualReturn: 14, InvestmentHorizon: 11.
2025-05-18 16:16:02.398 +05:30 [INF] Calculated investment amount: 1216.21.
2025-05-18 16:16:02.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.43, TargetAmount: 200000, AnnualReturn: 13.2, InvestmentHorizon: 11.
2025-05-18 16:16:02.402 +05:30 [INF] Calculated investment amount: 1242.58.
2025-05-18 16:16:02.404 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 16:16:02.407 +05:30 [INF] Calculated investment amount: 11927.46.
2025-05-18 16:16:02.409 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 200000, AnnualReturn: 4.8, InvestmentHorizon: 11.
2025-05-18 16:16:02.412 +05:30 [INF] Calculated investment amount: 11702.59.
2025-05-18 16:16:02.414 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 200000, AnnualReturn: 6.8, InvestmentHorizon: 11.
2025-05-18 16:16:02.416 +05:30 [INF] Calculated investment amount: 3792.48.
2025-05-18 16:16:02.418 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.09, TargetAmount: 200000, AnnualReturn: 7.1, InvestmentHorizon: 11.
2025-05-18 16:16:02.421 +05:30 [INF] Calculated investment amount: 3846.53.
2025-05-18 16:16:02.426 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.89, TargetAmount: 200000, AnnualReturn: 5.5, InvestmentHorizon: 11.
2025-05-18 16:16:02.433 +05:30 [INF] Calculated investment amount: 6536.85.
2025-05-18 16:16:02.435 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.11, TargetAmount: 200000, AnnualReturn: 5.7, InvestmentHorizon: 11.
2025-05-18 16:16:02.437 +05:30 [INF] Calculated investment amount: 6641.2.
2025-05-18 16:16:02.439 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 200000, AnnualReturn: 7.8, InvestmentHorizon: 11.
2025-05-18 16:16:02.442 +05:30 [INF] Calculated investment amount: 3029.
2025-05-18 16:16:02.444 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 200000, AnnualReturn: 6.3, InvestmentHorizon: 11.
2025-05-18 16:16:02.446 +05:30 [INF] Calculated investment amount: 2849.5.
2025-05-18 16:16:02.447 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 200000, AnnualReturn: 9.2, InvestmentHorizon: 11.
2025-05-18 16:16:02.449 +05:30 [INF] Calculated investment amount: 896.32.
2025-05-18 16:16:02.451 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 200000, AnnualReturn: 10.3, InvestmentHorizon: 11.
2025-05-18 16:16:02.454 +05:30 [INF] Calculated investment amount: 897.99.
2025-05-18 16:16:02.460 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 200000, AnnualReturn: 8.5, InvestmentHorizon: 11.
2025-05-18 16:16:02.464 +05:30 [INF] Calculated investment amount: 562.54.
2025-05-18 16:16:02.465 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 200000, AnnualReturn: 7, InvestmentHorizon: 11.
2025-05-18 16:16:02.468 +05:30 [INF] Calculated investment amount: 532.1.
2025-05-18 16:16:02.470 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.59, TargetAmount: 200000, AnnualReturn: 5.2, InvestmentHorizon: 11.
2025-05-18 16:16:02.473 +05:30 [INF] Calculated investment amount: 675.63.
2025-05-18 16:16:02.475 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 200000, AnnualReturn: 5, InvestmentHorizon: 11.
2025-05-18 16:16:02.478 +05:30 [INF] Calculated investment amount: 654.84.
2025-05-18 16:16:02.479 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.9, TargetAmount: 200000, AnnualReturn: 3.5, InvestmentHorizon: 11.
2025-05-18 16:16:02.482 +05:30 [INF] Calculated investment amount: 1232.9.
2025-05-18 16:16:02.483 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.02, TargetAmount: 200000, AnnualReturn: 4, InvestmentHorizon: 11.
2025-05-18 16:16:02.485 +05:30 [INF] Calculated investment amount: 1325.15.
2025-05-18 16:16:02.486 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.93, TargetAmount: 200000, AnnualReturn: 5.1, InvestmentHorizon: 11.
2025-05-18 16:16:02.492 +05:30 [INF] Calculated investment amount: 1076.18.
2025-05-18 16:16:02.494 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.99, TargetAmount: 200000, AnnualReturn: 5.4, InvestmentHorizon: 11.
2025-05-18 16:16:02.500 +05:30 [INF] Calculated investment amount: 1110.24.
2025-05-18 16:16:02.501 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 200000, AnnualReturn: 8.9, InvestmentHorizon: 11.
2025-05-18 16:16:02.504 +05:30 [INF] Calculated investment amount: 759.44.
2025-05-18 16:16:02.505 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 200000, AnnualReturn: 9.5, InvestmentHorizon: 11.
2025-05-18 16:16:02.508 +05:30 [INF] Calculated investment amount: 759.12.
2025-05-18 16:16:02.511 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 200000, AnnualReturn: 6.7, InvestmentHorizon: 11.
2025-05-18 16:16:02.513 +05:30 [INF] Calculated investment amount: 940.79.
2025-05-18 16:16:02.514 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.04, TargetAmount: 200000, AnnualReturn: 7.3, InvestmentHorizon: 11.
2025-05-18 16:16:02.517 +05:30 [INF] Calculated investment amount: 958.22.
2025-05-18 16:16:02.518 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.51, TargetAmount: 200000, AnnualReturn: 10.2, InvestmentHorizon: 11.
2025-05-18 16:16:02.521 +05:30 [INF] Calculated investment amount: 350.43.
2025-05-18 16:16:02.527 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 200000, AnnualReturn: 9.8, InvestmentHorizon: 11.
2025-05-18 16:16:02.530 +05:30 [INF] Calculated investment amount: 350.43.
2025-05-18 16:16:02.547 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:16:02.549 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:16:02.557 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 208.5137ms
2025-05-18 16:16:02.563 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:16:02.567 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=200000&investmentHorizon=11 - 200 null application/json; charset=utf-8 231.0071ms
2025-05-18 16:16:02.582 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:16:02.583 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:16:02.586 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.601 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 18.667ms
2025-05-18 16:16:02.598 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.606 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:16:02.608 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 24.9769ms
2025-05-18 16:16:02.615 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.620 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:16:02.622 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:16:02.627 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:16:02.628 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:16:02.643 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:16:02.644 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:16:02.667 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:16:02.673 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:16:02.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:16:02.684 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 24.3109ms
2025-05-18 16:16:02.685 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:16:02.686 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 66.0781ms
2025-05-18 16:16:02.688 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:16:02.703 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 33.775ms
2025-05-18 16:16:02.710 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:16:02.712 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 106.0927ms
2025-05-18 16:19:55.607 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - null null
2025-05-18 16:19:55.611 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:19:55.614 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - 204 null null 6.9931ms
2025-05-18 16:19:55.620 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Auth/register - application/json 103
2025-05-18 16:19:55.623 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:19:55.624 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:19:55.626 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(UserRegisterRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:19:55.838 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:19:55.840 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Register (WisVest) in 210.1481ms
2025-05-18 16:19:55.841 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:19:55.843 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Auth/register - 200 null application/json; charset=utf-8 222.3117ms
2025-05-18 16:20:00.731 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:20:00.736 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:00.737 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 6.7097ms
2025-05-18 16:20:00.741 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 16:20:00.745 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:00.747 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:20:00.748 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:20:00.953 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:20:00.957 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 206.842ms
2025-05-18 16:20:00.958 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:20:00.960 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 218.2297ms
2025-05-18 16:20:11.614 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:20:11.627 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:11.629 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 14.9285ms
2025-05-18 16:20:11.637 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:20:11.643 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:11.644 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:20:11.647 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:20:11.656 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:20:11.666 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 12.8065ms
2025-05-18 16:20:11.670 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:20:11.672 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 34.4458ms
2025-05-18 16:20:40.119 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:20:40.121 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.122 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.778ms
2025-05-18 16:20:40.126 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 104
2025-05-18 16:20:40.132 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.139 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:20:40.142 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:20:40.153 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:20:40.169 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:20:40.170 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:20:40.171 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:20:40.173 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:20:40.175 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:20:40.176 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-18 16:20:40.178 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-18 16:20:40.189 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 16:20:40.190 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}
2025-05-18 16:20:40.192 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:20:40.193 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 16:20:40.195 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:20:40.196 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 16:20:40.199 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}
2025-05-18 16:20:40.200 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:20:40.203 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 16:20:40.206 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:20:40.208 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":55,"subAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:20:40.225 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:20:40.227 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":55,"subAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:20:40.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:20:40.235 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 82.4873ms
2025-05-18 16:20:40.238 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:20:40.240 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 113.3109ms
2025-05-18 16:20:40.246 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=13 - null null
2025-05-18 16:20:40.249 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.251 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=13 - 204 null null 5.6805ms
2025-05-18 16:20:40.259 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=13 - application/json 490
2025-05-18 16:20:40.263 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.266 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:20:40.268 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:20:40.271 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":20,"SubAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"Percentage":55,"SubAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}}
2025-05-18 16:20:40.273 +05:30 [INF] Target Amount: 100000
2025-05-18 16:20:40.275 +05:30 [INF] Investment Horizon: 13
2025-05-18 16:20:40.275 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:20:40.278 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 100000, AnnualReturn: 10, InvestmentHorizon: 13.
2025-05-18 16:20:40.285 +05:30 [INF] Calculated investment amount: 1885.72.
2025-05-18 16:20:40.287 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 13.
2025-05-18 16:20:40.289 +05:30 [INF] Calculated investment amount: 1907.8.
2025-05-18 16:20:40.290 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.66, TargetAmount: 100000, AnnualReturn: 12.5, InvestmentHorizon: 13.
2025-05-18 16:20:40.292 +05:30 [INF] Calculated investment amount: 575.31.
2025-05-18 16:20:40.294 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.34, TargetAmount: 100000, AnnualReturn: 11, InvestmentHorizon: 13.
2025-05-18 16:20:40.299 +05:30 [INF] Calculated investment amount: 602.58.
2025-05-18 16:20:40.302 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 100000, AnnualReturn: 14, InvestmentHorizon: 13.
2025-05-18 16:20:40.304 +05:30 [INF] Calculated investment amount: 234.87.
2025-05-18 16:20:40.305 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 100000, AnnualReturn: 13.2, InvestmentHorizon: 13.
2025-05-18 16:20:40.307 +05:30 [INF] Calculated investment amount: 241.42.
2025-05-18 16:20:40.309 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.03, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 13.
2025-05-18 16:20:40.310 +05:30 [INF] Calculated investment amount: 7440.41.
2025-05-18 16:20:40.312 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.47, TargetAmount: 100000, AnnualReturn: 4.8, InvestmentHorizon: 13.
2025-05-18 16:20:40.318 +05:30 [INF] Calculated investment amount: 7322.69.
2025-05-18 16:20:40.320 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.38, TargetAmount: 100000, AnnualReturn: 6.8, InvestmentHorizon: 13.
2025-05-18 16:20:40.322 +05:30 [INF] Calculated investment amount: 2287.47.
2025-05-18 16:20:40.323 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 100000, AnnualReturn: 7.1, InvestmentHorizon: 13.
2025-05-18 16:20:40.325 +05:30 [INF] Calculated investment amount: 2303.95.
2025-05-18 16:20:40.328 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.1, TargetAmount: 100000, AnnualReturn: 5.5, InvestmentHorizon: 13.
2025-05-18 16:20:40.332 +05:30 [INF] Calculated investment amount: 4038.34.
2025-05-18 16:20:40.334 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.4, TargetAmount: 100000, AnnualReturn: 5.7, InvestmentHorizon: 13.
2025-05-18 16:20:40.336 +05:30 [INF] Calculated investment amount: 4086.06.
2025-05-18 16:20:40.337 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 100000, AnnualReturn: 7.8, InvestmentHorizon: 13.
2025-05-18 16:20:40.339 +05:30 [INF] Calculated investment amount: 1303.26.
2025-05-18 16:20:40.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 100000, AnnualReturn: 6.3, InvestmentHorizon: 13.
2025-05-18 16:20:40.342 +05:30 [INF] Calculated investment amount: 1260.87.
2025-05-18 16:20:40.344 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 100000, AnnualReturn: 9.2, InvestmentHorizon: 13.
2025-05-18 16:20:40.348 +05:30 [INF] Calculated investment amount: 375.83.
2025-05-18 16:20:40.351 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 100000, AnnualReturn: 10.3, InvestmentHorizon: 13.
2025-05-18 16:20:40.353 +05:30 [INF] Calculated investment amount: 369.06.
2025-05-18 16:20:40.354 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 100000, AnnualReturn: 8.5, InvestmentHorizon: 13.
2025-05-18 16:20:40.356 +05:30 [INF] Calculated investment amount: 238.93.
2025-05-18 16:20:40.357 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 100000, AnnualReturn: 7, InvestmentHorizon: 13.
2025-05-18 16:20:40.359 +05:30 [INF] Calculated investment amount: 232.38.
2025-05-18 16:20:40.361 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 100000, AnnualReturn: 5.2, InvestmentHorizon: 13.
2025-05-18 16:20:40.365 +05:30 [INF] Calculated investment amount: 610.49.
2025-05-18 16:20:40.369 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.13, TargetAmount: 100000, AnnualReturn: 5, InvestmentHorizon: 13.
2025-05-18 16:20:40.371 +05:30 [INF] Calculated investment amount: 599.26.
2025-05-18 16:20:40.372 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.8, TargetAmount: 100000, AnnualReturn: 3.5, InvestmentHorizon: 13.
2025-05-18 16:20:40.374 +05:30 [INF] Calculated investment amount: 1150.93.
2025-05-18 16:20:40.376 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 100000, AnnualReturn: 4, InvestmentHorizon: 13.
2025-05-18 16:20:40.378 +05:30 [INF] Calculated investment amount: 1231.18.
2025-05-18 16:20:40.380 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 100000, AnnualReturn: 5.1, InvestmentHorizon: 13.
2025-05-18 16:20:40.384 +05:30 [INF] Calculated investment amount: 979.5.
2025-05-18 16:20:40.385 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 100000, AnnualReturn: 5.4, InvestmentHorizon: 13.
2025-05-18 16:20:40.388 +05:30 [INF] Calculated investment amount: 999.4.
2025-05-18 16:20:40.389 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 100000, AnnualReturn: 8.9, InvestmentHorizon: 13.
2025-05-18 16:20:40.391 +05:30 [INF] Calculated investment amount: 320.19.
2025-05-18 16:20:40.392 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 100000, AnnualReturn: 9.5, InvestmentHorizon: 13.
2025-05-18 16:20:40.395 +05:30 [INF] Calculated investment amount: 316.56.
2025-05-18 16:20:40.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 100000, AnnualReturn: 6.7, InvestmentHorizon: 13.
2025-05-18 16:20:40.404 +05:30 [INF] Calculated investment amount: 413.17.
2025-05-18 16:20:40.405 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.04, TargetAmount: 100000, AnnualReturn: 7.3, InvestmentHorizon: 13.
2025-05-18 16:20:40.407 +05:30 [INF] Calculated investment amount: 416.14.
2025-05-18 16:20:40.409 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.51, TargetAmount: 100000, AnnualReturn: 10.2, InvestmentHorizon: 13.
2025-05-18 16:20:40.413 +05:30 [INF] Calculated investment amount: 144.28.
2025-05-18 16:20:40.415 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 100000, AnnualReturn: 9.8, InvestmentHorizon: 13.
2025-05-18 16:20:40.419 +05:30 [INF] Calculated investment amount: 145.33.
2025-05-18 16:20:40.427 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:20:40.429 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:20:40.437 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 166.5187ms
2025-05-18 16:20:40.439 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:20:40.440 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=100000&investmentHorizon=13 - 200 null application/json; charset=utf-8 181.431ms
2025-05-18 16:20:40.448 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:20:40.451 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:20:40.465 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.473 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.474 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 25.7898ms
2025-05-18 16:20:40.477 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 26.0641ms
2025-05-18 16:20:40.488 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:20:40.485 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:20:40.494 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.497 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:20:40.499 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:20:40.502 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:20:40.504 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:20:40.505 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:20:40.508 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:20:40.514 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:20:40.514 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:20:40.518 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:20:40.522 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 10.2353ms
2025-05-18 16:20:40.523 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 16.2137ms
2025-05-18 16:20:40.526 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:20:40.527 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:20:40.529 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 43.5356ms
2025-05-18 16:20:40.530 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 41.4462ms
2025-05-18 16:23:41.436 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:23:41.441 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:23:41.443 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 7.2567ms
2025-05-18 16:23:41.450 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 62
2025-05-18 16:23:41.453 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:23:41.454 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:23:41.456 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:23:41.676 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:23:41.678 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 218.8446ms
2025-05-18 16:23:41.679 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:23:41.681 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 230.0083ms
2025-05-18 16:23:44.866 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:23:44.870 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:23:44.880 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 14.4297ms
2025-05-18 16:23:44.884 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:23:44.888 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:23:44.888 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:23:44.890 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:23:44.898 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:23:44.903 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 7.6429ms
2025-05-18 16:23:44.906 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:23:44.909 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 24.8296ms
2025-05-18 16:24:06.899 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:06.904 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:06.906 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.1886ms
2025-05-18 16:24:06.920 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 105
2025-05-18 16:24:06.924 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:06.925 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:06.926 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:06.928 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:06.930 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:06.931 +05:30 [INF] Looking up base allocation for key: Mid+Mod
2025-05-18 16:24:06.936 +05:30 [INF] Base allocation found: {"equity":40,"fixedIncome":35,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:06.937 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:24:06.938 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:24:06.942 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-18 16:24:06.944 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-18 16:24:06.948 +05:30 [INF] Sub-allocations for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 16:24:06.951 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 16:24:06.953 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:24:06.955 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3,"Savings Acc":3,"T. Bill":4}
2025-05-18 16:24:06.958 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:24:06.961 +05:30 [INF] Added sub-assets for equity: {"Large Cap":16,"Mid Cap":12,"Small Cap":12}
2025-05-18 16:24:06.962 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}
2025-05-18 16:24:06.964 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:24:06.965 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3,"Savings Acc":3,"T. Bill":4}
2025-05-18 16:24:06.968 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:24:06.971 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":3,"Savings Acc":3,"T. Bill":4}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:24:06.976 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:06.979 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":40,"subAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"percentage":35,"subAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":3,"Savings Acc":3,"T. Bill":4}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:24:06.981 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:06.986 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 58.5593ms
2025-05-18 16:24:06.992 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:06.994 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 73.811ms
2025-05-18 16:24:06.998 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - null null
2025-05-18 16:24:07.003 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.004 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 204 null null 5.7816ms
2025-05-18 16:24:07.010 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - application/json 480
2025-05-18 16:24:07.014 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.015 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:07.019 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:07.022 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":40,"SubAssets":{"Large Cap":16,"Mid Cap":12,"Small Cap":12}},"fixedIncome":{"Percentage":35,"SubAssets":{"Gov Bonds":10.5,"Corp Bonds":14,"Fixed Dep":10.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":3,"Savings Acc":3,"T. Bill":4}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:24:07.023 +05:30 [INF] Target Amount: 20000
2025-05-18 16:24:07.024 +05:30 [INF] Investment Horizon: 5
2025-05-18 16:24:07.025 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:07.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.33, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 5.
2025-05-18 16:24:07.030 +05:30 [INF] Calculated investment amount: 1034.45.
2025-05-18 16:24:07.032 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.67, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 16:24:07.038 +05:30 [INF] Calculated investment amount: 987.9.
2025-05-18 16:24:07.040 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 5.
2025-05-18 16:24:07.042 +05:30 [INF] Calculated investment amount: 708.09.
2025-05-18 16:24:07.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 5.
2025-05-18 16:24:07.046 +05:30 [INF] Calculated investment amount: 667.04.
2025-05-18 16:24:07.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.18, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 5.
2025-05-18 16:24:07.057 +05:30 [INF] Calculated investment amount: 641.94.
2025-05-18 16:24:07.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.82, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 5.
2025-05-18 16:24:07.061 +05:30 [INF] Calculated investment amount: 626.21.
2025-05-18 16:24:07.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.36, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 16:24:07.066 +05:30 [INF] Calculated investment amount: 839.94.
2025-05-18 16:24:07.068 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 5.
2025-05-18 16:24:07.072 +05:30 [INF] Calculated investment amount: 813.18.
2025-05-18 16:24:07.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.85, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 5.
2025-05-18 16:24:07.076 +05:30 [INF] Calculated investment amount: 985.97.
2025-05-18 16:24:07.078 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.15, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 5.
2025-05-18 16:24:07.080 +05:30 [INF] Calculated investment amount: 1014.82.
2025-05-18 16:24:07.082 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.16, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 5.
2025-05-18 16:24:07.088 +05:30 [INF] Calculated investment amount: 789.62.
2025-05-18 16:24:07.089 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.34, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 5.
2025-05-18 16:24:07.092 +05:30 [INF] Calculated investment amount: 809.46.
2025-05-18 16:24:07.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 5.
2025-05-18 16:24:07.095 +05:30 [INF] Calculated investment amount: 303.62.
2025-05-18 16:24:07.097 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 5.
2025-05-18 16:24:07.099 +05:30 [INF] Calculated investment amount: 263.76.
2025-05-18 16:24:07.100 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 5.
2025-05-18 16:24:07.104 +05:30 [INF] Calculated investment amount: 182.9.
2025-05-18 16:24:07.106 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 5.
2025-05-18 16:24:07.109 +05:30 [INF] Calculated investment amount: 193.56.
2025-05-18 16:24:07.110 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 5.
2025-05-18 16:24:07.112 +05:30 [INF] Calculated investment amount: 219.46.
2025-05-18 16:24:07.113 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 5.
2025-05-18 16:24:07.114 +05:30 [INF] Calculated investment amount: 192.51.
2025-05-18 16:24:07.116 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.53, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 5.
2025-05-18 16:24:07.120 +05:30 [INF] Calculated investment amount: 237.49.
2025-05-18 16:24:07.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.47, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 5.
2025-05-18 16:24:07.125 +05:30 [INF] Calculated investment amount: 230.36.
2025-05-18 16:24:07.126 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.4, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 5.
2025-05-18 16:24:07.128 +05:30 [INF] Calculated investment amount: 235.75.
2025-05-18 16:24:07.129 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.6, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 5.
2025-05-18 16:24:07.132 +05:30 [INF] Calculated investment amount: 263.02.
2025-05-18 16:24:07.134 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.94, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 5.
2025-05-18 16:24:07.137 +05:30 [INF] Calculated investment amount: 302.56.
2025-05-18 16:24:07.139 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.06, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 5.
2025-05-18 16:24:07.140 +05:30 [INF] Calculated investment amount: 316.73.
2025-05-18 16:24:07.142 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 20000, AnnualReturn: 8.9, InvestmentHorizon: 5.
2025-05-18 16:24:07.144 +05:30 [INF] Calculated investment amount: 118.83.
2025-05-18 16:24:07.145 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 20000, AnnualReturn: 9.5, InvestmentHorizon: 5.
2025-05-18 16:24:07.148 +05:30 [INF] Calculated investment amount: 123.23.
2025-05-18 16:24:07.149 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 20000, AnnualReturn: 6.7, InvestmentHorizon: 5.
2025-05-18 16:24:07.152 +05:30 [INF] Calculated investment amount: 86.77.
2025-05-18 16:24:07.154 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 20000, AnnualReturn: 7.3, InvestmentHorizon: 5.
2025-05-18 16:24:07.158 +05:30 [INF] Calculated investment amount: 91.4.
2025-05-18 16:24:07.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 20000, AnnualReturn: 10.2, InvestmentHorizon: 5.
2025-05-18 16:24:07.160 +05:30 [INF] Calculated investment amount: 118.14.
2025-05-18 16:24:07.162 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 20000, AnnualReturn: 9.8, InvestmentHorizon: 5.
2025-05-18 16:24:07.164 +05:30 [INF] Calculated investment amount: 115.29.
2025-05-18 16:24:07.168 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:24:07.172 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:07.175 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 153.4912ms
2025-05-18 16:24:07.176 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:07.178 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=5 - 200 null application/json; charset=utf-8 168.0236ms
2025-05-18 16:24:07.190 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:24:07.191 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:24:07.194 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.196 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.198 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.7756ms
2025-05-18 16:24:07.199 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 7.9756ms
2025-05-18 16:24:07.202 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:24:07.206 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:24:07.209 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.211 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:07.212 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:24:07.212 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:24:07.213 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:07.214 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:07.223 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:24:07.227 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:07.227 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:24:07.230 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.9965ms
2025-05-18 16:24:07.233 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:24:07.231 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:07.235 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 29.6729ms
2025-05-18 16:24:07.238 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.9146ms
2025-05-18 16:24:07.243 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:24:07.245 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 42.9293ms
2025-05-18 16:24:31.107 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:31.111 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:31.112 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 4.6214ms
2025-05-18 16:24:31.122 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:24:31.126 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:31.128 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:31.130 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:31.136 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:31.141 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:31.142 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 16:24:31.185 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 16:24:31.186 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-18 16:24:31.187 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-18 16:24:31.243 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:31.245 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:31.248 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:31.249 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:31.251 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:31.255 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:31.256 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:31.258 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:31.259 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:31.260 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:31.262 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:31.263 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:31.265 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:31.278 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:31.294 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:31.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:31.300 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 165.5832ms
2025-05-18 16:24:31.303 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:31.305 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 182.7527ms
2025-05-18 16:24:31.308 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - null null
2025-05-18 16:24:31.311 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:31.312 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 204 null null 4.3349ms
2025-05-18 16:24:31.320 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 512
2025-05-18 16:24:31.323 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:31.324 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:31.326 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:31.329 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":42.5,"SubAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"Percentage":22.5,"SubAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-7.5,"SubAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}}
2025-05-18 16:24:31.330 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:31.332 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:31.333 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:31.337 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.53, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:31.338 +05:30 [INF] Calculated investment amount: 82.2.
2025-05-18 16:24:31.340 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.09, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:31.342 +05:30 [INF] Calculated investment amount: 87.55.
2025-05-18 16:24:31.344 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.54, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:31.346 +05:30 [INF] Calculated investment amount: 71.5.
2025-05-18 16:24:31.347 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:31.349 +05:30 [INF] Calculated investment amount: 82.23.
2025-05-18 16:24:31.351 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.12, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:31.354 +05:30 [INF] Calculated investment amount: 66.36.
2025-05-18 16:24:31.356 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:31.358 +05:30 [INF] Calculated investment amount: 71.96.
2025-05-18 16:24:31.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:31.362 +05:30 [INF] Calculated investment amount: 71.99.
2025-05-18 16:24:31.364 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:31.367 +05:30 [INF] Calculated investment amount: 72.04.
2025-05-18 16:24:31.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.34, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:31.372 +05:30 [INF] Calculated investment amount: 196.91.
2025-05-18 16:24:31.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.66, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:31.376 +05:30 [INF] Calculated investment amount: 194.29.
2025-05-18 16:24:31.376 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:31.378 +05:30 [INF] Calculated investment amount: 63.06.
2025-05-18 16:24:31.379 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:31.380 +05:30 [INF] Calculated investment amount: 63.03.
2025-05-18 16:24:31.382 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.23, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:31.385 +05:30 [INF] Calculated investment amount: 5.12.
2025-05-18 16:24:31.387 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.19, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:31.389 +05:30 [INF] Calculated investment amount: 5.6.
2025-05-18 16:24:31.390 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:31.391 +05:30 [INF] Calculated investment amount: 8.43.
2025-05-18 16:24:31.394 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:31.396 +05:30 [INF] Calculated investment amount: 7.74.
2025-05-18 16:24:31.397 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:31.399 +05:30 [INF] Calculated investment amount: 11.15.
2025-05-18 16:24:31.403 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.47, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:31.406 +05:30 [INF] Calculated investment amount: 12.15.
2025-05-18 16:24:31.408 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:31.410 +05:30 [INF] Calculated investment amount: 370.07.
2025-05-18 16:24:31.412 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:31.414 +05:30 [INF] Calculated investment amount: 369.35.
2025-05-18 16:24:31.416 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.67, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:31.419 +05:30 [INF] Calculated investment amount: 234.7.
2025-05-18 16:24:31.421 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:31.425 +05:30 [INF] Calculated investment amount: 243.25.
2025-05-18 16:24:31.426 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.86, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:31.427 +05:30 [INF] Calculated investment amount: 179.71.
2025-05-18 16:24:31.429 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:31.431 +05:30 [INF] Calculated investment amount: 179.54.
2025-05-18 16:24:31.435 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:31.439 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:31.442 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:31.448 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:31.454 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 125.7391ms
2025-05-18 16:24:31.456 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:31.457 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 137.4215ms
2025-05-18 16:24:32.004 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:24:32.007 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:32.009 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:32.010 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:32.014 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:32.017 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:32.019 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 16:24:32.020 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 16:24:32.021 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-18 16:24:32.023 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-18 16:24:32.024 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:32.028 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:32.030 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:32.032 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:32.034 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:32.035 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:32.037 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:32.039 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:32.040 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:32.042 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:32.043 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:32.044 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:32.046 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:32.053 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:32.055 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:32.059 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:32.063 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.2596ms
2025-05-18 16:24:32.064 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:32.065 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 61.6137ms
2025-05-18 16:24:32.071 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 512
2025-05-18 16:24:32.075 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:32.075 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:32.077 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:32.081 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":42.5,"SubAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"Percentage":22.5,"SubAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-7.5,"SubAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}}
2025-05-18 16:24:32.085 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:32.087 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:32.088 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:32.090 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.53, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:32.092 +05:30 [INF] Calculated investment amount: 82.2.
2025-05-18 16:24:32.093 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.09, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.095 +05:30 [INF] Calculated investment amount: 87.55.
2025-05-18 16:24:32.096 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.54, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.099 +05:30 [INF] Calculated investment amount: 71.5.
2025-05-18 16:24:32.102 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:32.105 +05:30 [INF] Calculated investment amount: 82.23.
2025-05-18 16:24:32.106 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.12, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:32.108 +05:30 [INF] Calculated investment amount: 66.36.
2025-05-18 16:24:32.109 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.111 +05:30 [INF] Calculated investment amount: 71.96.
2025-05-18 16:24:32.112 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:32.115 +05:30 [INF] Calculated investment amount: 71.99.
2025-05-18 16:24:32.120 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.123 +05:30 [INF] Calculated investment amount: 72.04.
2025-05-18 16:24:32.124 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.34, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.127 +05:30 [INF] Calculated investment amount: 196.91.
2025-05-18 16:24:32.127 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.66, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:32.129 +05:30 [INF] Calculated investment amount: 194.29.
2025-05-18 16:24:32.129 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.131 +05:30 [INF] Calculated investment amount: 63.06.
2025-05-18 16:24:32.136 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:32.141 +05:30 [INF] Calculated investment amount: 63.03.
2025-05-18 16:24:32.142 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.23, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.144 +05:30 [INF] Calculated investment amount: 5.12.
2025-05-18 16:24:32.145 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.19, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:32.148 +05:30 [INF] Calculated investment amount: 5.6.
2025-05-18 16:24:32.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.154 +05:30 [INF] Calculated investment amount: 8.43.
2025-05-18 16:24:32.155 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:32.157 +05:30 [INF] Calculated investment amount: 7.74.
2025-05-18 16:24:32.158 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.159 +05:30 [INF] Calculated investment amount: 11.15.
2025-05-18 16:24:32.161 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.47, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:32.162 +05:30 [INF] Calculated investment amount: 12.15.
2025-05-18 16:24:32.164 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.171 +05:30 [INF] Calculated investment amount: 370.07.
2025-05-18 16:24:32.172 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:32.174 +05:30 [INF] Calculated investment amount: 369.35.
2025-05-18 16:24:32.175 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.67, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.177 +05:30 [INF] Calculated investment amount: 234.7.
2025-05-18 16:24:32.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:32.181 +05:30 [INF] Calculated investment amount: 243.25.
2025-05-18 16:24:32.184 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.86, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:32.187 +05:30 [INF] Calculated investment amount: 179.71.
2025-05-18 16:24:32.188 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:32.189 +05:30 [INF] Calculated investment amount: 179.54.
2025-05-18 16:24:32.191 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:32.193 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:32.196 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:32.206 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:32.207 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 127.4313ms
2025-05-18 16:24:32.209 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:32.210 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 139.4562ms
2025-05-18 16:24:32.231 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:24:32.237 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:32.238 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:32.239 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:32.242 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:32.245 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:32.246 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 16:24:32.247 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 16:24:32.249 +05:30 [INF] Looking up age adjustment rules for key: 60+
2025-05-18 16:24:32.250 +05:30 [INF] Age adjustments found: {"equity":-20,"fixedIncome":15,"realEstate":-5,"cash":10}
2025-05-18 16:24:32.252 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:32.254 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:32.256 +05:30 [INF] Sub-allocations for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:32.257 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:32.259 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:32.260 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:32.261 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:32.264 +05:30 [INF] Added sub-assets for equity: {"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}
2025-05-18 16:24:32.266 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}
2025-05-18 16:24:32.269 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}
2025-05-18 16:24:32.271 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:32.272 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}
2025-05-18 16:24:32.274 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:32.280 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:32.283 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":42.5,"subAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"percentage":22.5,"subAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-7.5,"subAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}
2025-05-18 16:24:32.286 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:32.288 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.5579ms
2025-05-18 16:24:32.289 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:32.290 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 59.5996ms
2025-05-18 16:24:32.294 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 512
2025-05-18 16:24:32.298 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:32.300 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:32.302 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:32.306 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":42.5,"SubAssets":{"Large Cap":10.62,"Mid Cap":14.17,"Small Cap":17.71}},"fixedIncome":{"Percentage":22.5,"SubAssets":{"Gov Bonds":3.75,"Corp Bonds":15,"Fixed Dep":3.75}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":0.42,"Energy":1.04,"Agriculture":1.04}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-7.5,"SubAssets":{"REITs":-1.67,"Residential Prop":-1.67,"Commercial Prop":-4.17}}}}
2025-05-18 16:24:32.310 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:32.310 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:32.311 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:32.314 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.53, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:32.317 +05:30 [INF] Calculated investment amount: 82.2.
2025-05-18 16:24:32.319 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.09, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.322 +05:30 [INF] Calculated investment amount: 87.55.
2025-05-18 16:24:32.323 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.54, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.327 +05:30 [INF] Calculated investment amount: 71.5.
2025-05-18 16:24:32.328 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.63, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:32.332 +05:30 [INF] Calculated investment amount: 82.23.
2025-05-18 16:24:32.334 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.12, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:32.337 +05:30 [INF] Calculated investment amount: 66.36.
2025-05-18 16:24:32.338 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.59, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.340 +05:30 [INF] Calculated investment amount: 71.96.
2025-05-18 16:24:32.342 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:32.345 +05:30 [INF] Calculated investment amount: 71.99.
2025-05-18 16:24:32.346 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.349 +05:30 [INF] Calculated investment amount: 72.04.
2025-05-18 16:24:32.351 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.34, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.354 +05:30 [INF] Calculated investment amount: 196.91.
2025-05-18 16:24:32.356 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.66, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:32.357 +05:30 [INF] Calculated investment amount: 194.29.
2025-05-18 16:24:32.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.361 +05:30 [INF] Calculated investment amount: 63.06.
2025-05-18 16:24:32.363 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:32.368 +05:30 [INF] Calculated investment amount: 63.03.
2025-05-18 16:24:32.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.23, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:32.375 +05:30 [INF] Calculated investment amount: 5.12.
2025-05-18 16:24:32.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.19, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:32.379 +05:30 [INF] Calculated investment amount: 5.6.
2025-05-18 16:24:32.381 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.386 +05:30 [INF] Calculated investment amount: 8.43.
2025-05-18 16:24:32.387 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.55, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:32.389 +05:30 [INF] Calculated investment amount: 7.74.
2025-05-18 16:24:32.391 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.57, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.394 +05:30 [INF] Calculated investment amount: 11.15.
2025-05-18 16:24:32.395 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.47, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:32.396 +05:30 [INF] Calculated investment amount: 12.15.
2025-05-18 16:24:32.400 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.2, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:32.404 +05:30 [INF] Calculated investment amount: 370.07.
2025-05-18 16:24:32.406 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.8, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:32.408 +05:30 [INF] Calculated investment amount: 369.35.
2025-05-18 16:24:32.410 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.67, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:32.412 +05:30 [INF] Calculated investment amount: 234.7.
2025-05-18 16:24:32.413 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.33, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:32.422 +05:30 [INF] Calculated investment amount: 243.25.
2025-05-18 16:24:32.424 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.86, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:32.426 +05:30 [INF] Calculated investment amount: 179.71.
2025-05-18 16:24:32.427 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.14, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:32.429 +05:30 [INF] Calculated investment amount: 179.54.
2025-05-18 16:24:32.432 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:32.436 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:32.441 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:32.448 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:32.450 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 144.2537ms
2025-05-18 16:24:32.453 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:32.454 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 159.7026ms
2025-05-18 16:24:37.904 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:37.910 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:37.912 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.1517ms
2025-05-18 16:24:37.916 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:24:37.920 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:37.922 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:37.926 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:37.930 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:37.933 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:37.938 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 16:24:37.940 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 16:24:37.941 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:37.943 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:37.944 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:37.945 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:37.948 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-18 16:24:37.951 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-18 16:24:37.955 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 16:24:37.956 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:37.958 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 16:24:37.960 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}
2025-05-18 16:24:37.962 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}
2025-05-18 16:24:37.963 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0,"Energy":0,"Agriculture":0}
2025-05-18 16:24:37.967 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}
2025-05-18 16:24:37.971 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}
2025-05-18 16:24:37.973 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 16:24:37.977 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:37.979 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"percentage":15,"subAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"percentage":0,"subAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"percentage":-5,"subAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}
2025-05-18 16:24:37.980 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:37.984 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 55.4276ms
2025-05-18 16:24:37.988 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:37.991 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 75.0089ms
2025-05-18 16:24:37.994 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - null null
2025-05-18 16:24:37.999 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:38.004 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 204 null null 9.454ms
2025-05-18 16:24:38.011 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 492
2025-05-18 16:24:38.015 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:38.016 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:38.018 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:38.021 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":12.5,"Mid Cap":16.67,"Small Cap":20.83}},"fixedIncome":{"Percentage":15,"SubAssets":{"Gov Bonds":2.5,"Corp Bonds":10,"Fixed Dep":2.5}},"commodities":{"Percentage":0,"SubAssets":{"Precious Metals":0,"Energy":0,"Agriculture":0}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":20,"Savings Acc":10,"T. Bill":10}},"realEstate":{"Percentage":-5,"SubAssets":{"REITs":-1.11,"Residential Prop":-1.11,"Commercial Prop":-2.78}}}}
2025-05-18 16:24:38.022 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:38.023 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:38.024 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:38.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:38.030 +05:30 [INF] Calculated investment amount: 96.77.
2025-05-18 16:24:38.032 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:38.035 +05:30 [INF] Calculated investment amount: 103.03.
2025-05-18 16:24:38.037 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.87, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:38.040 +05:30 [INF] Calculated investment amount: 84.11.
2025-05-18 16:24:38.041 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.8, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:38.046 +05:30 [INF] Calculated investment amount: 96.75.
2025-05-18 16:24:38.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.72, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:38.049 +05:30 [INF] Calculated investment amount: 78.
2025-05-18 16:24:38.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.11, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:38.054 +05:30 [INF] Calculated investment amount: 84.69.
2025-05-18 16:24:38.056 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.28, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:38.058 +05:30 [INF] Calculated investment amount: 48.24.
2025-05-18 16:24:38.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.22, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:38.062 +05:30 [INF] Calculated investment amount: 47.77.
2025-05-18 16:24:38.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.89, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:38.067 +05:30 [INF] Calculated investment amount: 131.18.
2025-05-18 16:24:38.071 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.11, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:38.073 +05:30 [INF] Calculated investment amount: 129.61.
2025-05-18 16:24:38.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.23, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:38.076 +05:30 [INF] Calculated investment amount: 42.16.
2025-05-18 16:24:38.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.27, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:38.080 +05:30 [INF] Calculated investment amount: 41.91.
2025-05-18 16:24:38.081 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:38.084 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:38.088 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:38.094 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:38.097 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 76.3802ms
2025-05-18 16:24:38.099 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:38.102 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 91.5617ms
2025-05-18 16:24:40.404 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 16:24:40.410 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:40.411 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:40.413 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:40.421 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:40.423 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:40.425 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:24:40.427 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:24:40.429 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:40.434 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:40.437 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:40.439 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:40.442 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}
2025-05-18 16:24:40.445 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}
2025-05-18 16:24:40.448 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 16:24:40.451 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 16:24:40.456 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 16:24:40.457 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}
2025-05-18 16:24:40.458 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}
2025-05-18 16:24:40.459 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 16:24:40.463 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 16:24:40.465 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 16:24:40.467 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 16:24:40.472 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:40.474 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 16:24:40.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:40.477 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 57.0125ms
2025-05-18 16:24:40.478 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:40.479 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 74.9415ms
2025-05-18 16:24:40.485 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 514
2025-05-18 16:24:40.490 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:40.491 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:40.492 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:40.495 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":31.25,"SubAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"Percentage":31.25,"SubAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}}
2025-05-18 16:24:40.496 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:40.498 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:40.499 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:40.502 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:40.506 +05:30 [INF] Calculated investment amount: 96.77.
2025-05-18 16:24:40.507 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:40.510 +05:30 [INF] Calculated investment amount: 103.03.
2025-05-18 16:24:40.511 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:40.514 +05:30 [INF] Calculated investment amount: 47.32.
2025-05-18 16:24:40.515 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.39, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:40.519 +05:30 [INF] Calculated investment amount: 54.45.
2025-05-18 16:24:40.521 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.83, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:40.524 +05:30 [INF] Calculated investment amount: 35.14.
2025-05-18 16:24:40.525 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:40.528 +05:30 [INF] Calculated investment amount: 38.11.
2025-05-18 16:24:40.529 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:40.531 +05:30 [INF] Calculated investment amount: 180.53.
2025-05-18 16:24:40.533 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:40.536 +05:30 [INF] Calculated investment amount: 179.72.
2025-05-18 16:24:40.538 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:40.540 +05:30 [INF] Calculated investment amount: 164.18.
2025-05-18 16:24:40.541 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:40.544 +05:30 [INF] Calculated investment amount: 161.82.
2025-05-18 16:24:40.545 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.61, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:40.547 +05:30 [INF] Calculated investment amount: 158.
2025-05-18 16:24:40.549 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.77, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:40.551 +05:30 [INF] Calculated investment amount: 157.41.
2025-05-18 16:24:40.556 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:40.559 +05:30 [INF] Calculated investment amount: 6.23.
2025-05-18 16:24:40.560 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:40.562 +05:30 [INF] Calculated investment amount: 6.48.
2025-05-18 16:24:40.564 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:40.566 +05:30 [INF] Calculated investment amount: 3.1.
2025-05-18 16:24:40.568 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:40.573 +05:30 [INF] Calculated investment amount: 2.82.
2025-05-18 16:24:40.575 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:40.576 +05:30 [INF] Calculated investment amount: 4.11.
2025-05-18 16:24:40.577 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:40.579 +05:30 [INF] Calculated investment amount: 4.39.
2025-05-18 16:24:40.580 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:40.586 +05:30 [INF] Calculated investment amount: 222.04.
2025-05-18 16:24:40.588 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:40.590 +05:30 [INF] Calculated investment amount: 221.61.
2025-05-18 16:24:40.591 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:40.593 +05:30 [INF] Calculated investment amount: 281.44.
2025-05-18 16:24:40.595 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:40.597 +05:30 [INF] Calculated investment amount: 292.09.
2025-05-18 16:24:40.598 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:40.601 +05:30 [INF] Calculated investment amount: 287.32.
2025-05-18 16:24:40.607 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:40.608 +05:30 [INF] Calculated investment amount: 287.47.
2025-05-18 16:24:40.610 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:40.612 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:40.620 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:40.627 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:40.629 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 134.388ms
2025-05-18 16:24:40.630 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:40.632 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 147.0912ms
2025-05-18 16:24:41.370 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 16:24:41.375 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:41.376 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:41.378 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:41.389 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:41.392 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:41.394 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:24:41.395 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:24:41.397 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:41.399 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:41.400 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:41.403 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:41.406 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}
2025-05-18 16:24:41.407 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}
2025-05-18 16:24:41.409 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 16:24:41.410 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 16:24:41.413 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 16:24:41.415 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}
2025-05-18 16:24:41.417 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}
2025-05-18 16:24:41.419 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}
2025-05-18 16:24:41.422 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}
2025-05-18 16:24:41.424 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}
2025-05-18 16:24:41.426 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 16:24:41.430 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:41.432 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":31.25,"subAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"percentage":31.25,"subAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"percentage":1.25,"subAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"percentage":-3.75,"subAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}
2025-05-18 16:24:41.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:41.437 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.3978ms
2025-05-18 16:24:41.439 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:41.441 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 71.4038ms
2025-05-18 16:24:41.447 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 514
2025-05-18 16:24:41.554 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:41.555 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:41.557 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:41.561 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":31.25,"SubAssets":{"Large Cap":12.5,"Mid Cap":9.38,"Small Cap":9.38}},"fixedIncome":{"Percentage":31.25,"SubAssets":{"Gov Bonds":9.38,"Corp Bonds":12.5,"Fixed Dep":9.38}},"commodities":{"Percentage":1.25,"SubAssets":{"Precious Metals":0.5,"Energy":0.38,"Agriculture":0.38}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":12,"Savings Acc":12,"T. Bill":16}},"realEstate":{"Percentage":-3.75,"SubAssets":{"REITs":-1.41,"Residential Prop":-0.94,"Commercial Prop":-1.41}}}}
2025-05-18 16:24:41.563 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:41.565 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:41.566 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:41.569 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:41.579 +05:30 [INF] Calculated investment amount: 96.77.
2025-05-18 16:24:41.587 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:41.590 +05:30 [INF] Calculated investment amount: 103.03.
2025-05-18 16:24:41.592 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.99, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:41.595 +05:30 [INF] Calculated investment amount: 47.32.
2025-05-18 16:24:41.596 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.39, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:41.598 +05:30 [INF] Calculated investment amount: 54.45.
2025-05-18 16:24:41.600 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.83, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:41.604 +05:30 [INF] Calculated investment amount: 35.14.
2025-05-18 16:24:41.605 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.55, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:41.607 +05:30 [INF] Calculated investment amount: 38.11.
2025-05-18 16:24:41.608 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:41.610 +05:30 [INF] Calculated investment amount: 180.53.
2025-05-18 16:24:41.612 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:41.614 +05:30 [INF] Calculated investment amount: 179.72.
2025-05-18 16:24:41.616 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:41.618 +05:30 [INF] Calculated investment amount: 164.18.
2025-05-18 16:24:41.621 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.38, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:41.623 +05:30 [INF] Calculated investment amount: 161.82.
2025-05-18 16:24:41.624 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.61, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:41.626 +05:30 [INF] Calculated investment amount: 158.
2025-05-18 16:24:41.627 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.77, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:41.630 +05:30 [INF] Calculated investment amount: 157.41.
2025-05-18 16:24:41.631 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.28, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:41.634 +05:30 [INF] Calculated investment amount: 6.23.
2025-05-18 16:24:41.636 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.22, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:41.638 +05:30 [INF] Calculated investment amount: 6.48.
2025-05-18 16:24:41.639 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.18, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:41.644 +05:30 [INF] Calculated investment amount: 3.1.
2025-05-18 16:24:41.646 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.2, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:41.650 +05:30 [INF] Calculated investment amount: 2.82.
2025-05-18 16:24:41.653 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.21, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:41.655 +05:30 [INF] Calculated investment amount: 4.11.
2025-05-18 16:24:41.657 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:41.662 +05:30 [INF] Calculated investment amount: 4.39.
2025-05-18 16:24:41.665 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.12, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:41.667 +05:30 [INF] Calculated investment amount: 222.04.
2025-05-18 16:24:41.669 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.88, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:41.672 +05:30 [INF] Calculated investment amount: 221.61.
2025-05-18 16:24:41.673 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.6, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:41.675 +05:30 [INF] Calculated investment amount: 281.44.
2025-05-18 16:24:41.676 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.4, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:41.678 +05:30 [INF] Calculated investment amount: 292.09.
2025-05-18 16:24:41.679 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.77, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:41.685 +05:30 [INF] Calculated investment amount: 287.32.
2025-05-18 16:24:41.690 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.23, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:41.692 +05:30 [INF] Calculated investment amount: 287.47.
2025-05-18 16:24:41.694 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:41.696 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:41.705 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:41.710 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:41.711 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 151.2147ms
2025-05-18 16:24:41.717 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:41.720 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 272.4789ms
2025-05-18 16:24:43.722 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:43.728 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:43.730 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.4976ms
2025-05-18 16:24:43.737 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 16:24:43.740 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:43.742 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:43.743 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:43.747 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:43.749 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:43.750 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:24:43.751 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:43.753 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:43.754 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:43.755 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:43.756 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:43.759 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:43.762 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:43.764 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:43.767 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:43.769 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:43.772 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:43.775 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:43.778 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:43.780 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:43.781 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:43.783 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:43.788 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:43.789 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:43.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:43.794 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 47.8628ms
2025-05-18 16:24:43.796 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:43.799 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 61.9466ms
2025-05-18 16:24:43.801 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - null null
2025-05-18 16:24:43.804 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:43.805 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 204 null null 3.7799ms
2025-05-18 16:24:43.808 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - application/json 513
2025-05-18 16:24:43.813 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:43.815 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:43.816 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:43.820 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":12.5,"SubAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"Percentage":47.5,"SubAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 16:24:43.822 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:43.824 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:24:43.825 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:43.828 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.07, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:24:43.831 +05:30 [INF] Calculated investment amount: 60.5.
2025-05-18 16:24:43.832 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:43.835 +05:30 [INF] Calculated investment amount: 64.33.
2025-05-18 16:24:43.836 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:24:43.838 +05:30 [INF] Calculated investment amount: 15.74.
2025-05-18 16:24:43.839 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.46, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:24:43.842 +05:30 [INF] Calculated investment amount: 18.11.
2025-05-18 16:24:43.845 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:24:43.848 +05:30 [INF] Calculated investment amount: 5.82.
2025-05-18 16:24:43.849 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:24:43.852 +05:30 [INF] Calculated investment amount: 6.37.
2025-05-18 16:24:43.854 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:43.857 +05:30 [INF] Calculated investment amount: 456.79.
2025-05-18 16:24:43.858 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:24:43.860 +05:30 [INF] Calculated investment amount: 455.36.
2025-05-18 16:24:43.862 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.65, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:24:43.864 +05:30 [INF] Calculated investment amount: 124.75.
2025-05-18 16:24:43.866 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.85, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:24:43.868 +05:30 [INF] Calculated investment amount: 123.01.
2025-05-18 16:24:43.870 +05:30 [INF] Calculating investment amount with PercentageSplit: 7, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:24:43.875 +05:30 [INF] Calculated investment amount: 239.91.
2025-05-18 16:24:43.876 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.25, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:24:43.878 +05:30 [INF] Calculated investment amount: 239.24.
2025-05-18 16:24:43.879 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:24:43.881 +05:30 [INF] Calculated investment amount: 19.15.
2025-05-18 16:24:43.883 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:24:43.887 +05:30 [INF] Calculated investment amount: 20.63.
2025-05-18 16:24:43.889 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:24:43.891 +05:30 [INF] Calculated investment amount: 4.99.
2025-05-18 16:24:43.892 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:24:43.895 +05:30 [INF] Calculated investment amount: 4.65.
2025-05-18 16:24:43.896 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:24:43.899 +05:30 [INF] Calculated investment amount: 3.33.
2025-05-18 16:24:43.900 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:24:43.903 +05:30 [INF] Calculated investment amount: 3.62.
2025-05-18 16:24:43.905 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:24:43.909 +05:30 [INF] Calculated investment amount: 170.89.
2025-05-18 16:24:43.911 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:24:43.913 +05:30 [INF] Calculated investment amount: 170.35.
2025-05-18 16:24:43.915 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:24:43.918 +05:30 [INF] Calculated investment amount: 360.84.
2025-05-18 16:24:43.921 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:24:43.923 +05:30 [INF] Calculated investment amount: 374.24.
2025-05-18 16:24:43.924 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:24:43.926 +05:30 [INF] Calculated investment amount: 276.23.
2025-05-18 16:24:43.928 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:24:43.929 +05:30 [INF] Calculated investment amount: 276.29.
2025-05-18 16:24:43.930 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:43.936 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:43.942 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:43.948 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:43.950 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 130.8689ms
2025-05-18 16:24:43.954 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:43.955 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=20 - 500 null application/json; charset=utf-8 147.4425ms
2025-05-18 16:24:48.049 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 16:24:48.053 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:48.055 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:48.058 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:48.061 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:48.069 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:48.070 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:24:48.071 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:48.073 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:48.074 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:48.076 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:48.077 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:48.079 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:48.080 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:48.081 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:48.083 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:48.085 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:48.087 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:48.089 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:48.091 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:48.092 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:48.093 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:48.095 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:48.100 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:48.102 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:48.107 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:48.110 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.4594ms
2025-05-18 16:24:48.110 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:48.112 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 63.3949ms
2025-05-18 16:24:48.116 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - null null
2025-05-18 16:24:48.122 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:48.123 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 204 null null 7.77ms
2025-05-18 16:24:48.127 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 513
2025-05-18 16:24:48.130 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:48.131 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:48.133 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:48.140 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":12.5,"SubAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"Percentage":47.5,"SubAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 16:24:48.142 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:48.143 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:24:48.144 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:48.146 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.07, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:24:48.149 +05:30 [INF] Calculated investment amount: 156.92.
2025-05-18 16:24:48.150 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:48.154 +05:30 [INF] Calculated investment amount: 155.11.
2025-05-18 16:24:48.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:24:48.158 +05:30 [INF] Calculated investment amount: 51.12.
2025-05-18 16:24:48.159 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.46, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:24:48.161 +05:30 [INF] Calculated investment amount: 51.42.
2025-05-18 16:24:48.163 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:24:48.165 +05:30 [INF] Calculated investment amount: 21.58.
2025-05-18 16:24:48.170 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:24:48.172 +05:30 [INF] Calculated investment amount: 22.
2025-05-18 16:24:48.173 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:48.175 +05:30 [INF] Calculated investment amount: 744.06.
2025-05-18 16:24:48.177 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:24:48.178 +05:30 [INF] Calculated investment amount: 727.72.
2025-05-18 16:24:48.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.65, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:24:48.181 +05:30 [INF] Calculated investment amount: 240.85.
2025-05-18 16:24:48.182 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.85, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:24:48.185 +05:30 [INF] Calculated investment amount: 244.26.
2025-05-18 16:24:48.189 +05:30 [INF] Calculating investment amount with PercentageSplit: 7, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:24:48.191 +05:30 [INF] Calculated investment amount: 409.8.
2025-05-18 16:24:48.192 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.25, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:24:48.193 +05:30 [INF] Calculated investment amount: 416.47.
2025-05-18 16:24:48.194 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:24:48.196 +05:30 [INF] Calculated investment amount: 40.58.
2025-05-18 16:24:48.198 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:24:48.203 +05:30 [INF] Calculated investment amount: 38.
2025-05-18 16:24:48.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:48.208 +05:30 [INF] Calculated investment amount: 12.03.
2025-05-18 16:24:48.209 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:24:48.210 +05:30 [INF] Calculated investment amount: 12.38.
2025-05-18 16:24:48.211 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:24:48.212 +05:30 [INF] Calculated investment amount: 7.52.
2025-05-18 16:24:48.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:24:48.219 +05:30 [INF] Calculated investment amount: 7.12.
2025-05-18 16:24:48.221 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:24:48.223 +05:30 [INF] Calculated investment amount: 283.7.
2025-05-18 16:24:48.223 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:48.225 +05:30 [INF] Calculated investment amount: 277.49.
2025-05-18 16:24:48.225 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:24:48.227 +05:30 [INF] Calculated investment amount: 509.
2025-05-18 16:24:48.228 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:24:48.229 +05:30 [INF] Calculated investment amount: 553.96.
2025-05-18 16:24:48.230 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:24:48.235 +05:30 [INF] Calculated investment amount: 454.25.
2025-05-18 16:24:48.239 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:24:48.241 +05:30 [INF] Calculated investment amount: 467.49.
2025-05-18 16:24:48.242 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:48.244 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:48.251 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:48.256 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:48.258 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 120.4674ms
2025-05-18 16:24:48.259 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:48.261 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 134.3663ms
2025-05-18 16:24:48.922 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:48.927 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:48.929 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 6.8105ms
2025-05-18 16:24:48.937 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 16:24:48.943 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:48.944 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:48.946 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:48.951 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:48.954 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:48.955 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:24:48.956 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:48.957 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:48.959 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:48.961 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:48.963 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:48.966 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:48.969 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:48.971 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:48.975 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:48.977 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:48.979 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:48.981 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:48.983 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:48.985 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:48.987 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:48.989 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:48.992 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:48.993 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:48.995 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:48.996 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.3884ms
2025-05-18 16:24:48.998 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:49.000 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 63.437ms
2025-05-18 16:24:49.005 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - application/json 513
2025-05-18 16:24:49.009 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:49.010 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:49.011 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:49.015 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":12.5,"SubAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"Percentage":47.5,"SubAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 16:24:49.017 +05:30 [INF] Target Amount: 10000
2025-05-18 16:24:49.018 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:24:49.020 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:49.023 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.07, TargetAmount: 10000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:24:49.026 +05:30 [INF] Calculated investment amount: 156.92.
2025-05-18 16:24:49.029 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.74, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:49.032 +05:30 [INF] Calculated investment amount: 155.11.
2025-05-18 16:24:49.034 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 10000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:24:49.037 +05:30 [INF] Calculated investment amount: 51.12.
2025-05-18 16:24:49.039 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.46, TargetAmount: 10000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:24:49.041 +05:30 [INF] Calculated investment amount: 51.42.
2025-05-18 16:24:49.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 10000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:24:49.045 +05:30 [INF] Calculated investment amount: 21.58.
2025-05-18 16:24:49.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 10000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:24:49.049 +05:30 [INF] Calculated investment amount: 22.
2025-05-18 16:24:49.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.12, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:49.053 +05:30 [INF] Calculated investment amount: 744.06.
2025-05-18 16:24:49.056 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.63, TargetAmount: 10000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:24:49.058 +05:30 [INF] Calculated investment amount: 727.72.
2025-05-18 16:24:49.059 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.65, TargetAmount: 10000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:24:49.061 +05:30 [INF] Calculated investment amount: 240.85.
2025-05-18 16:24:49.063 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.85, TargetAmount: 10000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:24:49.067 +05:30 [INF] Calculated investment amount: 244.26.
2025-05-18 16:24:49.069 +05:30 [INF] Calculating investment amount with PercentageSplit: 7, TargetAmount: 10000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:24:49.072 +05:30 [INF] Calculated investment amount: 409.8.
2025-05-18 16:24:49.074 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.25, TargetAmount: 10000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:24:49.076 +05:30 [INF] Calculated investment amount: 416.47.
2025-05-18 16:24:49.077 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 10000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:24:49.079 +05:30 [INF] Calculated investment amount: 40.58.
2025-05-18 16:24:49.081 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 10000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:24:49.082 +05:30 [INF] Calculated investment amount: 38.
2025-05-18 16:24:49.083 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 10000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:49.087 +05:30 [INF] Calculated investment amount: 12.03.
2025-05-18 16:24:49.088 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 10000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:24:49.089 +05:30 [INF] Calculated investment amount: 12.38.
2025-05-18 16:24:49.090 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 10000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:24:49.092 +05:30 [INF] Calculated investment amount: 7.52.
2025-05-18 16:24:49.094 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 10000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:24:49.097 +05:30 [INF] Calculated investment amount: 7.12.
2025-05-18 16:24:49.101 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 10000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:24:49.107 +05:30 [INF] Calculated investment amount: 283.7.
2025-05-18 16:24:49.108 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 10000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:49.110 +05:30 [INF] Calculated investment amount: 277.49.
2025-05-18 16:24:49.111 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 10000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:24:49.113 +05:30 [INF] Calculated investment amount: 509.
2025-05-18 16:24:49.115 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 10000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:24:49.117 +05:30 [INF] Calculated investment amount: 553.96.
2025-05-18 16:24:49.120 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 10000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:24:49.122 +05:30 [INF] Calculated investment amount: 454.25.
2025-05-18 16:24:49.123 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 10000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:24:49.126 +05:30 [INF] Calculated investment amount: 467.49.
2025-05-18 16:24:49.127 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:49.129 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:49.135 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:49.143 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:49.145 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 130.3024ms
2025-05-18 16:24:49.147 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:49.148 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=10000&investmentHorizon=10 - 500 null application/json; charset=utf-8 142.8832ms
2025-05-18 16:24:54.142 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:24:54.148 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:54.150 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.4167ms
2025-05-18 16:24:54.156 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 100
2025-05-18 16:24:54.161 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:54.163 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:54.165 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:54.171 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:54.173 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:54.174 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:24:54.176 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:54.177 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:54.177 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:54.178 +05:30 [INF] Looking up goal tuning for goal: Emergency Fund
2025-05-18 16:24:54.180 +05:30 [INF] Goal tuning found: {"cash_min":40}
2025-05-18 16:24:54.184 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:54.187 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:54.188 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:54.190 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:54.192 +05:30 [INF] Sub-allocations for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:54.194 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}
2025-05-18 16:24:54.194 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}
2025-05-18 16:24:54.195 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}
2025-05-18 16:24:54.201 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}
2025-05-18 16:24:54.203 +05:30 [INF] Added sub-assets for realEstate: {"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}
2025-05-18 16:24:54.206 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:54.210 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:54.212 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":12.5,"subAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"percentage":47.5,"subAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"percentage":2.5,"subAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"percentage":40,"subAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"percentage":-2.5,"subAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}
2025-05-18 16:24:54.219 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:54.221 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 50.5554ms
2025-05-18 16:24:54.223 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:54.224 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 67.4454ms
2025-05-18 16:24:54.227 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - null null
2025-05-18 16:24:54.230 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:54.231 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - 204 null null 4.2211ms
2025-05-18 16:24:54.237 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - application/json 513
2025-05-18 16:24:54.241 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:54.242 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:54.246 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:54.253 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":12.5,"SubAssets":{"Large Cap":7.81,"Mid Cap":3.12,"Small Cap":1.56}},"fixedIncome":{"Percentage":47.5,"SubAssets":{"Gov Bonds":23.75,"Corp Bonds":9.5,"Fixed Dep":14.25}},"commodities":{"Percentage":2.5,"SubAssets":{"Precious Metals":1.56,"Energy":0.62,"Agriculture":0.31}},"cash":{"Percentage":40,"SubAssets":{"Liquid Mutual Funds":9.23,"Savings Acc":15.38,"T. Bill":15.38}},"realEstate":{"Percentage":-2.5,"SubAssets":{"REITs":-1,"Residential Prop":-1,"Commercial Prop":-0.5}}}}
2025-05-18 16:24:54.255 +05:30 [INF] Target Amount: 20000
2025-05-18 16:24:54.256 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:24:54.257 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:54.261 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.07, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:24:54.263 +05:30 [INF] Calculated investment amount: 313.83.
2025-05-18 16:24:54.266 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.74, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:54.269 +05:30 [INF] Calculated investment amount: 310.22.
2025-05-18 16:24:54.270 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.66, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:24:54.273 +05:30 [INF] Calculated investment amount: 102.24.
2025-05-18 16:24:54.274 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.46, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:24:54.275 +05:30 [INF] Calculated investment amount: 102.84.
2025-05-18 16:24:54.278 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:24:54.283 +05:30 [INF] Calculated investment amount: 43.16.
2025-05-18 16:24:54.285 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:24:54.287 +05:30 [INF] Calculated investment amount: 43.99.
2025-05-18 16:24:54.289 +05:30 [INF] Calculating investment amount with PercentageSplit: 12.12, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:54.291 +05:30 [INF] Calculated investment amount: 1488.13.
2025-05-18 16:24:54.292 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.63, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:24:54.295 +05:30 [INF] Calculated investment amount: 1455.45.
2025-05-18 16:24:54.297 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.65, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:24:54.304 +05:30 [INF] Calculated investment amount: 481.69.
2025-05-18 16:24:54.307 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.85, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:24:54.311 +05:30 [INF] Calculated investment amount: 488.51.
2025-05-18 16:24:54.315 +05:30 [INF] Calculating investment amount with PercentageSplit: 7, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:24:54.319 +05:30 [INF] Calculated investment amount: 819.6.
2025-05-18 16:24:54.321 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.25, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:24:54.324 +05:30 [INF] Calculated investment amount: 832.95.
2025-05-18 16:24:54.325 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.86, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:24:54.328 +05:30 [INF] Calculated investment amount: 81.16.
2025-05-18 16:24:54.329 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:24:54.335 +05:30 [INF] Calculated investment amount: 76.
2025-05-18 16:24:54.338 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.29, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:54.340 +05:30 [INF] Calculated investment amount: 24.05.
2025-05-18 16:24:54.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.33, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:24:54.343 +05:30 [INF] Calculated investment amount: 24.76.
2025-05-18 16:24:54.344 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.17, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:24:54.346 +05:30 [INF] Calculated investment amount: 15.04.
2025-05-18 16:24:54.350 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.14, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:24:54.354 +05:30 [INF] Calculated investment amount: 14.23.
2025-05-18 16:24:54.355 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.71, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:24:54.359 +05:30 [INF] Calculated investment amount: 567.41.
2025-05-18 16:24:54.360 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.52, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:54.363 +05:30 [INF] Calculated investment amount: 554.98.
2025-05-18 16:24:54.365 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.18, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:24:54.368 +05:30 [INF] Calculated investment amount: 1018.01.
2025-05-18 16:24:54.370 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.2, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:24:54.372 +05:30 [INF] Calculated investment amount: 1107.93.
2025-05-18 16:24:54.373 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.47, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:24:54.375 +05:30 [INF] Calculated investment amount: 908.5.
2025-05-18 16:24:54.377 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.91, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:24:54.379 +05:30 [INF] Calculated investment amount: 934.98.
2025-05-18 16:24:54.380 +05:30 [ERR] Invalid input detected: Percentage split must be between 1 and 100.
System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
2025-05-18 16:24:54.385 +05:30 [ERR] Failed to calculate product allocations.
System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
2025-05-18 16:24:54.391 +05:30 [ERR] Error occurred while calculating product allocations.
System.ApplicationException: Failed to calculate product allocations.
 ---> System.ArgumentException: Error processing input parameters
 ---> System.ArgumentException: Percentage split must be between 1 and 100.
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 25
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.InvestmentAmountService.CalculateInvestmentAmount(Double percentageSplit, Double targetAmount, Double annualReturn, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\InvestmentAmountService.cs:line 51
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 72
   --- End of inner exception stack trace ---
   at WisVestAPI.Services.ProductAllocationService.CalculateProductAllocations(Dictionary`2 subAllocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Services\ProductAllocationService.cs:line 91
   at WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations(AllocationResultDTO allocationResult, Double targetAmount, Int32 investmentHorizon) in C:\Users\Bhavya Bansal\OneDrive\Desktop\f_in\Final backend code without enhancements\Controllers\ProdAllocController.cs:line 78
2025-05-18 16:24:54.398 +05:30 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:54.403 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 150.3911ms
2025-05-18 16:24:54.406 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:54.407 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - 500 null application/json; charset=utf-8 169.7812ms
2025-05-18 16:24:58.164 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 103
2025-05-18 16:24:58.170 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.171 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:58.172 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:58.179 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:24:58.184 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:24:58.186 +05:30 [INF] Looking up base allocation for key: Low+Long
2025-05-18 16:24:58.188 +05:30 [INF] Base allocation found: {"equity":30,"fixedIncome":45,"commodities":10,"cash":10,"realEstate":5}
2025-05-18 16:24:58.191 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:24:58.194 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:24:58.195 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-18 16:24:58.197 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-18 16:24:58.200 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 16:24:58.202 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}
2025-05-18 16:24:58.203 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:24:58.205 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 16:24:58.206 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:24:58.208 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}
2025-05-18 16:24:58.209 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}
2025-05-18 16:24:58.210 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}
2025-05-18 16:24:58.211 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}
2025-05-18 16:24:58.212 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2,"Residential Prop":2,"Commercial Prop":1}
2025-05-18 16:24:58.214 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":55,"subAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:24:58.221 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:24:58.222 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":20,"subAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"percentage":55,"subAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"percentage":10,"subAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"percentage":5,"subAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}
2025-05-18 16:24:58.224 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:24:58.226 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 46.8291ms
2025-05-18 16:24:58.227 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:24:58.229 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 64.3007ms
2025-05-18 16:24:58.232 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - application/json 490
2025-05-18 16:24:58.238 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.239 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:58.240 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:58.243 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":20,"SubAssets":{"Large Cap":12.5,"Mid Cap":5,"Small Cap":2.5}},"fixedIncome":{"Percentage":55,"SubAssets":{"Gov Bonds":27.5,"Corp Bonds":11,"Fixed Dep":16.5}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":6.25,"Energy":2.5,"Agriculture":1.25}},"cash":{"Percentage":10,"SubAssets":{"Liquid Mutual Funds":2.31,"Savings Acc":3.85,"T. Bill":3.85}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":2,"Residential Prop":2,"Commercial Prop":1}}}}
2025-05-18 16:24:58.245 +05:30 [INF] Target Amount: 20000
2025-05-18 16:24:58.247 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:24:58.250 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:24:58.254 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.51, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:24:58.256 +05:30 [INF] Calculated investment amount: 501.98.
2025-05-18 16:24:58.258 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.99, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:58.261 +05:30 [INF] Calculated investment amount: 496.86.
2025-05-18 16:24:58.262 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.66, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:24:58.264 +05:30 [INF] Calculated investment amount: 163.83.
2025-05-18 16:24:58.266 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.34, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:24:58.269 +05:30 [INF] Calculated investment amount: 164.82.
2025-05-18 16:24:58.271 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.29, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:24:58.272 +05:30 [INF] Calculated investment amount: 69.59.
2025-05-18 16:24:58.273 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.21, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:24:58.275 +05:30 [INF] Calculated investment amount: 70.04.
2025-05-18 16:24:58.277 +05:30 [INF] Calculating investment amount with PercentageSplit: 14.03, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:58.279 +05:30 [INF] Calculated investment amount: 1722.64.
2025-05-18 16:24:58.281 +05:30 [INF] Calculating investment amount with PercentageSplit: 13.47, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:24:58.286 +05:30 [INF] Calculated investment amount: 1685.72.
2025-05-18 16:24:58.287 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.38, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:24:58.289 +05:30 [INF] Calculated investment amount: 557.31.
2025-05-18 16:24:58.290 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.62, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:24:58.292 +05:30 [INF] Calculated investment amount: 566.07.
2025-05-18 16:24:58.293 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.1, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:24:58.295 +05:30 [INF] Calculated investment amount: 948.4.
2025-05-18 16:24:58.297 +05:30 [INF] Calculating investment amount with PercentageSplit: 8.4, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:24:58.300 +05:30 [INF] Calculated investment amount: 965.07.
2025-05-18 16:24:58.303 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.46, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:24:58.305 +05:30 [INF] Calculated investment amount: 326.53.
2025-05-18 16:24:58.307 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.79, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:24:58.309 +05:30 [INF] Calculated investment amount: 302.9.
2025-05-18 16:24:58.310 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:24:58.312 +05:30 [INF] Calculated investment amount: 97.88.
2025-05-18 16:24:58.315 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.32, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:24:58.320 +05:30 [INF] Calculated investment amount: 99.05.
2025-05-18 16:24:58.322 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.69, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:24:58.323 +05:30 [INF] Calculated investment amount: 61.04.
2025-05-18 16:24:58.325 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.56, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:24:58.327 +05:30 [INF] Calculated investment amount: 56.94.
2025-05-18 16:24:58.329 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.18, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:24:58.333 +05:30 [INF] Calculated investment amount: 142.15.
2025-05-18 16:24:58.335 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.13, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:24:58.338 +05:30 [INF] Calculated investment amount: 138.74.
2025-05-18 16:24:58.339 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.8, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:24:58.340 +05:30 [INF] Calculated investment amount: 255.21.
2025-05-18 16:24:58.341 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.05, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:24:58.343 +05:30 [INF] Calculated investment amount: 276.98.
2025-05-18 16:24:58.345 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:24:58.348 +05:30 [INF] Calculated investment amount: 227.43.
2025-05-18 16:24:58.352 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.98, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:24:58.355 +05:30 [INF] Calculated investment amount: 234.04.
2025-05-18 16:24:58.356 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 20000, AnnualReturn: 8.9, InvestmentHorizon: 10.
2025-05-18 16:24:58.358 +05:30 [INF] Calculated investment amount: 82.7.
2025-05-18 16:24:58.359 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 20000, AnnualReturn: 9.5, InvestmentHorizon: 10.
2025-05-18 16:24:58.362 +05:30 [INF] Calculated investment amount: 83.12.
2025-05-18 16:24:58.365 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 20000, AnnualReturn: 6.7, InvestmentHorizon: 10.
2025-05-18 16:24:58.368 +05:30 [INF] Calculated investment amount: 100.38.
2025-05-18 16:24:58.371 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.04, TargetAmount: 20000, AnnualReturn: 7.3, InvestmentHorizon: 10.
2025-05-18 16:24:58.373 +05:30 [INF] Calculated investment amount: 102.82.
2025-05-18 16:24:58.374 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.51, TargetAmount: 20000, AnnualReturn: 10.2, InvestmentHorizon: 10.
2025-05-18 16:24:58.376 +05:30 [INF] Calculated investment amount: 38.62.
2025-05-18 16:24:58.378 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.49, TargetAmount: 20000, AnnualReturn: 9.8, InvestmentHorizon: 10.
2025-05-18 16:24:58.382 +05:30 [INF] Calculated investment amount: 38.48.
2025-05-18 16:24:58.388 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:24:58.390 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:58.393 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 150.343ms
2025-05-18 16:24:58.396 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:24:58.398 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=10 - 200 null application/json; charset=utf-8 165.7908ms
2025-05-18 16:24:58.412 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:24:58.425 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.410 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:24:58.430 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 17.5076ms
2025-05-18 16:24:58.436 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.441 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:24:58.442 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 32.4796ms
2025-05-18 16:24:58.446 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.450 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:24:58.452 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:24:58.455 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:24:58.457 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:24:58.458 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:24:58.464 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:58.464 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:24:58.469 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 7.8854ms
2025-05-18 16:24:58.471 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:24:58.472 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:24:58.475 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:24:58.477 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 35.1341ms
2025-05-18 16:24:58.478 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:24:58.484 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.4373ms
2025-05-18 16:24:58.486 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:24:58.487 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 37.4524ms
2025-05-18 16:25:18.799 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:25:18.807 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:18.817 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 18.411ms
2025-05-18 16:25:18.824 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:25:18.830 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:18.835 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:25:18.838 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:25:18.843 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:25:18.844 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:25:18.845 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:25:18.846 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:25:18.847 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:25:18.848 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:25:18.849 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-18 16:25:18.850 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-18 16:25:18.856 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 16:25:18.858 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:25:18.860 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 16:25:18.861 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 16:25:18.864 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 16:25:18.867 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 16:25:18.869 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:25:18.871 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 16:25:18.871 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 16:25:18.873 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 16:25:18.876 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 16:25:18.879 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:25:18.880 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 16:25:18.883 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:25:18.886 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 43.4786ms
2025-05-18 16:25:18.888 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:25:18.889 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 65.104ms
2025-05-18 16:25:18.893 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=19 - null null
2025-05-18 16:25:18.897 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:18.898 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=19 - 204 null null 4.5833ms
2025-05-18 16:25:18.904 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=19 - application/json 492
2025-05-18 16:25:18.907 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:18.908 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:25:18.909 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:25:18.913 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":16.67,"SubAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"Percentage":11.67,"SubAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"Percentage":11.67,"SubAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}}
2025-05-18 16:25:18.915 +05:30 [INF] Target Amount: 20000
2025-05-18 16:25:18.916 +05:30 [INF] Investment Horizon: 19
2025-05-18 16:25:18.918 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:25:18.921 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 20000, AnnualReturn: 10, InvestmentHorizon: 19.
2025-05-18 16:25:18.923 +05:30 [INF] Calculated investment amount: 204.38.
2025-05-18 16:25:18.924 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-18 16:25:18.926 +05:30 [INF] Calculated investment amount: 216.01.
2025-05-18 16:25:18.928 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 20000, AnnualReturn: 12.5, InvestmentHorizon: 19.
2025-05-18 16:25:18.934 +05:30 [INF] Calculated investment amount: 102.2.
2025-05-18 16:25:18.938 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 20000, AnnualReturn: 11, InvestmentHorizon: 19.
2025-05-18 16:25:18.940 +05:30 [INF] Calculated investment amount: 115.92.
2025-05-18 16:25:18.942 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 20000, AnnualReturn: 14, InvestmentHorizon: 19.
2025-05-18 16:25:18.943 +05:30 [INF] Calculated investment amount: 76.81.
2025-05-18 16:25:18.945 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 20000, AnnualReturn: 13.2, InvestmentHorizon: 19.
2025-05-18 16:25:18.947 +05:30 [INF] Calculated investment amount: 82.88.
2025-05-18 16:25:18.949 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 19.
2025-05-18 16:25:18.951 +05:30 [INF] Calculated investment amount: 363.28.
2025-05-18 16:25:18.953 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 20000, AnnualReturn: 4.8, InvestmentHorizon: 19.
2025-05-18 16:25:18.955 +05:30 [INF] Calculated investment amount: 361.91.
2025-05-18 16:25:18.956 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 20000, AnnualReturn: 6.8, InvestmentHorizon: 19.
2025-05-18 16:25:18.958 +05:30 [INF] Calculated investment amount: 336.37.
2025-05-18 16:25:18.960 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 20000, AnnualReturn: 7.1, InvestmentHorizon: 19.
2025-05-18 16:25:18.964 +05:30 [INF] Calculated investment amount: 333.04.
2025-05-18 16:25:18.967 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 20000, AnnualReturn: 5.5, InvestmentHorizon: 19.
2025-05-18 16:25:18.970 +05:30 [INF] Calculated investment amount: 319.64.
2025-05-18 16:25:18.972 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 20000, AnnualReturn: 5.7, InvestmentHorizon: 19.
2025-05-18 16:25:18.974 +05:30 [INF] Calculated investment amount: 319.5.
2025-05-18 16:25:18.975 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.69, TargetAmount: 20000, AnnualReturn: 7.8, InvestmentHorizon: 19.
2025-05-18 16:25:18.977 +05:30 [INF] Calculated investment amount: 177.13.
2025-05-18 16:25:18.980 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.98, TargetAmount: 20000, AnnualReturn: 6.3, InvestmentHorizon: 19.
2025-05-18 16:25:18.983 +05:30 [INF] Calculated investment amount: 186.69.
2025-05-18 16:25:18.985 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.36, TargetAmount: 20000, AnnualReturn: 9.2, InvestmentHorizon: 19.
2025-05-18 16:25:18.987 +05:30 [INF] Calculated investment amount: 88.66.
2025-05-18 16:25:18.988 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.64, TargetAmount: 20000, AnnualReturn: 10.3, InvestmentHorizon: 19.
2025-05-18 16:25:18.990 +05:30 [INF] Calculated investment amount: 81.98.
2025-05-18 16:25:18.992 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.74, TargetAmount: 20000, AnnualReturn: 8.5, InvestmentHorizon: 19.
2025-05-18 16:25:18.994 +05:30 [INF] Calculated investment amount: 116.31.
2025-05-18 16:25:18.995 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 20000, AnnualReturn: 7, InvestmentHorizon: 19.
2025-05-18 16:25:19.000 +05:30 [INF] Calculated investment amount: 124.98.
2025-05-18 16:25:19.003 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.78, TargetAmount: 20000, AnnualReturn: 5.2, InvestmentHorizon: 19.
2025-05-18 16:25:19.006 +05:30 [INF] Calculated investment amount: 135.88.
2025-05-18 16:25:19.008 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.72, TargetAmount: 20000, AnnualReturn: 5, InvestmentHorizon: 19.
2025-05-18 16:25:19.012 +05:30 [INF] Calculated investment amount: 136.13.
2025-05-18 16:25:19.014 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 20000, AnnualReturn: 3.5, InvestmentHorizon: 19.
2025-05-18 16:25:19.016 +05:30 [INF] Calculated investment amount: 169.57.
2025-05-18 16:25:19.018 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 20000, AnnualReturn: 4, InvestmentHorizon: 19.
2025-05-18 16:25:19.020 +05:30 [INF] Calculated investment amount: 177.52.
2025-05-18 16:25:19.021 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.27, TargetAmount: 20000, AnnualReturn: 5.1, InvestmentHorizon: 19.
2025-05-18 16:25:19.023 +05:30 [INF] Calculated investment amount: 176.44.
2025-05-18 16:25:19.024 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.4, TargetAmount: 20000, AnnualReturn: 5.4, InvestmentHorizon: 19.
2025-05-18 16:25:19.026 +05:30 [INF] Calculated investment amount: 176.71.
2025-05-18 16:25:19.028 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 20000, AnnualReturn: 8.9, InvestmentHorizon: 19.
2025-05-18 16:25:19.032 +05:30 [INF] Calculated investment amount: 83.91.
2025-05-18 16:25:19.034 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 20000, AnnualReturn: 9.5, InvestmentHorizon: 19.
2025-05-18 16:25:19.037 +05:30 [INF] Calculated investment amount: 80.59.
2025-05-18 16:25:19.038 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.4, TargetAmount: 20000, AnnualReturn: 6.7, InvestmentHorizon: 19.
2025-05-18 16:25:19.040 +05:30 [INF] Calculated investment amount: 81.66.
2025-05-18 16:25:19.043 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.52, TargetAmount: 20000, AnnualReturn: 7.3, InvestmentHorizon: 19.
2025-05-18 16:25:19.045 +05:30 [INF] Calculated investment amount: 79.7.
2025-05-18 16:25:19.047 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 20000, AnnualReturn: 10.2, InvestmentHorizon: 19.
2025-05-18 16:25:19.049 +05:30 [INF] Calculated investment amount: 70.45.
2025-05-18 16:25:19.051 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.15, TargetAmount: 20000, AnnualReturn: 9.8, InvestmentHorizon: 19.
2025-05-18 16:25:19.053 +05:30 [INF] Calculated investment amount: 72.78.
2025-05-18 16:25:19.056 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:25:19.058 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:19.061 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 148.1222ms
2025-05-18 16:25:19.062 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:25:19.065 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=20000&investmentHorizon=19 - 200 null application/json; charset=utf-8 161.6194ms
2025-05-18 16:25:19.075 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:25:19.082 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:25:19.088 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:19.091 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:19.092 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 16.2111ms
2025-05-18 16:25:19.092 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 9.5947ms
2025-05-18 16:25:19.095 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:25:19.101 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:25:19.105 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:19.110 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:19.111 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:25:19.112 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:25:19.113 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:25:19.114 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:25:19.119 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:19.120 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:25:19.123 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 6.3557ms
2025-05-18 16:25:19.125 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:25:19.127 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:25:19.128 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:19.130 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 34.9471ms
2025-05-18 16:25:19.133 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.2884ms
2025-05-18 16:25:19.142 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:25:19.144 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 42.9709ms
2025-05-18 16:25:43.532 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:25:43.540 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.547 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 14.914ms
2025-05-18 16:25:43.551 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 109
2025-05-18 16:25:43.555 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.556 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:25:43.557 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:25:43.559 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:25:43.561 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:25:43.562 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:25:43.565 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:25:43.567 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:25:43.571 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:25:43.572 +05:30 [INF] Looking up goal tuning for goal: Wealth Accumulation
2025-05-18 16:25:43.573 +05:30 [INF] Goal tuning found: {"equity_priority":true,"equity_boost":2,"equity_threshold":40}
2025-05-18 16:25:43.577 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:25:43.579 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:25:43.580 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:25:43.582 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:25:43.584 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:25:43.586 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:25:43.588 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:25:43.590 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:25:43.592 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:25:43.594 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:25:43.595 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:25:43.599 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:25:43.604 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:25:43.606 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:25:43.607 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 48.5342ms
2025-05-18 16:25:43.609 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:25:43.611 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 59.5439ms
2025-05-18 16:25:43.615 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=500000&investmentHorizon=12 - null null
2025-05-18 16:25:43.622 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.623 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=500000&investmentHorizon=12 - 204 null null 8.096ms
2025-05-18 16:25:43.627 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=500000&investmentHorizon=12 - application/json 477
2025-05-18 16:25:43.632 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.634 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:25:43.636 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:25:43.639 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:25:43.640 +05:30 [INF] Target Amount: 500000
2025-05-18 16:25:43.642 +05:30 [INF] Investment Horizon: 12
2025-05-18 16:25:43.643 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:25:43.645 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 500000, AnnualReturn: 10, InvestmentHorizon: 12.
2025-05-18 16:25:43.647 +05:30 [INF] Calculated investment amount: 16600.67.
2025-05-18 16:25:43.649 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 500000, AnnualReturn: 9.2, InvestmentHorizon: 12.
2025-05-18 16:25:43.653 +05:30 [INF] Calculated investment amount: 16659.57.
2025-05-18 16:25:43.655 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 500000, AnnualReturn: 12.5, InvestmentHorizon: 12.
2025-05-18 16:25:43.657 +05:30 [INF] Calculated investment amount: 9708.29.
2025-05-18 16:25:43.658 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 500000, AnnualReturn: 11, InvestmentHorizon: 12.
2025-05-18 16:25:43.659 +05:30 [INF] Calculated investment amount: 10033.01.
2025-05-18 16:25:43.660 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 500000, AnnualReturn: 14, InvestmentHorizon: 12.
2025-05-18 16:25:43.665 +05:30 [INF] Calculated investment amount: 8011.78.
2025-05-18 16:25:43.668 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 500000, AnnualReturn: 13.2, InvestmentHorizon: 12.
2025-05-18 16:25:43.671 +05:30 [INF] Calculated investment amount: 8221.37.
2025-05-18 16:25:43.672 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 500000, AnnualReturn: 5, InvestmentHorizon: 12.
2025-05-18 16:25:43.674 +05:30 [INF] Calculated investment amount: 12779.42.
2025-05-18 16:25:43.674 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 500000, AnnualReturn: 4.8, InvestmentHorizon: 12.
2025-05-18 16:25:43.676 +05:30 [INF] Calculated investment amount: 12562.42.
2025-05-18 16:25:43.678 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 500000, AnnualReturn: 6.8, InvestmentHorizon: 12.
2025-05-18 16:25:43.684 +05:30 [INF] Calculated investment amount: 13327.63.
2025-05-18 16:25:43.687 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 500000, AnnualReturn: 7.1, InvestmentHorizon: 12.
2025-05-18 16:25:43.689 +05:30 [INF] Calculated investment amount: 13457.27.
2025-05-18 16:25:43.690 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 500000, AnnualReturn: 5.5, InvestmentHorizon: 12.
2025-05-18 16:25:43.691 +05:30 [INF] Calculated investment amount: 11624.19.
2025-05-18 16:25:43.693 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 500000, AnnualReturn: 5.7, InvestmentHorizon: 12.
2025-05-18 16:25:43.696 +05:30 [INF] Calculated investment amount: 11774.31.
2025-05-18 16:25:43.698 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 500000, AnnualReturn: 7.8, InvestmentHorizon: 12.
2025-05-18 16:25:43.700 +05:30 [INF] Calculated investment amount: 4486.8.
2025-05-18 16:25:43.702 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 500000, AnnualReturn: 6.3, InvestmentHorizon: 12.
2025-05-18 16:25:43.705 +05:30 [INF] Calculated investment amount: 4299.56.
2025-05-18 16:25:43.706 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 500000, AnnualReturn: 9.2, InvestmentHorizon: 12.
2025-05-18 16:25:43.708 +05:30 [INF] Calculated investment amount: 2469.37.
2025-05-18 16:25:43.709 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 500000, AnnualReturn: 10.3, InvestmentHorizon: 12.
2025-05-18 16:25:43.711 +05:30 [INF] Calculated investment amount: 2436.24.
2025-05-18 16:25:43.714 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 500000, AnnualReturn: 8.5, InvestmentHorizon: 12.
2025-05-18 16:25:43.716 +05:30 [INF] Calculated investment amount: 3099.54.
2025-05-18 16:25:43.718 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 500000, AnnualReturn: 7, InvestmentHorizon: 12.
2025-05-18 16:25:43.720 +05:30 [INF] Calculated investment amount: 2997.08.
2025-05-18 16:25:43.721 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 500000, AnnualReturn: 5.2, InvestmentHorizon: 12.
2025-05-18 16:25:43.723 +05:30 [INF] Calculated investment amount: 2068.21.
2025-05-18 16:25:43.724 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 500000, AnnualReturn: 5, InvestmentHorizon: 12.
2025-05-18 16:25:43.726 +05:30 [INF] Calculated investment amount: 2060.3.
2025-05-18 16:25:43.728 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 500000, AnnualReturn: 3.5, InvestmentHorizon: 12.
2025-05-18 16:25:43.729 +05:30 [INF] Calculated investment amount: 2316.24.
2025-05-18 16:25:43.732 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 500000, AnnualReturn: 4, InvestmentHorizon: 12.
2025-05-18 16:25:43.734 +05:30 [INF] Calculated investment amount: 2498.39.
2025-05-18 16:25:43.735 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 500000, AnnualReturn: 5.1, InvestmentHorizon: 12.
2025-05-18 16:25:43.737 +05:30 [INF] Calculated investment amount: 2669.99.
2025-05-18 16:25:43.738 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 500000, AnnualReturn: 5.4, InvestmentHorizon: 12.
2025-05-18 16:25:43.740 +05:30 [INF] Calculated investment amount: 2739.81.
2025-05-18 16:25:43.741 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 500000, AnnualReturn: 8.9, InvestmentHorizon: 12.
2025-05-18 16:25:43.748 +05:30 [INF] Calculated investment amount: 1635.6.
2025-05-18 16:25:43.749 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 500000, AnnualReturn: 9.5, InvestmentHorizon: 12.
2025-05-18 16:25:43.751 +05:30 [INF] Calculated investment amount: 1632.2.
2025-05-18 16:25:43.752 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 500000, AnnualReturn: 6.7, InvestmentHorizon: 12.
2025-05-18 16:25:43.754 +05:30 [INF] Calculated investment amount: 1377.68.
2025-05-18 16:25:43.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 500000, AnnualReturn: 7.3, InvestmentHorizon: 12.
2025-05-18 16:25:43.757 +05:30 [INF] Calculated investment amount: 1395.36.
2025-05-18 16:25:43.758 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 500000, AnnualReturn: 10.2, InvestmentHorizon: 12.
2025-05-18 16:25:43.760 +05:30 [INF] Calculated investment amount: 1496.45.
2025-05-18 16:25:43.762 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 500000, AnnualReturn: 9.8, InvestmentHorizon: 12.
2025-05-18 16:25:43.766 +05:30 [INF] Calculated investment amount: 1498.06.
2025-05-18 16:25:43.771 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:25:43.773 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:43.776 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 138.2096ms
2025-05-18 16:25:43.778 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:25:43.779 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=500000&investmentHorizon=12 - 200 null application/json; charset=utf-8 152.2516ms
2025-05-18 16:25:43.787 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:25:43.787 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:25:43.791 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.794 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 7.8367ms
2025-05-18 16:25:43.799 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:25:43.793 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.803 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.805 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 18.2405ms
2025-05-18 16:25:43.814 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:25:43.809 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:25:43.818 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:25:43.819 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:25:43.820 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:25:43.825 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:25:43.825 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:43.827 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:25:43.831 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 8.5122ms
2025-05-18 16:25:43.833 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:25:43.834 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:25:43.836 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:25:43.838 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 38.9641ms
2025-05-18 16:25:43.840 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 13.3392ms
2025-05-18 16:25:43.846 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:25:43.848 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 33.7499ms
2025-05-18 16:26:46.486 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:26:46.489 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:26:46.490 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:46.492 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:46.493 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 6.6464ms
2025-05-18 16:26:46.494 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 5.5293ms
2025-05-18 16:26:46.498 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:26:46.500 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:26:46.505 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:46.508 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:46.509 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:26:46.508 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:26:46.512 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:26:46.513 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:26:46.518 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:26:46.518 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:26:46.519 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 2.7372ms
2025-05-18 16:26:46.520 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:26:46.520 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:26:46.521 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:26:46.521 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 20.9992ms
2025-05-18 16:26:46.522 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 4.5245ms
2025-05-18 16:26:46.526 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:26:46.528 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 29.5546ms
2025-05-18 16:26:50.320 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:26:50.322 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:26:50.324 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:50.330 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:50.337 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:26:50.336 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:26:50.339 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:26:50.340 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:26:50.346 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:26:50.352 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:26:50.353 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:26:50.355 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.6074ms
2025-05-18 16:26:50.355 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:26:50.357 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:26:50.361 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 14.7948ms
2025-05-18 16:26:50.362 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 42.3165ms
2025-05-18 16:26:50.364 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:26:50.370 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 48.2182ms
2025-05-18 16:26:52.847 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:26:52.852 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:52.854 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 7.2632ms
2025-05-18 16:26:52.862 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:26:52.868 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:26:52.869 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:26:52.871 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:26:52.877 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:26:52.883 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 8.4683ms
2025-05-18 16:26:52.885 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:26:52.886 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 23.8296ms
2025-05-18 16:27:04.287 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:04.289 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:04.290 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 2.3579ms
2025-05-18 16:27:04.294 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:04.296 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:04.297 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:04.298 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:04.301 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:04.302 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.2914ms
2025-05-18 16:27:04.304 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:04.305 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 10.9636ms
2025-05-18 16:27:11.964 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:11.966 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:11.967 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.167ms
2025-05-18 16:27:11.969 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:11.972 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:11.973 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:11.980 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:11.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:11.985 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.2715ms
2025-05-18 16:27:11.987 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:11.988 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 18.7437ms
2025-05-18 16:27:13.209 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:13.212 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:13.213 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:13.214 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:13.232 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:13.234 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 8.5596ms
2025-05-18 16:27:13.237 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:13.239 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 30.0963ms
2025-05-18 16:27:18.272 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:18.279 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:18.280 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 8.187ms
2025-05-18 16:27:18.283 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:18.286 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:18.288 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:18.289 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:18.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:18.298 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 4.2575ms
2025-05-18 16:27:18.300 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:18.301 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 17.8109ms
2025-05-18 16:27:23.288 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:23.290 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:23.291 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.0589ms
2025-05-18 16:27:23.295 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:23.297 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:23.298 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:23.301 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:23.305 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:23.307 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.0232ms
2025-05-18 16:27:23.309 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:23.310 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 15.2867ms
2025-05-18 16:27:25.250 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:25.252 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:25.253 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:25.253 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:25.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:25.258 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.2521ms
2025-05-18 16:27:25.260 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:25.261 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 11.7677ms
2025-05-18 16:27:31.269 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:31.271 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:31.272 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.0441ms
2025-05-18 16:27:31.275 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:31.277 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:31.279 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:31.280 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:31.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:31.284 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.6801ms
2025-05-18 16:27:31.285 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:31.286 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 11.5392ms
2025-05-18 16:27:36.251 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:36.253 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:36.255 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:36.259 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:36.264 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:36.267 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 5.1539ms
2025-05-18 16:27:36.270 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:36.271 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.7758ms
2025-05-18 16:27:39.249 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:39.251 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:39.252 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.1286ms
2025-05-18 16:27:39.254 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:39.258 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:39.260 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:39.261 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:39.263 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:39.265 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 2.3593ms
2025-05-18 16:27:39.266 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:39.267 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 12.9496ms
2025-05-18 16:27:43.237 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:43.242 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:43.247 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:43.249 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:43.252 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:43.253 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 1.9368ms
2025-05-18 16:27:43.254 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:43.255 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 18.0159ms
2025-05-18 16:27:49.295 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:49.304 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:49.306 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 11.0053ms
2025-05-18 16:27:49.312 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:49.317 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:49.321 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:49.322 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:49.332 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:49.336 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 4.9582ms
2025-05-18 16:27:49.337 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:49.338 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 25.6251ms
2025-05-18 16:27:54.266 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:54.269 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:54.271 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:54.272 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:54.277 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:54.279 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 3.3913ms
2025-05-18 16:27:54.283 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:54.286 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 19.1783ms
2025-05-18 16:27:57.252 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:57.255 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:57.256 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 4.0477ms
2025-05-18 16:27:57.260 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:27:57.262 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:27:57.263 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:57.264 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:27:57.271 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:27:57.276 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 9.3114ms
2025-05-18 16:27:57.281 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:27:57.283 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 23.0192ms
2025-05-18 16:28:01.131 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:01.136 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:01.136 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:01.138 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:28:01.142 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:28:01.148 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 7.4259ms
2025-05-18 16:28:01.151 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:01.152 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 20.7955ms
2025-05-18 16:28:08.222 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:08.224 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:08.225 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 2.8784ms
2025-05-18 16:28:08.227 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:08.229 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:08.230 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:08.230 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:28:08.232 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:28:08.233 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 1.7736ms
2025-05-18 16:28:08.238 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:08.241 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 13.8507ms
2025-05-18 16:28:48.727 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:48.729 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:48.730 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 3.0619ms
2025-05-18 16:28:48.732 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:48.734 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:48.739 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:48.747 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:28:48.750 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:28:48.765 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 16.5544ms
2025-05-18 16:28:48.777 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:48.778 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 46.584ms
2025-05-18 16:28:49.962 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:28:49.965 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:28:49.966 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:49.967 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:28:49.970 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:28:49.979 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 10.349ms
2025-05-18 16:28:49.984 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:28:49.986 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 23.9804ms
2025-05-18 16:29:08.032 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:29:08.035 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.035 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 3.275ms
2025-05-18 16:29:08.040 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-18 16:29:08.043 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.045 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:29:08.046 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:29:08.050 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:29:08.051 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:29:08.052 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:29:08.053 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:29:08.056 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:29:08.058 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:29:08.058 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-18 16:29:08.059 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-18 16:29:08.061 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:29:08.064 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:29:08.066 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:29:08.068 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:29:08.073 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:29:08.074 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:29:08.077 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:29:08.081 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:29:08.083 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:29:08.086 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:29:08.088 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:29:08.093 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:29:08.095 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:29:08.097 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:29:08.099 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 49.4891ms
2025-05-18 16:29:08.101 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:29:08.104 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 64.0509ms
2025-05-18 16:29:08.112 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - null null
2025-05-18 16:29:08.115 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.117 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 204 null null 5.0266ms
2025-05-18 16:29:08.122 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - application/json 477
2025-05-18 16:29:08.125 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.127 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:29:08.128 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:29:08.132 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:29:08.133 +05:30 [INF] Target Amount: 50000
2025-05-18 16:29:08.135 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:29:08.137 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:29:08.140 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:29:08.143 +05:30 [INF] Calculated investment amount: 2008.68.
2025-05-18 16:29:08.144 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:29:08.146 +05:30 [INF] Calculated investment amount: 1986.59.
2025-05-18 16:29:08.147 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:29:08.150 +05:30 [INF] Calculated investment amount: 1228.71.
2025-05-18 16:29:08.152 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:29:08.155 +05:30 [INF] Calculated investment amount: 1236.17.
2025-05-18 16:29:08.156 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:29:08.159 +05:30 [INF] Calculated investment amount: 1041.21.
2025-05-18 16:29:08.160 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:29:08.163 +05:30 [INF] Calculated investment amount: 1053.51.
2025-05-18 16:29:08.164 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:29:08.171 +05:30 [INF] Calculated investment amount: 1408.93.
2025-05-18 16:29:08.174 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 50000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:29:08.177 +05:30 [INF] Calculated investment amount: 1379.74.
2025-05-18 16:29:08.179 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 50000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:29:08.181 +05:30 [INF] Calculated investment amount: 1520.18.
2025-05-18 16:29:08.183 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 50000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:29:08.185 +05:30 [INF] Calculated investment amount: 1543.6.
2025-05-18 16:29:08.186 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 50000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:29:08.189 +05:30 [INF] Calculated investment amount: 1293.8.
2025-05-18 16:29:08.190 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 50000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:29:08.194 +05:30 [INF] Calculated investment amount: 1315.48.
2025-05-18 16:29:08.196 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 50000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:29:08.198 +05:30 [INF] Calculated investment amount: 521.4.
2025-05-18 16:29:08.199 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 50000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:29:08.200 +05:30 [INF] Calculated investment amount: 485.84.
2025-05-18 16:29:08.202 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:29:08.204 +05:30 [INF] Calculated investment amount: 294.46.
2025-05-18 16:29:08.206 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 50000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:29:08.208 +05:30 [INF] Calculated investment amount: 296.4.
2025-05-18 16:29:08.210 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 50000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:29:08.212 +05:30 [INF] Calculated investment amount: 364.89.
2025-05-18 16:29:08.213 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 50000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:29:08.215 +05:30 [INF] Calculated investment amount: 343.14.
2025-05-18 16:29:08.217 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 50000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:29:08.219 +05:30 [INF] Calculated investment amount: 228.89.
2025-05-18 16:29:08.220 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:29:08.223 +05:30 [INF] Calculated investment amount: 227.15.
2025-05-18 16:29:08.224 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 50000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:29:08.228 +05:30 [INF] Calculated investment amount: 248.12.
2025-05-18 16:29:08.229 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 50000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:29:08.231 +05:30 [INF] Calculated investment amount: 270.23.
2025-05-18 16:29:08.233 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 50000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:29:08.234 +05:30 [INF] Calculated investment amount: 294.93.
2025-05-18 16:29:08.236 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 50000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:29:08.238 +05:30 [INF] Calculated investment amount: 304.37.
2025-05-18 16:29:08.239 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 50000, AnnualReturn: 8.9, InvestmentHorizon: 10.
2025-05-18 16:29:08.242 +05:30 [INF] Calculated investment amount: 193.97.
2025-05-18 16:29:08.245 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 50000, AnnualReturn: 9.5, InvestmentHorizon: 10.
2025-05-18 16:29:08.248 +05:30 [INF] Calculated investment amount: 195.7.
2025-05-18 16:29:08.249 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 50000, AnnualReturn: 6.7, InvestmentHorizon: 10.
2025-05-18 16:29:08.251 +05:30 [INF] Calculated investment amount: 156.85.
2025-05-18 16:29:08.253 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 50000, AnnualReturn: 7.3, InvestmentHorizon: 10.
2025-05-18 16:29:08.256 +05:30 [INF] Calculated investment amount: 160.65.
2025-05-18 16:29:08.259 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 50000, AnnualReturn: 10.2, InvestmentHorizon: 10.
2025-05-18 16:29:08.262 +05:30 [INF] Calculated investment amount: 181.73.
2025-05-18 16:29:08.263 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 50000, AnnualReturn: 9.8, InvestmentHorizon: 10.
2025-05-18 16:29:08.265 +05:30 [INF] Calculated investment amount: 180.61.
2025-05-18 16:29:08.269 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:29:08.275 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:29:08.281 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 149.9955ms
2025-05-18 16:29:08.283 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:29:08.285 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 200 null application/json; charset=utf-8 163.3503ms
2025-05-18 16:29:08.302 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:29:08.302 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:29:08.310 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.312 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.313 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 11.5975ms
2025-05-18 16:29:08.314 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.7055ms
2025-05-18 16:29:08.319 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:29:08.325 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:29:08.328 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.332 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:08.333 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:29:08.334 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:29:08.335 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:29:08.338 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:29:08.343 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:29:08.345 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:29:08.347 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 5.6135ms
2025-05-18 16:29:08.349 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:29:08.350 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:29:08.352 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:29:08.354 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 34.7477ms
2025-05-18 16:29:08.356 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.7246ms
2025-05-18 16:29:08.361 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:29:08.363 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 38.4643ms
2025-05-18 16:29:57.954 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:29:57.960 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:57.963 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 9.15ms
2025-05-18 16:29:57.969 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:29:57.974 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:29:57.977 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:29:57.979 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:29:57.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:29:57.989 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 6.6988ms
2025-05-18 16:29:57.993 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:29:57.996 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 27.6273ms
2025-05-18 16:30:00.180 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:30:00.190 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:00.191 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:30:00.192 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:30:00.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:30:00.199 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 5.3773ms
2025-05-18 16:30:00.204 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:30:00.209 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 28.1098ms
2025-05-18 16:30:15.526 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:30:15.532 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.533 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.19ms
2025-05-18 16:30:15.537 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 101
2025-05-18 16:30:15.543 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.544 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:30:15.547 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:30:15.559 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:30:15.561 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:30:15.562 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:30:15.563 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:30:15.565 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:30:15.566 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:30:15.567 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-18 16:30:15.569 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-18 16:30:15.573 +05:30 [INF] Sub-allocations for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 16:30:15.575 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:30:15.576 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 16:30:15.578 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 16:30:15.580 +05:30 [INF] Sub-allocations for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 16:30:15.581 +05:30 [INF] Added sub-assets for equity: {"Large Cap":12,"Mid Cap":9,"Small Cap":9}
2025-05-18 16:30:15.582 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:30:15.584 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":6.67,"Energy":5,"Agriculture":5}
2025-05-18 16:30:15.586 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}
2025-05-18 16:30:15.589 +05:30 [INF] Added sub-assets for realEstate: {"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}
2025-05-18 16:30:15.592 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 16:30:15.596 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:30:15.598 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":16.67,"subAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"percentage":11.67,"subAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"percentage":11.67,"subAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}
2025-05-18 16:30:15.599 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:30:15.601 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 41.7537ms
2025-05-18 16:30:15.604 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:30:15.606 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 69.4264ms
2025-05-18 16:30:15.612 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=20 - null null
2025-05-18 16:30:15.615 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.616 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=20 - 204 null null 4.4193ms
2025-05-18 16:30:15.621 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=20 - application/json 492
2025-05-18 16:30:15.625 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.626 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:30:15.629 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:30:15.632 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":12,"Mid Cap":9,"Small Cap":9}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":16.67,"SubAssets":{"Precious Metals":6.67,"Energy":5,"Agriculture":5}},"cash":{"Percentage":11.67,"SubAssets":{"Liquid Mutual Funds":3.5,"Savings Acc":3.5,"T. Bill":4.67}},"realEstate":{"Percentage":11.67,"SubAssets":{"REITs":4.38,"Residential Prop":2.92,"Commercial Prop":4.38}}}}
2025-05-18 16:30:15.635 +05:30 [INF] Target Amount: 50000
2025-05-18 16:30:15.637 +05:30 [INF] Investment Horizon: 20
2025-05-18 16:30:15.638 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:30:15.641 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.25, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 20.
2025-05-18 16:30:15.643 +05:30 [INF] Calculated investment amount: 464.51.
2025-05-18 16:30:15.644 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.75, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:30:15.647 +05:30 [INF] Calculated investment amount: 494.52.
2025-05-18 16:30:15.651 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.79, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 20.
2025-05-18 16:30:15.653 +05:30 [INF] Calculated investment amount: 227.12.
2025-05-18 16:30:15.654 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.21, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 20.
2025-05-18 16:30:15.659 +05:30 [INF] Calculated investment amount: 261.09.
2025-05-18 16:30:15.660 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.63, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 20.
2025-05-18 16:30:15.662 +05:30 [INF] Calculated investment amount: 168.44.
2025-05-18 16:30:15.664 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.37, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 20.
2025-05-18 16:30:15.666 +05:30 [INF] Calculated investment amount: 183.03.
2025-05-18 16:30:15.667 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:30:15.669 +05:30 [INF] Calculated investment amount: 864.96.
2025-05-18 16:30:15.671 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 50000, AnnualReturn: 4.8, InvestmentHorizon: 20.
2025-05-18 16:30:15.673 +05:30 [INF] Calculated investment amount: 863.34.
2025-05-18 16:30:15.674 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 50000, AnnualReturn: 6.8, InvestmentHorizon: 20.
2025-05-18 16:30:15.676 +05:30 [INF] Calculated investment amount: 787.38.
2025-05-18 16:30:15.678 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 50000, AnnualReturn: 7.1, InvestmentHorizon: 20.
2025-05-18 16:30:15.680 +05:30 [INF] Calculated investment amount: 777.39.
2025-05-18 16:30:15.681 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 50000, AnnualReturn: 5.5, InvestmentHorizon: 20.
2025-05-18 16:30:15.685 +05:30 [INF] Calculated investment amount: 757.43.
2025-05-18 16:30:15.691 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 50000, AnnualReturn: 5.7, InvestmentHorizon: 20.
2025-05-18 16:30:15.693 +05:30 [INF] Calculated investment amount: 755.68.
2025-05-18 16:30:15.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.69, TargetAmount: 50000, AnnualReturn: 7.8, InvestmentHorizon: 20.
2025-05-18 16:30:15.697 +05:30 [INF] Calculated investment amount: 410.79.
2025-05-18 16:30:15.698 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.98, TargetAmount: 50000, AnnualReturn: 6.3, InvestmentHorizon: 20.
2025-05-18 16:30:15.701 +05:30 [INF] Calculated investment amount: 439.06.
2025-05-18 16:30:15.705 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.36, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 20.
2025-05-18 16:30:15.707 +05:30 [INF] Calculated investment amount: 202.97.
2025-05-18 16:30:15.710 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.64, TargetAmount: 50000, AnnualReturn: 10.3, InvestmentHorizon: 20.
2025-05-18 16:30:15.712 +05:30 [INF] Calculated investment amount: 185.81.
2025-05-18 16:30:15.714 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.74, TargetAmount: 50000, AnnualReturn: 8.5, InvestmentHorizon: 20.
2025-05-18 16:30:15.715 +05:30 [INF] Calculated investment amount: 267.99.
2025-05-18 16:30:15.720 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 50000, AnnualReturn: 7, InvestmentHorizon: 20.
2025-05-18 16:30:15.725 +05:30 [INF] Calculated investment amount: 292.01.
2025-05-18 16:30:15.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.78, TargetAmount: 50000, AnnualReturn: 5.2, InvestmentHorizon: 20.
2025-05-18 16:30:15.729 +05:30 [INF] Calculated investment amount: 322.91.
2025-05-18 16:30:15.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.72, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 20.
2025-05-18 16:30:15.731 +05:30 [INF] Calculated investment amount: 324.12.
2025-05-18 16:30:15.734 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.63, TargetAmount: 50000, AnnualReturn: 3.5, InvestmentHorizon: 20.
2025-05-18 16:30:15.737 +05:30 [INF] Calculated investment amount: 409.59.
2025-05-18 16:30:15.738 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.87, TargetAmount: 50000, AnnualReturn: 4, InvestmentHorizon: 20.
2025-05-18 16:30:15.740 +05:30 [INF] Calculated investment amount: 426.72.
2025-05-18 16:30:15.742 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.27, TargetAmount: 50000, AnnualReturn: 5.1, InvestmentHorizon: 20.
2025-05-18 16:30:15.745 +05:30 [INF] Calculated investment amount: 419.7.
2025-05-18 16:30:15.746 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.4, TargetAmount: 50000, AnnualReturn: 5.4, InvestmentHorizon: 20.
2025-05-18 16:30:15.748 +05:30 [INF] Calculated investment amount: 419.15.
2025-05-18 16:30:15.751 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.12, TargetAmount: 50000, AnnualReturn: 8.9, InvestmentHorizon: 20.
2025-05-18 16:30:15.756 +05:30 [INF] Calculated investment amount: 192.64.
2025-05-18 16:30:15.759 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.26, TargetAmount: 50000, AnnualReturn: 9.5, InvestmentHorizon: 20.
2025-05-18 16:30:15.761 +05:30 [INF] Calculated investment amount: 183.99.
2025-05-18 16:30:15.762 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.4, TargetAmount: 50000, AnnualReturn: 6.7, InvestmentHorizon: 20.
2025-05-18 16:30:15.765 +05:30 [INF] Calculated investment amount: 191.34.
2025-05-18 16:30:15.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.52, TargetAmount: 50000, AnnualReturn: 7.3, InvestmentHorizon: 20.
2025-05-18 16:30:15.769 +05:30 [INF] Calculated investment amount: 185.7.
2025-05-18 16:30:15.770 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.23, TargetAmount: 50000, AnnualReturn: 10.2, InvestmentHorizon: 20.
2025-05-18 16:30:15.773 +05:30 [INF] Calculated investment amount: 159.82.
2025-05-18 16:30:15.775 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.15, TargetAmount: 50000, AnnualReturn: 9.8, InvestmentHorizon: 20.
2025-05-18 16:30:15.776 +05:30 [INF] Calculated investment amount: 165.71.
2025-05-18 16:30:15.780 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:30:15.788 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:15.790 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 158.3293ms
2025-05-18 16:30:15.792 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:30:15.794 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=20 - 200 null application/json; charset=utf-8 172.5794ms
2025-05-18 16:30:15.806 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:30:15.807 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:30:15.808 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.814 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.815 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 8.7405ms
2025-05-18 16:30:15.816 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 8.6594ms
2025-05-18 16:30:15.822 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:30:15.841 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:30:15.844 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.846 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:15.846 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:30:15.848 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:30:15.849 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:30:15.851 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:30:15.856 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:30:15.860 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:15.861 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:30:15.864 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 4.8255ms
2025-05-18 16:30:15.864 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:15.866 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:30:15.868 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 11.6569ms
2025-05-18 16:30:15.874 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:30:15.871 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 29.8776ms
2025-05-18 16:30:15.876 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 53.7457ms
2025-05-18 16:30:55.544 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:30:55.546 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.549 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 5.2341ms
2025-05-18 16:30:55.553 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 99
2025-05-18 16:30:55.555 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.557 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:30:55.560 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:30:55.562 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:30:55.564 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:30:55.565 +05:30 [INF] Looking up base allocation for key: High+Long
2025-05-18 16:30:55.566 +05:30 [INF] Base allocation found: {"equity":70,"fixedIncome":15,"commodities":10,"cash":0,"realEstate":5}
2025-05-18 16:30:55.571 +05:30 [INF] Looking up age adjustment rules for key: 45-60
2025-05-18 16:30:55.573 +05:30 [INF] Age adjustments found: {"equity":-10,"fixedIncome":10}
2025-05-18 16:30:55.575 +05:30 [INF] Looking up goal tuning for goal: Big Purchase
2025-05-18 16:30:55.577 +05:30 [INF] Goal tuning found: {"balanced":true}
2025-05-18 16:30:55.579 +05:30 [INF] Sub-allocations for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-18 16:30:55.583 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":5.42,"Corp Bonds":21.67,"Fixed Dep":5.42}
2025-05-18 16:30:55.586 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":2.92,"Energy":7.29,"Agriculture":7.29}
2025-05-18 16:30:55.587 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":3.75,"Savings Acc":1.88,"T. Bill":1.88}
2025-05-18 16:30:55.589 +05:30 [INF] Sub-allocations for realEstate: {"REITs":2.78,"Residential Prop":2.78,"Commercial Prop":6.94}
2025-05-18 16:30:55.592 +05:30 [INF] Added sub-assets for equity: {"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}
2025-05-18 16:30:55.593 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":5.42,"Corp Bonds":21.67,"Fixed Dep":5.42}
2025-05-18 16:30:55.595 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":2.92,"Energy":7.29,"Agriculture":7.29}
2025-05-18 16:30:55.597 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":3.75,"Savings Acc":1.88,"T. Bill":1.88}
2025-05-18 16:30:55.600 +05:30 [INF] Added sub-assets for realEstate: {"REITs":2.78,"Residential Prop":2.78,"Commercial Prop":6.94}
2025-05-18 16:30:55.602 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":5.42,"Corp Bonds":21.67,"Fixed Dep":5.42}},"commodities":{"percentage":17.5,"subAssets":{"Precious Metals":2.92,"Energy":7.29,"Agriculture":7.29}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":3.75,"Savings Acc":1.88,"T. Bill":1.88}},"realEstate":{"percentage":12.5,"subAssets":{"REITs":2.78,"Residential Prop":2.78,"Commercial Prop":6.94}}}
2025-05-18 16:30:55.607 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:30:55.609 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":30,"subAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"percentage":32.5,"subAssets":{"Gov Bonds":5.42,"Corp Bonds":21.67,"Fixed Dep":5.42}},"commodities":{"percentage":17.5,"subAssets":{"Precious Metals":2.92,"Energy":7.29,"Agriculture":7.29}},"cash":{"percentage":7.5,"subAssets":{"Liquid Mutual Funds":3.75,"Savings Acc":1.88,"T. Bill":1.88}},"realEstate":{"percentage":12.5,"subAssets":{"REITs":2.78,"Residential Prop":2.78,"Commercial Prop":6.94}}}
2025-05-18 16:30:55.611 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:30:55.613 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 50.8974ms
2025-05-18 16:30:55.616 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:30:55.617 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 64.3991ms
2025-05-18 16:30:55.621 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - null null
2025-05-18 16:30:55.627 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.628 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 204 null null 6.9353ms
2025-05-18 16:30:55.636 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - application/json 512
2025-05-18 16:30:55.641 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.642 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:30:55.643 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:30:55.647 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":30,"SubAssets":{"Large Cap":7.5,"Mid Cap":10,"Small Cap":12.5}},"fixedIncome":{"Percentage":32.5,"SubAssets":{"Gov Bonds":5.42,"Corp Bonds":21.67,"Fixed Dep":5.42}},"commodities":{"Percentage":17.5,"SubAssets":{"Precious Metals":2.92,"Energy":7.29,"Agriculture":7.29}},"cash":{"Percentage":7.5,"SubAssets":{"Liquid Mutual Funds":3.75,"Savings Acc":1.88,"T. Bill":1.88}},"realEstate":{"Percentage":12.5,"SubAssets":{"REITs":2.78,"Residential Prop":2.78,"Commercial Prop":6.94}}}}
2025-05-18 16:30:55.648 +05:30 [INF] Target Amount: 50000
2025-05-18 16:30:55.650 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:30:55.652 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:30:55.654 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.91, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:30:55.657 +05:30 [INF] Calculated investment amount: 753.74.
2025-05-18 16:30:55.659 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.59, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:30:55.661 +05:30 [INF] Calculated investment amount: 744.45.
2025-05-18 16:30:55.663 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.32, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:30:55.666 +05:30 [INF] Calculated investment amount: 819.14.
2025-05-18 16:30:55.667 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.68, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:30:55.669 +05:30 [INF] Calculated investment amount: 824.11.
2025-05-18 16:30:55.671 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.43, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:30:55.673 +05:30 [INF] Calculated investment amount: 867.23.
2025-05-18 16:30:55.675 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.07, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:30:55.679 +05:30 [INF] Calculated investment amount: 878.4.
2025-05-18 16:30:55.681 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.77, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:30:55.686 +05:30 [INF] Calculated investment amount: 850.27.
2025-05-18 16:30:55.690 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.65, TargetAmount: 50000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:30:55.692 +05:30 [INF] Calculated investment amount: 829.09.
2025-05-18 16:30:55.695 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.6, TargetAmount: 50000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:30:55.697 +05:30 [INF] Calculated investment amount: 2745.13.
2025-05-18 16:30:55.700 +05:30 [INF] Calculating investment amount with PercentageSplit: 11.07, TargetAmount: 50000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:30:55.704 +05:30 [INF] Calculated investment amount: 2787.55.
2025-05-18 16:30:55.706 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.66, TargetAmount: 50000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:30:55.709 +05:30 [INF] Calculated investment amount: 778.62.
2025-05-18 16:30:55.711 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.76, TargetAmount: 50000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:30:55.713 +05:30 [INF] Calculated investment amount: 792.74.
2025-05-18 16:30:55.714 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.62, TargetAmount: 50000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:30:55.718 +05:30 [INF] Calculated investment amount: 382.21.
2025-05-18 16:30:55.720 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.3, TargetAmount: 50000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:30:55.722 +05:30 [INF] Calculated investment amount: 352.84.
2025-05-18 16:30:55.724 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.44, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:30:55.726 +05:30 [INF] Calculated investment amount: 713.35.
2025-05-18 16:30:55.727 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.85, TargetAmount: 50000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:30:55.729 +05:30 [INF] Calculated investment amount: 722.23.
2025-05-18 16:30:55.731 +05:30 [INF] Calculating investment amount with PercentageSplit: 4, TargetAmount: 50000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:30:55.733 +05:30 [INF] Calculated investment amount: 884.57.
2025-05-18 16:30:55.735 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.29, TargetAmount: 50000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:30:55.739 +05:30 [INF] Calculated investment amount: 836.23.
2025-05-18 16:30:55.740 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.91, TargetAmount: 50000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:30:55.743 +05:30 [INF] Calculated investment amount: 575.24.
2025-05-18 16:30:55.745 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.84, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:30:55.747 +05:30 [INF] Calculated investment amount: 564.8.
2025-05-18 16:30:55.751 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.88, TargetAmount: 50000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:30:55.755 +05:30 [INF] Calculated investment amount: 311.92.
2025-05-18 16:30:55.757 +05:30 [INF] Calculating investment amount with PercentageSplit: 1, TargetAmount: 50000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:30:55.758 +05:30 [INF] Calculated investment amount: 337.78.
2025-05-18 16:30:55.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 50000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:30:55.762 +05:30 [INF] Calculated investment amount: 276.68.
2025-05-18 16:30:55.764 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 50000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:30:55.765 +05:30 [INF] Calculated investment amount: 286.64.
2025-05-18 16:30:55.766 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.34, TargetAmount: 50000, AnnualReturn: 8.9, InvestmentHorizon: 10.
2025-05-18 16:30:55.769 +05:30 [INF] Calculated investment amount: 285.62.
2025-05-18 16:30:55.772 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.44, TargetAmount: 50000, AnnualReturn: 9.5, InvestmentHorizon: 10.
2025-05-18 16:30:55.775 +05:30 [INF] Calculated investment amount: 290.53.
2025-05-18 16:30:55.776 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.33, TargetAmount: 50000, AnnualReturn: 6.7, InvestmentHorizon: 10.
2025-05-18 16:30:55.779 +05:30 [INF] Calculated investment amount: 347.68.
2025-05-18 16:30:55.780 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.45, TargetAmount: 50000, AnnualReturn: 7.3, InvestmentHorizon: 10.
2025-05-18 16:30:55.783 +05:30 [INF] Calculated investment amount: 358.38.
2025-05-18 16:30:55.787 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.54, TargetAmount: 50000, AnnualReturn: 10.2, InvestmentHorizon: 10.
2025-05-18 16:30:55.790 +05:30 [INF] Calculated investment amount: 670.13.
2025-05-18 16:30:55.791 +05:30 [INF] Calculating investment amount with PercentageSplit: 3.4, TargetAmount: 50000, AnnualReturn: 9.8, InvestmentHorizon: 10.
2025-05-18 16:30:55.793 +05:30 [INF] Calculated investment amount: 667.46.
2025-05-18 16:30:55.797 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:30:55.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:55.805 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 158.5074ms
2025-05-18 16:30:55.807 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:30:55.808 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 200 null application/json; charset=utf-8 172.5433ms
2025-05-18 16:30:55.816 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:30:55.817 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:30:55.823 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.826 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.826 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 10.7723ms
2025-05-18 16:30:55.827 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 10.2305ms
2025-05-18 16:30:55.830 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:30:55.835 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:30:55.840 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.843 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:30:55.843 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:30:55.844 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:30:55.846 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:30:55.847 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:30:55.850 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:30:55.854 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:55.855 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:30:55.859 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 6.366ms
2025-05-18 16:30:55.859 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:30:55.861 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:30:55.863 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.8142ms
2025-05-18 16:30:55.864 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 28.953ms
2025-05-18 16:30:55.866 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:30:55.871 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 40.6764ms
2025-05-18 16:34:49.410 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - null null
2025-05-18 16:34:49.416 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:49.418 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Auth/register - 204 null null 7.7665ms
2025-05-18 16:34:49.427 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Auth/register - application/json 93
2025-05-18 16:34:49.432 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:49.434 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:34:49.436 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Register(UserRegisterRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:34:49.654 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:34:49.656 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Register (WisVest) in 216.8728ms
2025-05-18 16:34:49.657 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Register (WisVest)'
2025-05-18 16:34:49.658 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Auth/register - 200 null application/json; charset=utf-8 230.9253ms
2025-05-18 16:34:53.754 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - null null
2025-05-18 16:34:53.766 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:53.768 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/auth/login - 204 null null 14.0275ms
2025-05-18 16:34:53.775 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/auth/login - application/json 52
2025-05-18 16:34:53.779 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:53.781 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:34:53.785 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Login(LoginRequest) on controller WisVestAPI.Controllers.AuthController (WisVest).
2025-05-18 16:34:54.015 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:34:54.017 +05:30 [INF] Executed action WisVestAPI.Controllers.AuthController.Login (WisVest) in 221.6035ms
2025-05-18 16:34:54.018 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AuthController.Login (WisVest)'
2025-05-18 16:34:54.020 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/auth/login - 200 null application/json; charset=utf-8 244.6158ms
2025-05-18 16:34:57.048 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - null null
2025-05-18 16:34:57.052 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:57.062 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Products/products - 204 null null 14.5825ms
2025-05-18 16:34:57.074 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Products/products - null null
2025-05-18 16:34:57.081 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:34:57.082 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:34:57.084 +05:30 [INF] Route matched with {action = "LoadProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoadProducts() on controller WisVestAPI.Controllers.ProductsController (WisVest).
2025-05-18 16:34:57.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[WisVestAPI.Models.DTOs.ProductDTO, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-18 16:34:57.153 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest) in 65.3379ms
2025-05-18 16:34:57.216 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductsController.LoadProducts (WisVest)'
2025-05-18 16:34:57.217 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Products/products - 200 null application/json; charset=utf-8 143.198ms
2025-05-18 16:35:24.561 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - null null
2025-05-18 16:35:24.568 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.569 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/compute - 204 null null 7.6128ms
2025-05-18 16:35:24.577 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - application/json 106
2025-05-18 16:35:24.581 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.585 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:35:24.592 +05:30 [INF] Route matched with {action = "GetAllocation", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WisVestAPI.Models.DTOs.AllocationResultDTO]] GetAllocation(WisVestAPI.Models.DTOs.UserInputDTO) on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:35:24.596 +05:30 [INF] Starting allocation calculation...
2025-05-18 16:35:24.598 +05:30 [INF] Allocation matrix loaded successfully.
2025-05-18 16:35:24.599 +05:30 [INF] Looking up base allocation for key: Mid+Long
2025-05-18 16:35:24.600 +05:30 [INF] Base allocation found: {"equity":50,"fixedIncome":30,"commodities":10,"cash":5,"realEstate":5}
2025-05-18 16:35:24.601 +05:30 [INF] Looking up age adjustment rules for key: 30-45
2025-05-18 16:35:24.603 +05:30 [INF] Age adjustments found: {}
2025-05-18 16:35:24.605 +05:30 [INF] Looking up goal tuning for goal: Child's Education
2025-05-18 16:35:24.607 +05:30 [WRN] No goal tuning found for goal: Child's Education
2025-05-18 16:35:24.610 +05:30 [INF] Sub-allocations for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:35:24.612 +05:30 [INF] Sub-allocations for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:35:24.619 +05:30 [INF] Sub-allocations for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:35:24.622 +05:30 [INF] Sub-allocations for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:35:24.624 +05:30 [INF] Sub-allocations for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:35:24.626 +05:30 [INF] Added sub-assets for equity: {"Large Cap":20,"Mid Cap":15,"Small Cap":15}
2025-05-18 16:35:24.628 +05:30 [INF] Added sub-assets for fixedIncome: {"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}
2025-05-18 16:35:24.630 +05:30 [INF] Added sub-assets for commodities: {"Precious Metals":4,"Energy":3,"Agriculture":3}
2025-05-18 16:35:24.632 +05:30 [INF] Added sub-assets for cash: {"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}
2025-05-18 16:35:24.633 +05:30 [INF] Added sub-assets for realEstate: {"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}
2025-05-18 16:35:24.636 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:35:24.644 +05:30 [INF] Final allocation saved successfully to FinalAllocation.json
2025-05-18 16:35:24.646 +05:30 [INF] Final formatted allocation: {"equity":{"percentage":50,"subAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"percentage":30,"subAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"percentage":10,"subAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"percentage":5,"subAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"percentage":5,"subAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}
2025-05-18 16:35:24.648 +05:30 [INF] Executing OkObjectResult, writing value of type 'WisVestAPI.Models.DTOs.AllocationResultDTO'.
2025-05-18 16:35:24.650 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest) in 54.5316ms
2025-05-18 16:35:24.652 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetAllocation (WisVest)'
2025-05-18 16:35:24.653 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/Allocation/compute - 200 null application/json; charset=utf-8 76.6698ms
2025-05-18 16:35:24.658 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - null null
2025-05-18 16:35:24.662 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.663 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 204 null null 5.1692ms
2025-05-18 16:35:24.667 +05:30 [INF] Request starting HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - application/json 477
2025-05-18 16:35:24.674 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.675 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:35:24.677 +05:30 [INF] Route matched with {action = "CalculateProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CalculateProductAllocations(WisVestAPI.Models.DTOs.AllocationResultDTO, Double, Int32) on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:35:24.681 +05:30 [INF] Sub-allocation Data Received: {"Assets":{"equity":{"Percentage":50,"SubAssets":{"Large Cap":20,"Mid Cap":15,"Small Cap":15}},"fixedIncome":{"Percentage":30,"SubAssets":{"Gov Bonds":9,"Corp Bonds":12,"Fixed Dep":9}},"commodities":{"Percentage":10,"SubAssets":{"Precious Metals":4,"Energy":3,"Agriculture":3}},"cash":{"Percentage":5,"SubAssets":{"Liquid Mutual Funds":1.5,"Savings Acc":1.5,"T. Bill":2}},"realEstate":{"Percentage":5,"SubAssets":{"REITs":1.88,"Residential Prop":1.25,"Commercial Prop":1.88}}}}
2025-05-18 16:35:24.682 +05:30 [INF] Target Amount: 50000
2025-05-18 16:35:24.683 +05:30 [INF] Investment Horizon: 10
2025-05-18 16:35:24.685 +05:30 [INF] Starting product allocation calculation.
2025-05-18 16:35:24.688 +05:30 [INF] Calculating investment amount with PercentageSplit: 10.42, TargetAmount: 50000, AnnualReturn: 10, InvestmentHorizon: 10.
2025-05-18 16:35:24.691 +05:30 [INF] Calculated investment amount: 2008.68.
2025-05-18 16:35:24.693 +05:30 [INF] Calculating investment amount with PercentageSplit: 9.58, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:35:24.695 +05:30 [INF] Calculated investment amount: 1986.59.
2025-05-18 16:35:24.696 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.98, TargetAmount: 50000, AnnualReturn: 12.5, InvestmentHorizon: 10.
2025-05-18 16:35:24.699 +05:30 [INF] Calculated investment amount: 1228.71.
2025-05-18 16:35:24.700 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.02, TargetAmount: 50000, AnnualReturn: 11, InvestmentHorizon: 10.
2025-05-18 16:35:24.702 +05:30 [INF] Calculated investment amount: 1236.17.
2025-05-18 16:35:24.703 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.72, TargetAmount: 50000, AnnualReturn: 14, InvestmentHorizon: 10.
2025-05-18 16:35:24.707 +05:30 [INF] Calculated investment amount: 1041.21.
2025-05-18 16:35:24.709 +05:30 [INF] Calculating investment amount with PercentageSplit: 7.28, TargetAmount: 50000, AnnualReturn: 13.2, InvestmentHorizon: 10.
2025-05-18 16:35:24.711 +05:30 [INF] Calculated investment amount: 1053.51.
2025-05-18 16:35:24.715 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.59, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:35:24.719 +05:30 [INF] Calculated investment amount: 1408.93.
2025-05-18 16:35:24.723 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.41, TargetAmount: 50000, AnnualReturn: 4.8, InvestmentHorizon: 10.
2025-05-18 16:35:24.728 +05:30 [INF] Calculated investment amount: 1379.74.
2025-05-18 16:35:24.730 +05:30 [INF] Calculating investment amount with PercentageSplit: 5.87, TargetAmount: 50000, AnnualReturn: 6.8, InvestmentHorizon: 10.
2025-05-18 16:35:24.732 +05:30 [INF] Calculated investment amount: 1520.18.
2025-05-18 16:35:24.733 +05:30 [INF] Calculating investment amount with PercentageSplit: 6.13, TargetAmount: 50000, AnnualReturn: 7.1, InvestmentHorizon: 10.
2025-05-18 16:35:24.736 +05:30 [INF] Calculated investment amount: 1543.6.
2025-05-18 16:35:24.743 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.42, TargetAmount: 50000, AnnualReturn: 5.5, InvestmentHorizon: 10.
2025-05-18 16:35:24.748 +05:30 [INF] Calculated investment amount: 1293.8.
2025-05-18 16:35:24.751 +05:30 [INF] Calculating investment amount with PercentageSplit: 4.58, TargetAmount: 50000, AnnualReturn: 5.7, InvestmentHorizon: 10.
2025-05-18 16:35:24.753 +05:30 [INF] Calculated investment amount: 1315.48.
2025-05-18 16:35:24.755 +05:30 [INF] Calculating investment amount with PercentageSplit: 2.21, TargetAmount: 50000, AnnualReturn: 7.8, InvestmentHorizon: 10.
2025-05-18 16:35:24.759 +05:30 [INF] Calculated investment amount: 521.4.
2025-05-18 16:35:24.760 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.79, TargetAmount: 50000, AnnualReturn: 6.3, InvestmentHorizon: 10.
2025-05-18 16:35:24.762 +05:30 [INF] Calculated investment amount: 485.84.
2025-05-18 16:35:24.763 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.42, TargetAmount: 50000, AnnualReturn: 9.2, InvestmentHorizon: 10.
2025-05-18 16:35:24.765 +05:30 [INF] Calculated investment amount: 294.46.
2025-05-18 16:35:24.767 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.58, TargetAmount: 50000, AnnualReturn: 10.3, InvestmentHorizon: 10.
2025-05-18 16:35:24.769 +05:30 [INF] Calculated investment amount: 296.4.
2025-05-18 16:35:24.774 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.65, TargetAmount: 50000, AnnualReturn: 8.5, InvestmentHorizon: 10.
2025-05-18 16:35:24.778 +05:30 [INF] Calculated investment amount: 364.89.
2025-05-18 16:35:24.780 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.35, TargetAmount: 50000, AnnualReturn: 7, InvestmentHorizon: 10.
2025-05-18 16:35:24.782 +05:30 [INF] Calculated investment amount: 343.14.
2025-05-18 16:35:24.784 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.76, TargetAmount: 50000, AnnualReturn: 5.2, InvestmentHorizon: 10.
2025-05-18 16:35:24.786 +05:30 [INF] Calculated investment amount: 228.89.
2025-05-18 16:35:24.788 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.74, TargetAmount: 50000, AnnualReturn: 5, InvestmentHorizon: 10.
2025-05-18 16:35:24.792 +05:30 [INF] Calculated investment amount: 227.15.
2025-05-18 16:35:24.793 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.7, TargetAmount: 50000, AnnualReturn: 3.5, InvestmentHorizon: 10.
2025-05-18 16:35:24.795 +05:30 [INF] Calculated investment amount: 248.12.
2025-05-18 16:35:24.796 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.8, TargetAmount: 50000, AnnualReturn: 4, InvestmentHorizon: 10.
2025-05-18 16:35:24.799 +05:30 [INF] Calculated investment amount: 270.23.
2025-05-18 16:35:24.800 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 50000, AnnualReturn: 5.1, InvestmentHorizon: 10.
2025-05-18 16:35:24.802 +05:30 [INF] Calculated investment amount: 294.93.
2025-05-18 16:35:24.804 +05:30 [INF] Calculating investment amount with PercentageSplit: 1.03, TargetAmount: 50000, AnnualReturn: 5.4, InvestmentHorizon: 10.
2025-05-18 16:35:24.811 +05:30 [INF] Calculated investment amount: 304.37.
2025-05-18 16:35:24.816 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.91, TargetAmount: 50000, AnnualReturn: 8.9, InvestmentHorizon: 10.
2025-05-18 16:35:24.818 +05:30 [INF] Calculated investment amount: 193.97.
2025-05-18 16:35:24.819 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.97, TargetAmount: 50000, AnnualReturn: 9.5, InvestmentHorizon: 10.
2025-05-18 16:35:24.824 +05:30 [INF] Calculated investment amount: 195.7.
2025-05-18 16:35:24.826 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.6, TargetAmount: 50000, AnnualReturn: 6.7, InvestmentHorizon: 10.
2025-05-18 16:35:24.828 +05:30 [INF] Calculated investment amount: 156.85.
2025-05-18 16:35:24.829 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.65, TargetAmount: 50000, AnnualReturn: 7.3, InvestmentHorizon: 10.
2025-05-18 16:35:24.831 +05:30 [INF] Calculated investment amount: 160.65.
2025-05-18 16:35:24.833 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.96, TargetAmount: 50000, AnnualReturn: 10.2, InvestmentHorizon: 10.
2025-05-18 16:35:24.835 +05:30 [INF] Calculated investment amount: 181.73.
2025-05-18 16:35:24.836 +05:30 [INF] Calculating investment amount with PercentageSplit: 0.92, TargetAmount: 50000, AnnualReturn: 9.8, InvestmentHorizon: 10.
2025-05-18 16:35:24.843 +05:30 [INF] Calculated investment amount: 180.61.
2025-05-18 16:35:24.848 +05:30 [INF] Product allocations saved to ProductAllocations.json
2025-05-18 16:35:24.849 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:35:24.852 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest) in 172.2459ms
2025-05-18 16:35:24.854 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.CalculateProductAllocations (WisVest)'
2025-05-18 16:35:24.859 +05:30 [INF] Request finished HTTP/1.1 POST http://localhost:5251/api/ProductAllocation/calculate-product-allocations?targetAmount=50000&investmentHorizon=10 - 200 null application/json; charset=utf-8 191.6197ms
2025-05-18 16:35:24.872 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:35:24.873 +05:30 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:35:24.878 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.883 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.884 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/ProductAllocation/get-product-allocations - 204 null null 12.4609ms
2025-05-18 16:35:24.885 +05:30 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5251/api/Allocation/get-calculated-allocations - 204 null null 11.8836ms
2025-05-18 16:35:24.892 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - null null
2025-05-18 16:35:24.896 +05:30 [INF] Request starting HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - null null
2025-05-18 16:35:24.898 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.903 +05:30 [INF] CORS policy execution successful.
2025-05-18 16:35:24.904 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:35:24.907 +05:30 [INF] Executing endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:35:24.909 +05:30 [INF] Route matched with {action = "GetCalculatedAllocations", controller = "Allocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCalculatedAllocations() on controller WisVestAPI.Controllers.AllocationController (WisVest).
2025-05-18 16:35:24.910 +05:30 [INF] Route matched with {action = "GetProductAllocations", controller = "ProductAllocation"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductAllocations() on controller WisVestAPI.Controllers.ProductAllocationController (WisVest).
2025-05-18 16:35:24.912 +05:30 [INF] Attempting to read final allocation from JSON file: FinalAllocation.json
2025-05-18 16:35:24.917 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType3`2[[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[WisVestAPI.Models.Matrix.Product, WisVest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:35:24.917 +05:30 [INF] Final allocation JSON read successfully.
2025-05-18 16:35:24.919 +05:30 [INF] Executed action WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest) in 3.9693ms
2025-05-18 16:35:24.920 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-18 16:35:24.923 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.ProductAllocationController.GetProductAllocations (WisVest)'
2025-05-18 16:35:24.924 +05:30 [INF] Executed action WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest) in 12.4469ms
2025-05-18 16:35:24.926 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/ProductAllocation/get-product-allocations - 200 null application/json; charset=utf-8 30.843ms
2025-05-18 16:35:24.928 +05:30 [INF] Executed endpoint 'WisVestAPI.Controllers.AllocationController.GetCalculatedAllocations (WisVest)'
2025-05-18 16:35:24.932 +05:30 [INF] Request finished HTTP/1.1 GET http://localhost:5251/api/Allocation/get-calculated-allocations - 200 null application/json; charset=utf-8 40.8348ms
